<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1574" onload="init(evt)" viewBox="0 0 1200 1574" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1574" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1557.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1557.00"> </text><svg id="frames" x="10" width="1180" total_samples="20781"><g><title>[anon] (4 samples, 0.02%)</title><rect x="0.0000%" y="1493" width="0.0192%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1503.50"></text></g><g><title>[anon] (4 samples, 0.02%)</title><rect x="0.0000%" y="1477" width="0.0192%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1487.50"></text></g><g><title>&lt;tiny_http::common::HeaderField as core::fmt::Display&gt;::fmt (4 samples, 0.02%)</title><rect x="0.0000%" y="1461" width="0.0192%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1471.50"></text></g><g><title>core::fmt::Arguments::new_v1 (3 samples, 0.01%)</title><rect x="0.0048%" y="1445" width="0.0144%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="3"/><text x="0.2548%" y="1455.50"></text></g><g><title>free (12 samples, 0.06%)</title><rect x="0.8517%" y="1445" width="0.0577%" height="15" fill="rgb(208,68,35)" fg:x="177" fg:w="12"/><text x="1.1017%" y="1455.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="0.8517%" y="1429" width="0.0577%" height="15" fill="rgb(232,128,0)" fg:x="177" fg:w="12"/><text x="1.1017%" y="1439.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="0.8902%" y="1413" width="0.0192%" height="15" fill="rgb(207,160,47)" fg:x="185" fg:w="4"/><text x="1.1402%" y="1423.50"></text></g><g><title>[libc.so.6] (32 samples, 0.15%)</title><rect x="0.7651%" y="1461" width="0.1540%" height="15" fill="rgb(228,23,34)" fg:x="159" fg:w="32"/><text x="1.0151%" y="1471.50"></text></g><g><title>__call_tls_dtors (3 samples, 0.01%)</title><rect x="0.9191%" y="1461" width="0.0144%" height="15" fill="rgb(218,30,26)" fg:x="191" fg:w="3"/><text x="1.1691%" y="1471.50"></text></g><g><title>__ctype_init (85 samples, 0.41%)</title><rect x="0.9335%" y="1461" width="0.4090%" height="15" fill="rgb(220,122,19)" fg:x="194" fg:w="85"/><text x="1.1835%" y="1471.50"></text></g><g><title>zap_pmd_range.isra.0 (3 samples, 0.01%)</title><rect x="1.3522%" y="1269" width="0.0144%" height="15" fill="rgb(250,228,42)" fg:x="281" fg:w="3"/><text x="1.6022%" y="1279.50"></text></g><g><title>__madvise (6 samples, 0.03%)</title><rect x="1.3426%" y="1461" width="0.0289%" height="15" fill="rgb(240,193,28)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1471.50"></text></g><g><title>el0t_64_sync (6 samples, 0.03%)</title><rect x="1.3426%" y="1445" width="0.0289%" height="15" fill="rgb(216,20,37)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1455.50"></text></g><g><title>el0t_64_sync_handler (6 samples, 0.03%)</title><rect x="1.3426%" y="1429" width="0.0289%" height="15" fill="rgb(206,188,39)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1439.50"></text></g><g><title>el0_svc (6 samples, 0.03%)</title><rect x="1.3426%" y="1413" width="0.0289%" height="15" fill="rgb(217,207,13)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1423.50"></text></g><g><title>do_el0_svc (6 samples, 0.03%)</title><rect x="1.3426%" y="1397" width="0.0289%" height="15" fill="rgb(231,73,38)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1407.50"></text></g><g><title>el0_svc_common.constprop.0 (6 samples, 0.03%)</title><rect x="1.3426%" y="1381" width="0.0289%" height="15" fill="rgb(225,20,46)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1391.50"></text></g><g><title>invoke_syscall (6 samples, 0.03%)</title><rect x="1.3426%" y="1365" width="0.0289%" height="15" fill="rgb(210,31,41)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1375.50"></text></g><g><title>__arm64_sys_madvise (6 samples, 0.03%)</title><rect x="1.3426%" y="1349" width="0.0289%" height="15" fill="rgb(221,200,47)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1359.50"></text></g><g><title>do_madvise (6 samples, 0.03%)</title><rect x="1.3426%" y="1333" width="0.0289%" height="15" fill="rgb(226,26,5)" fg:x="279" fg:w="6"/><text x="1.5926%" y="1343.50"></text></g><g><title>zap_page_range (4 samples, 0.02%)</title><rect x="1.3522%" y="1317" width="0.0192%" height="15" fill="rgb(249,33,26)" fg:x="281" fg:w="4"/><text x="1.6022%" y="1327.50"></text></g><g><title>unmap_single_vma (4 samples, 0.02%)</title><rect x="1.3522%" y="1301" width="0.0192%" height="15" fill="rgb(235,183,28)" fg:x="281" fg:w="4"/><text x="1.6022%" y="1311.50"></text></g><g><title>unmap_page_range (4 samples, 0.02%)</title><rect x="1.3522%" y="1285" width="0.0192%" height="15" fill="rgb(221,5,38)" fg:x="281" fg:w="4"/><text x="1.6022%" y="1295.50"></text></g><g><title>__sigsetjmp (5 samples, 0.02%)</title><rect x="1.3714%" y="1461" width="0.0241%" height="15" fill="rgb(247,18,42)" fg:x="285" fg:w="5"/><text x="1.6214%" y="1471.50"></text></g><g><title>_setjmp (16 samples, 0.08%)</title><rect x="1.3955%" y="1461" width="0.0770%" height="15" fill="rgb(241,131,45)" fg:x="290" fg:w="16"/><text x="1.6455%" y="1471.50"></text></g><g><title>__arm64_sys_rseq (20 samples, 0.10%)</title><rect x="2.0259%" y="1381" width="0.0962%" height="15" fill="rgb(249,31,29)" fg:x="421" fg:w="20"/><text x="2.2759%" y="1391.50"></text></g><g><title>__arm64_sys_rt_sigprocmask (4 samples, 0.02%)</title><rect x="2.1221%" y="1381" width="0.0192%" height="15" fill="rgb(225,111,53)" fg:x="441" fg:w="4"/><text x="2.3721%" y="1391.50"></text></g><g><title>__arm64_sys_set_robust_list (13 samples, 0.06%)</title><rect x="2.1414%" y="1381" width="0.0626%" height="15" fill="rgb(238,160,17)" fg:x="445" fg:w="13"/><text x="2.3914%" y="1391.50"></text></g><g><title>__set_current_blocked (3 samples, 0.01%)</title><rect x="2.3627%" y="1349" width="0.0144%" height="15" fill="rgb(214,148,48)" fg:x="491" fg:w="3"/><text x="2.6127%" y="1359.50"></text></g><g><title>__arm64_sys_rt_sigprocmask (10 samples, 0.05%)</title><rect x="2.3483%" y="1365" width="0.0481%" height="15" fill="rgb(232,36,49)" fg:x="488" fg:w="10"/><text x="2.5983%" y="1375.50"></text></g><g><title>sigprocmask (4 samples, 0.02%)</title><rect x="2.3772%" y="1349" width="0.0192%" height="15" fill="rgb(209,103,24)" fg:x="494" fg:w="4"/><text x="2.6272%" y="1359.50"></text></g><g><title>get_random_u32 (38 samples, 0.18%)</title><rect x="2.4012%" y="1365" width="0.1829%" height="15" fill="rgb(229,88,8)" fg:x="499" fg:w="38"/><text x="2.6512%" y="1375.50"></text></g><g><title>get_user_pages_fast (3 samples, 0.01%)</title><rect x="2.6033%" y="1237" width="0.0144%" height="15" fill="rgb(213,181,19)" fg:x="541" fg:w="3"/><text x="2.8533%" y="1247.50"></text></g><g><title>internal_get_user_pages_fast (3 samples, 0.01%)</title><rect x="2.6033%" y="1221" width="0.0144%" height="15" fill="rgb(254,191,54)" fg:x="541" fg:w="3"/><text x="2.8533%" y="1231.50"></text></g><g><title>mm_release (7 samples, 0.03%)</title><rect x="2.5889%" y="1301" width="0.0337%" height="15" fill="rgb(241,83,37)" fg:x="538" fg:w="7"/><text x="2.8389%" y="1311.50"></text></g><g><title>do_futex (7 samples, 0.03%)</title><rect x="2.5889%" y="1285" width="0.0337%" height="15" fill="rgb(233,36,39)" fg:x="538" fg:w="7"/><text x="2.8389%" y="1295.50"></text></g><g><title>futex_wake (7 samples, 0.03%)</title><rect x="2.5889%" y="1269" width="0.0337%" height="15" fill="rgb(226,3,54)" fg:x="538" fg:w="7"/><text x="2.8389%" y="1279.50"></text></g><g><title>get_futex_key (7 samples, 0.03%)</title><rect x="2.5889%" y="1253" width="0.0337%" height="15" fill="rgb(245,192,40)" fg:x="538" fg:w="7"/><text x="2.8389%" y="1263.50"></text></g><g><title>exit_mm (9 samples, 0.04%)</title><rect x="2.5841%" y="1333" width="0.0433%" height="15" fill="rgb(238,167,29)" fg:x="537" fg:w="9"/><text x="2.8341%" y="1343.50"></text></g><g><title>exit_mm_release (9 samples, 0.04%)</title><rect x="2.5841%" y="1317" width="0.0433%" height="15" fill="rgb(232,182,51)" fg:x="537" fg:w="9"/><text x="2.8341%" y="1327.50"></text></g><g><title>make_task_dead (13 samples, 0.06%)</title><rect x="2.5841%" y="1365" width="0.0626%" height="15" fill="rgb(231,60,39)" fg:x="537" fg:w="13"/><text x="2.8341%" y="1375.50"></text></g><g><title>do_exit (13 samples, 0.06%)</title><rect x="2.5841%" y="1349" width="0.0626%" height="15" fill="rgb(208,69,12)" fg:x="537" fg:w="13"/><text x="2.8341%" y="1359.50"></text></g><g><title>sigprocmask (4 samples, 0.02%)</title><rect x="2.6466%" y="1365" width="0.0192%" height="15" fill="rgb(235,93,37)" fg:x="550" fg:w="4"/><text x="2.8966%" y="1375.50"></text></g><g><title>uaccess_ttbr0_disable (3 samples, 0.01%)</title><rect x="2.6659%" y="1365" width="0.0144%" height="15" fill="rgb(213,116,39)" fg:x="554" fg:w="3"/><text x="2.9159%" y="1375.50"></text></g><g><title>el0_svc_common.constprop.0 (253 samples, 1.22%)</title><rect x="1.4821%" y="1397" width="1.2175%" height="15" fill="rgb(222,207,29)" fg:x="308" fg:w="253"/><text x="1.7321%" y="1407.50"></text></g><g><title>invoke_syscall (103 samples, 0.50%)</title><rect x="2.2039%" y="1381" width="0.4956%" height="15" fill="rgb(206,96,30)" fg:x="458" fg:w="103"/><text x="2.4539%" y="1391.50"></text></g><g><title>uaccess_ttbr0_enable (4 samples, 0.02%)</title><rect x="2.6803%" y="1365" width="0.0192%" height="15" fill="rgb(218,138,4)" fg:x="557" fg:w="4"/><text x="2.9303%" y="1375.50"></text></g><g><title>do_el0_svc (270 samples, 1.30%)</title><rect x="1.4821%" y="1413" width="1.2993%" height="15" fill="rgb(250,191,14)" fg:x="308" fg:w="270"/><text x="1.7321%" y="1423.50"></text></g><g><title>invoke_syscall (17 samples, 0.08%)</title><rect x="2.6996%" y="1397" width="0.0818%" height="15" fill="rgb(239,60,40)" fg:x="561" fg:w="17"/><text x="2.9496%" y="1407.50"></text></g><g><title>clear_rseq_cs.isra.0 (9 samples, 0.04%)</title><rect x="2.8199%" y="1381" width="0.0433%" height="15" fill="rgb(206,27,48)" fg:x="586" fg:w="9"/><text x="3.0699%" y="1391.50"></text></g><g><title>rseq_get_rseq_cs.isra.0 (14 samples, 0.07%)</title><rect x="2.8632%" y="1381" width="0.0674%" height="15" fill="rgb(225,35,8)" fg:x="595" fg:w="14"/><text x="3.1132%" y="1391.50"></text></g><g><title>rseq_update_cpu_id (8 samples, 0.04%)</title><rect x="2.9306%" y="1381" width="0.0385%" height="15" fill="rgb(250,213,24)" fg:x="609" fg:w="8"/><text x="3.1806%" y="1391.50"></text></g><g><title>uaccess_ttbr0_disable (8 samples, 0.04%)</title><rect x="2.9691%" y="1381" width="0.0385%" height="15" fill="rgb(247,123,22)" fg:x="617" fg:w="8"/><text x="3.2191%" y="1391.50"></text></g><g><title>__rseq_handle_notify_resume (49 samples, 0.24%)</title><rect x="2.7958%" y="1397" width="0.2358%" height="15" fill="rgb(231,138,38)" fg:x="581" fg:w="49"/><text x="3.0458%" y="1407.50"></text></g><g><title>uaccess_ttbr0_enable (5 samples, 0.02%)</title><rect x="3.0076%" y="1381" width="0.0241%" height="15" fill="rgb(231,145,46)" fg:x="625" fg:w="5"/><text x="3.2576%" y="1391.50"></text></g><g><title>clear_rseq_cs.isra.0 (4 samples, 0.02%)</title><rect x="3.0316%" y="1397" width="0.0192%" height="15" fill="rgb(251,118,11)" fg:x="630" fg:w="4"/><text x="3.2816%" y="1407.50"></text></g><g><title>el0t_64_sync (329 samples, 1.58%)</title><rect x="1.4773%" y="1461" width="1.5832%" height="15" fill="rgb(217,147,25)" fg:x="307" fg:w="329"/><text x="1.7273%" y="1471.50"></text></g><g><title>el0t_64_sync_handler (329 samples, 1.58%)</title><rect x="1.4773%" y="1445" width="1.5832%" height="15" fill="rgb(247,81,37)" fg:x="307" fg:w="329"/><text x="1.7273%" y="1455.50"></text></g><g><title>el0_svc (329 samples, 1.58%)</title><rect x="1.4773%" y="1429" width="1.5832%" height="15" fill="rgb(209,12,38)" fg:x="307" fg:w="329"/><text x="1.7273%" y="1439.50"></text></g><g><title>do_notify_resume (58 samples, 0.28%)</title><rect x="2.7814%" y="1413" width="0.2791%" height="15" fill="rgb(227,1,9)" fg:x="578" fg:w="58"/><text x="3.0314%" y="1423.50"></text></g><g><title>std::io::stdio::set_output_capture (3 samples, 0.01%)</title><rect x="3.2530%" y="1381" width="0.0144%" height="15" fill="rgb(248,47,43)" fg:x="676" fg:w="3"/><text x="3.5030%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.10%)</title><rect x="3.3203%" y="1157" width="0.1011%" height="15" fill="rgb(221,10,30)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.10%)</title><rect x="3.3203%" y="1141" width="0.1011%" height="15" fill="rgb(210,229,1)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.10%)</title><rect x="3.3203%" y="1125" width="0.1011%" height="15" fill="rgb(222,148,37)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.10%)</title><rect x="3.3203%" y="1109" width="0.1011%" height="15" fill="rgb(234,67,33)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.10%)</title><rect x="3.3203%" y="1093" width="0.1011%" height="15" fill="rgb(247,98,35)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.10%)</title><rect x="3.3203%" y="1077" width="0.1011%" height="15" fill="rgb(247,138,52)" fg:x="690" fg:w="21"/><text x="3.5703%" y="1087.50"></text></g><g><title>malloc (20 samples, 0.10%)</title><rect x="3.3252%" y="1061" width="0.0962%" height="15" fill="rgb(213,79,30)" fg:x="691" fg:w="20"/><text x="3.5752%" y="1071.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="3.3300%" y="1045" width="0.0914%" height="15" fill="rgb(246,177,23)" fg:x="692" fg:w="19"/><text x="3.5800%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (22 samples, 0.11%)</title><rect x="3.3203%" y="1253" width="0.1059%" height="15" fill="rgb(230,62,27)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (22 samples, 0.11%)</title><rect x="3.3203%" y="1237" width="0.1059%" height="15" fill="rgb(216,154,8)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.11%)</title><rect x="3.3203%" y="1221" width="0.1059%" height="15" fill="rgb(244,35,45)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.11%)</title><rect x="3.3203%" y="1205" width="0.1059%" height="15" fill="rgb(251,115,12)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.11%)</title><rect x="3.3203%" y="1189" width="0.1059%" height="15" fill="rgb(240,54,50)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.11%)</title><rect x="3.3203%" y="1173" width="0.1059%" height="15" fill="rgb(233,84,52)" fg:x="690" fg:w="22"/><text x="3.5703%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="3.4262%" y="1253" width="0.0722%" height="15" fill="rgb(207,117,47)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="3.4262%" y="1237" width="0.0722%" height="15" fill="rgb(249,43,39)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.07%)</title><rect x="3.4262%" y="1221" width="0.0722%" height="15" fill="rgb(209,38,44)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.07%)</title><rect x="3.4262%" y="1205" width="0.0722%" height="15" fill="rgb(236,212,23)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="3.4262%" y="1189" width="0.0722%" height="15" fill="rgb(242,79,21)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="3.4262%" y="1173" width="0.0722%" height="15" fill="rgb(211,96,35)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1183.50"></text></g><g><title>malloc (15 samples, 0.07%)</title><rect x="3.4262%" y="1157" width="0.0722%" height="15" fill="rgb(253,215,40)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1167.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="3.4262%" y="1141" width="0.0722%" height="15" fill="rgb(211,81,21)" fg:x="712" fg:w="15"/><text x="3.6762%" y="1151.50"></text></g><g><title>core::fmt::Formatter::new (3 samples, 0.01%)</title><rect x="3.5561%" y="1029" width="0.0144%" height="15" fill="rgb(208,190,38)" fg:x="739" fg:w="3"/><text x="3.8061%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.18%)</title><rect x="3.5850%" y="933" width="0.1780%" height="15" fill="rgb(235,213,38)" fg:x="745" fg:w="37"/><text x="3.8350%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.18%)</title><rect x="3.5850%" y="917" width="0.1780%" height="15" fill="rgb(237,122,38)" fg:x="745" fg:w="37"/><text x="3.8350%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.18%)</title><rect x="3.5850%" y="901" width="0.1780%" height="15" fill="rgb(244,218,35)" fg:x="745" fg:w="37"/><text x="3.8350%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.14%)</title><rect x="3.6187%" y="885" width="0.1444%" height="15" fill="rgb(240,68,47)" fg:x="752" fg:w="30"/><text x="3.8687%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.14%)</title><rect x="3.6187%" y="869" width="0.1444%" height="15" fill="rgb(210,16,53)" fg:x="752" fg:w="30"/><text x="3.8687%" y="879.50"></text></g><g><title>malloc (26 samples, 0.13%)</title><rect x="3.6379%" y="853" width="0.1251%" height="15" fill="rgb(235,124,12)" fg:x="756" fg:w="26"/><text x="3.8879%" y="863.50"></text></g><g><title>[libc.so.6] (21 samples, 0.10%)</title><rect x="3.6620%" y="837" width="0.1011%" height="15" fill="rgb(224,169,11)" fg:x="761" fg:w="21"/><text x="3.9120%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (48 samples, 0.23%)</title><rect x="3.5706%" y="1013" width="0.2310%" height="15" fill="rgb(250,166,2)" fg:x="742" fg:w="48"/><text x="3.8206%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (45 samples, 0.22%)</title><rect x="3.5850%" y="997" width="0.2165%" height="15" fill="rgb(242,216,29)" fg:x="745" fg:w="45"/><text x="3.8350%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.22%)</title><rect x="3.5850%" y="981" width="0.2165%" height="15" fill="rgb(230,116,27)" fg:x="745" fg:w="45"/><text x="3.8350%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.22%)</title><rect x="3.5850%" y="965" width="0.2165%" height="15" fill="rgb(228,99,48)" fg:x="745" fg:w="45"/><text x="3.8350%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.22%)</title><rect x="3.5850%" y="949" width="0.2165%" height="15" fill="rgb(253,11,6)" fg:x="745" fg:w="45"/><text x="3.8350%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.04%)</title><rect x="3.7631%" y="933" width="0.0385%" height="15" fill="rgb(247,143,39)" fg:x="782" fg:w="8"/><text x="4.0131%" y="943.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="3.7631%" y="917" width="0.0385%" height="15" fill="rgb(236,97,10)" fg:x="782" fg:w="8"/><text x="4.0131%" y="927.50"></text></g><g><title>&lt;tiny_http::common::HeaderField as core::fmt::Display&gt;::fmt (65 samples, 0.31%)</title><rect x="3.5080%" y="1061" width="0.3128%" height="15" fill="rgb(233,208,19)" fg:x="729" fg:w="65"/><text x="3.7580%" y="1071.50"></text></g><g><title>core::fmt::write (62 samples, 0.30%)</title><rect x="3.5224%" y="1045" width="0.2983%" height="15" fill="rgb(216,164,2)" fg:x="732" fg:w="62"/><text x="3.7724%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (52 samples, 0.25%)</title><rect x="3.5706%" y="1029" width="0.2502%" height="15" fill="rgb(220,129,5)" fg:x="742" fg:w="52"/><text x="3.8206%" y="1039.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.02%)</title><rect x="3.8015%" y="1013" width="0.0192%" height="15" fill="rgb(242,17,10)" fg:x="790" fg:w="4"/><text x="4.0515%" y="1023.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (66 samples, 0.32%)</title><rect x="3.5080%" y="1077" width="0.3176%" height="15" fill="rgb(242,107,0)" fg:x="729" fg:w="66"/><text x="3.7580%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (74 samples, 0.36%)</title><rect x="3.5080%" y="1109" width="0.3561%" height="15" fill="rgb(251,28,31)" fg:x="729" fg:w="74"/><text x="3.7580%" y="1119.50"></text></g><g><title>rouille::Server&lt;F&gt;::process::{{closure}}::{{closure}} (74 samples, 0.36%)</title><rect x="3.5080%" y="1093" width="0.3561%" height="15" fill="rgb(233,223,10)" fg:x="729" fg:w="74"/><text x="3.7580%" y="1103.50"></text></g><g><title>&lt;ascii::ascii_string::AsciiString as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="3.8256%" y="1077" width="0.0385%" height="15" fill="rgb(215,21,27)" fg:x="795" fg:w="8"/><text x="4.0756%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="3.8256%" y="1061" width="0.0385%" height="15" fill="rgb(232,23,21)" fg:x="795" fg:w="8"/><text x="4.0756%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.04%)</title><rect x="3.8256%" y="1045" width="0.0385%" height="15" fill="rgb(244,5,23)" fg:x="795" fg:w="8"/><text x="4.0756%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.04%)</title><rect x="3.8256%" y="1029" width="0.0385%" height="15" fill="rgb(226,81,46)" fg:x="795" fg:w="8"/><text x="4.0756%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.04%)</title><rect x="3.8256%" y="1013" width="0.0385%" height="15" fill="rgb(247,70,30)" fg:x="795" fg:w="8"/><text x="4.0756%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6 samples, 0.03%)</title><rect x="3.8352%" y="997" width="0.0289%" height="15" fill="rgb(212,68,19)" fg:x="797" fg:w="6"/><text x="4.0852%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="3.8352%" y="981" width="0.0289%" height="15" fill="rgb(240,187,13)" fg:x="797" fg:w="6"/><text x="4.0852%" y="991.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="3.8352%" y="965" width="0.0289%" height="15" fill="rgb(223,113,26)" fg:x="797" fg:w="6"/><text x="4.0852%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (78 samples, 0.38%)</title><rect x="3.4984%" y="1189" width="0.3753%" height="15" fill="rgb(206,192,2)" fg:x="727" fg:w="78"/><text x="3.7484%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (78 samples, 0.38%)</title><rect x="3.4984%" y="1173" width="0.3753%" height="15" fill="rgb(241,108,4)" fg:x="727" fg:w="78"/><text x="3.7484%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (78 samples, 0.38%)</title><rect x="3.4984%" y="1157" width="0.3753%" height="15" fill="rgb(247,173,49)" fg:x="727" fg:w="78"/><text x="3.7484%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (78 samples, 0.38%)</title><rect x="3.4984%" y="1141" width="0.3753%" height="15" fill="rgb(224,114,35)" fg:x="727" fg:w="78"/><text x="3.7484%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (76 samples, 0.37%)</title><rect x="3.5080%" y="1125" width="0.3657%" height="15" fill="rgb(245,159,27)" fg:x="729" fg:w="76"/><text x="3.7580%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (95 samples, 0.46%)</title><rect x="3.4984%" y="1253" width="0.4571%" height="15" fill="rgb(245,172,44)" fg:x="727" fg:w="95"/><text x="3.7484%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (95 samples, 0.46%)</title><rect x="3.4984%" y="1237" width="0.4571%" height="15" fill="rgb(236,23,11)" fg:x="727" fg:w="95"/><text x="3.7484%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (95 samples, 0.46%)</title><rect x="3.4984%" y="1221" width="0.4571%" height="15" fill="rgb(205,117,38)" fg:x="727" fg:w="95"/><text x="3.7484%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (95 samples, 0.46%)</title><rect x="3.4984%" y="1205" width="0.4571%" height="15" fill="rgb(237,72,25)" fg:x="727" fg:w="95"/><text x="3.7484%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.08%)</title><rect x="3.8737%" y="1189" width="0.0818%" height="15" fill="rgb(244,70,9)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.08%)</title><rect x="3.8737%" y="1173" width="0.0818%" height="15" fill="rgb(217,125,39)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.08%)</title><rect x="3.8737%" y="1157" width="0.0818%" height="15" fill="rgb(235,36,10)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.08%)</title><rect x="3.8737%" y="1141" width="0.0818%" height="15" fill="rgb(251,123,47)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.08%)</title><rect x="3.8737%" y="1125" width="0.0818%" height="15" fill="rgb(221,13,13)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.08%)</title><rect x="3.8737%" y="1109" width="0.0818%" height="15" fill="rgb(238,131,9)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.08%)</title><rect x="3.8737%" y="1093" width="0.0818%" height="15" fill="rgb(211,50,8)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1103.50"></text></g><g><title>malloc (17 samples, 0.08%)</title><rect x="3.8737%" y="1077" width="0.0818%" height="15" fill="rgb(245,182,24)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1087.50"></text></g><g><title>[libc.so.6] (17 samples, 0.08%)</title><rect x="3.8737%" y="1061" width="0.0818%" height="15" fill="rgb(242,14,37)" fg:x="805" fg:w="17"/><text x="4.1237%" y="1071.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="3.9940%" y="1173" width="0.0241%" height="15" fill="rgb(246,228,12)" fg:x="830" fg:w="5"/><text x="4.2440%" y="1183.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.02%)</title><rect x="3.9940%" y="1157" width="0.0241%" height="15" fill="rgb(213,55,15)" fg:x="830" fg:w="5"/><text x="4.2440%" y="1167.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="3.9940%" y="1141" width="0.0241%" height="15" fill="rgb(209,9,3)" fg:x="830" fg:w="5"/><text x="4.2440%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="3.9988%" y="1125" width="0.0192%" height="15" fill="rgb(230,59,30)" fg:x="831" fg:w="4"/><text x="4.2488%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="3.9988%" y="1109" width="0.0192%" height="15" fill="rgb(209,121,21)" fg:x="831" fg:w="4"/><text x="4.2488%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="3.9988%" y="1093" width="0.0192%" height="15" fill="rgb(220,109,13)" fg:x="831" fg:w="4"/><text x="4.2488%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="3.9988%" y="1077" width="0.0192%" height="15" fill="rgb(232,18,1)" fg:x="831" fg:w="4"/><text x="4.2488%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="3.9988%" y="1061" width="0.0192%" height="15" fill="rgb(215,41,42)" fg:x="831" fg:w="4"/><text x="4.2488%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.21%)</title><rect x="4.0566%" y="901" width="0.2069%" height="15" fill="rgb(224,123,36)" fg:x="843" fg:w="43"/><text x="4.3066%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.21%)</title><rect x="4.0566%" y="885" width="0.2069%" height="15" fill="rgb(240,125,3)" fg:x="843" fg:w="43"/><text x="4.3066%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.21%)</title><rect x="4.0566%" y="869" width="0.2069%" height="15" fill="rgb(205,98,50)" fg:x="843" fg:w="43"/><text x="4.3066%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.21%)</title><rect x="4.0566%" y="853" width="0.2069%" height="15" fill="rgb(205,185,37)" fg:x="843" fg:w="43"/><text x="4.3066%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.21%)</title><rect x="4.0566%" y="837" width="0.2069%" height="15" fill="rgb(238,207,15)" fg:x="843" fg:w="43"/><text x="4.3066%" y="847.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.21%)</title><rect x="4.0566%" y="821" width="0.2069%" height="15" fill="rgb(213,199,42)" fg:x="843" fg:w="43"/><text x="4.3066%" y="831.50"></text></g><g><title>malloc (43 samples, 0.21%)</title><rect x="4.0566%" y="805" width="0.2069%" height="15" fill="rgb(235,201,11)" fg:x="843" fg:w="43"/><text x="4.3066%" y="815.50"></text></g><g><title>[libc.so.6] (42 samples, 0.20%)</title><rect x="4.0614%" y="789" width="0.2021%" height="15" fill="rgb(207,46,11)" fg:x="844" fg:w="42"/><text x="4.3114%" y="799.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="4.2443%" y="773" width="0.0192%" height="15" fill="rgb(241,35,35)" fg:x="882" fg:w="4"/><text x="4.4943%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (48 samples, 0.23%)</title><rect x="4.0518%" y="981" width="0.2310%" height="15" fill="rgb(243,32,47)" fg:x="842" fg:w="48"/><text x="4.3018%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.23%)</title><rect x="4.0566%" y="965" width="0.2262%" height="15" fill="rgb(247,202,23)" fg:x="843" fg:w="47"/><text x="4.3066%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.23%)</title><rect x="4.0566%" y="949" width="0.2262%" height="15" fill="rgb(219,102,11)" fg:x="843" fg:w="47"/><text x="4.3066%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.23%)</title><rect x="4.0566%" y="933" width="0.2262%" height="15" fill="rgb(243,110,44)" fg:x="843" fg:w="47"/><text x="4.3066%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.23%)</title><rect x="4.0566%" y="917" width="0.2262%" height="15" fill="rgb(222,74,54)" fg:x="843" fg:w="47"/><text x="4.3066%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="4.2635%" y="901" width="0.0192%" height="15" fill="rgb(216,99,12)" fg:x="886" fg:w="4"/><text x="4.5135%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="4.2635%" y="885" width="0.0192%" height="15" fill="rgb(226,22,26)" fg:x="886" fg:w="4"/><text x="4.5135%" y="895.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="4.2635%" y="869" width="0.0192%" height="15" fill="rgb(217,163,10)" fg:x="886" fg:w="4"/><text x="4.5135%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.20%)</title><rect x="4.2828%" y="885" width="0.2021%" height="15" fill="rgb(213,25,53)" fg:x="890" fg:w="42"/><text x="4.5328%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.20%)</title><rect x="4.2828%" y="869" width="0.2021%" height="15" fill="rgb(252,105,26)" fg:x="890" fg:w="42"/><text x="4.5328%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.20%)</title><rect x="4.2828%" y="853" width="0.2021%" height="15" fill="rgb(220,39,43)" fg:x="890" fg:w="42"/><text x="4.5328%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.20%)</title><rect x="4.2828%" y="837" width="0.2021%" height="15" fill="rgb(229,68,48)" fg:x="890" fg:w="42"/><text x="4.5328%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.20%)</title><rect x="4.2828%" y="821" width="0.2021%" height="15" fill="rgb(252,8,32)" fg:x="890" fg:w="42"/><text x="4.5328%" y="831.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.20%)</title><rect x="4.2828%" y="805" width="0.2021%" height="15" fill="rgb(223,20,43)" fg:x="890" fg:w="42"/><text x="4.5328%" y="815.50"></text></g><g><title>malloc (42 samples, 0.20%)</title><rect x="4.2828%" y="789" width="0.2021%" height="15" fill="rgb(229,81,49)" fg:x="890" fg:w="42"/><text x="4.5328%" y="799.50"></text></g><g><title>[libc.so.6] (39 samples, 0.19%)</title><rect x="4.2972%" y="773" width="0.1877%" height="15" fill="rgb(236,28,36)" fg:x="893" fg:w="39"/><text x="4.5472%" y="783.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="4.4512%" y="757" width="0.0337%" height="15" fill="rgb(249,185,26)" fg:x="925" fg:w="7"/><text x="4.7012%" y="767.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (56 samples, 0.27%)</title><rect x="4.2828%" y="981" width="0.2695%" height="15" fill="rgb(249,174,33)" fg:x="890" fg:w="56"/><text x="4.5328%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (56 samples, 0.27%)</title><rect x="4.2828%" y="965" width="0.2695%" height="15" fill="rgb(233,201,37)" fg:x="890" fg:w="56"/><text x="4.5328%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 0.27%)</title><rect x="4.2828%" y="949" width="0.2695%" height="15" fill="rgb(221,78,26)" fg:x="890" fg:w="56"/><text x="4.5328%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.27%)</title><rect x="4.2828%" y="933" width="0.2695%" height="15" fill="rgb(250,127,30)" fg:x="890" fg:w="56"/><text x="4.5328%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.27%)</title><rect x="4.2828%" y="917" width="0.2695%" height="15" fill="rgb(230,49,44)" fg:x="890" fg:w="56"/><text x="4.5328%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.27%)</title><rect x="4.2828%" y="901" width="0.2695%" height="15" fill="rgb(229,67,23)" fg:x="890" fg:w="56"/><text x="4.5328%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.07%)</title><rect x="4.4849%" y="885" width="0.0674%" height="15" fill="rgb(249,83,47)" fg:x="932" fg:w="14"/><text x="4.7349%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.07%)</title><rect x="4.4849%" y="869" width="0.0674%" height="15" fill="rgb(215,43,3)" fg:x="932" fg:w="14"/><text x="4.7349%" y="879.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="4.4849%" y="853" width="0.0674%" height="15" fill="rgb(238,154,13)" fg:x="932" fg:w="14"/><text x="4.7349%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (5 samples, 0.02%)</title><rect x="4.5522%" y="981" width="0.0241%" height="15" fill="rgb(219,56,2)" fg:x="946" fg:w="5"/><text x="4.8022%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.02%)</title><rect x="4.5522%" y="965" width="0.0241%" height="15" fill="rgb(233,0,4)" fg:x="946" fg:w="5"/><text x="4.8022%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (29 samples, 0.14%)</title><rect x="4.5763%" y="933" width="0.1396%" height="15" fill="rgb(235,30,7)" fg:x="951" fg:w="29"/><text x="4.8263%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (29 samples, 0.14%)</title><rect x="4.5763%" y="917" width="0.1396%" height="15" fill="rgb(250,79,13)" fg:x="951" fg:w="29"/><text x="4.8263%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.14%)</title><rect x="4.5763%" y="901" width="0.1396%" height="15" fill="rgb(211,146,34)" fg:x="951" fg:w="29"/><text x="4.8263%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.14%)</title><rect x="4.5763%" y="885" width="0.1396%" height="15" fill="rgb(228,22,38)" fg:x="951" fg:w="29"/><text x="4.8263%" y="895.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.14%)</title><rect x="4.5763%" y="869" width="0.1396%" height="15" fill="rgb(235,168,5)" fg:x="951" fg:w="29"/><text x="4.8263%" y="879.50"></text></g><g><title>malloc (29 samples, 0.14%)</title><rect x="4.5763%" y="853" width="0.1396%" height="15" fill="rgb(221,155,16)" fg:x="951" fg:w="29"/><text x="4.8263%" y="863.50"></text></g><g><title>[libc.so.6] (29 samples, 0.14%)</title><rect x="4.5763%" y="837" width="0.1396%" height="15" fill="rgb(215,215,53)" fg:x="951" fg:w="29"/><text x="4.8263%" y="847.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="4.6437%" y="821" width="0.0722%" height="15" fill="rgb(223,4,10)" fg:x="965" fg:w="15"/><text x="4.8937%" y="831.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (142 samples, 0.68%)</title><rect x="4.0373%" y="1045" width="0.6833%" height="15" fill="rgb(234,103,6)" fg:x="839" fg:w="142"/><text x="4.2873%" y="1055.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (142 samples, 0.68%)</title><rect x="4.0373%" y="1029" width="0.6833%" height="15" fill="rgb(227,97,0)" fg:x="839" fg:w="142"/><text x="4.2873%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (141 samples, 0.68%)</title><rect x="4.0422%" y="1013" width="0.6785%" height="15" fill="rgb(234,150,53)" fg:x="840" fg:w="141"/><text x="4.2922%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (141 samples, 0.68%)</title><rect x="4.0422%" y="997" width="0.6785%" height="15" fill="rgb(228,201,54)" fg:x="840" fg:w="141"/><text x="4.2922%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (30 samples, 0.14%)</title><rect x="4.5763%" y="981" width="0.1444%" height="15" fill="rgb(222,22,37)" fg:x="951" fg:w="30"/><text x="4.8263%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (30 samples, 0.14%)</title><rect x="4.5763%" y="965" width="0.1444%" height="15" fill="rgb(237,53,32)" fg:x="951" fg:w="30"/><text x="4.8263%" y="975.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (30 samples, 0.14%)</title><rect x="4.5763%" y="949" width="0.1444%" height="15" fill="rgb(233,25,53)" fg:x="951" fg:w="30"/><text x="4.8263%" y="959.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (147 samples, 0.71%)</title><rect x="4.0181%" y="1173" width="0.7074%" height="15" fill="rgb(210,40,34)" fg:x="835" fg:w="147"/><text x="4.2681%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (147 samples, 0.71%)</title><rect x="4.0181%" y="1157" width="0.7074%" height="15" fill="rgb(241,220,44)" fg:x="835" fg:w="147"/><text x="4.2681%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (147 samples, 0.71%)</title><rect x="4.0181%" y="1141" width="0.7074%" height="15" fill="rgb(235,28,35)" fg:x="835" fg:w="147"/><text x="4.2681%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (144 samples, 0.69%)</title><rect x="4.0325%" y="1125" width="0.6929%" height="15" fill="rgb(210,56,17)" fg:x="838" fg:w="144"/><text x="4.2825%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (144 samples, 0.69%)</title><rect x="4.0325%" y="1109" width="0.6929%" height="15" fill="rgb(224,130,29)" fg:x="838" fg:w="144"/><text x="4.2825%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (143 samples, 0.69%)</title><rect x="4.0373%" y="1093" width="0.6881%" height="15" fill="rgb(235,212,8)" fg:x="839" fg:w="143"/><text x="4.2873%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (143 samples, 0.69%)</title><rect x="4.0373%" y="1077" width="0.6881%" height="15" fill="rgb(223,33,50)" fg:x="839" fg:w="143"/><text x="4.2873%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (143 samples, 0.69%)</title><rect x="4.0373%" y="1061" width="0.6881%" height="15" fill="rgb(219,149,13)" fg:x="839" fg:w="143"/><text x="4.2873%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="4.7255%" y="1045" width="0.0289%" height="15" fill="rgb(250,156,29)" fg:x="982" fg:w="6"/><text x="4.9755%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="4.7255%" y="1029" width="0.0289%" height="15" fill="rgb(216,193,19)" fg:x="982" fg:w="6"/><text x="4.9755%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.03%)</title><rect x="4.7255%" y="1013" width="0.0289%" height="15" fill="rgb(216,135,14)" fg:x="982" fg:w="6"/><text x="4.9755%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="4.7255%" y="997" width="0.0289%" height="15" fill="rgb(241,47,5)" fg:x="982" fg:w="6"/><text x="4.9755%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="4.7255%" y="981" width="0.0289%" height="15" fill="rgb(233,42,35)" fg:x="982" fg:w="6"/><text x="4.9755%" y="991.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="4.7255%" y="965" width="0.0289%" height="15" fill="rgb(231,13,6)" fg:x="982" fg:w="6"/><text x="4.9755%" y="975.50"></text></g><g><title>malloc (6 samples, 0.03%)</title><rect x="4.7255%" y="949" width="0.0289%" height="15" fill="rgb(207,181,40)" fg:x="982" fg:w="6"/><text x="4.9755%" y="959.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="4.7399%" y="933" width="0.0144%" height="15" fill="rgb(254,173,49)" fg:x="985" fg:w="3"/><text x="4.9899%" y="943.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (20 samples, 0.10%)</title><rect x="4.7255%" y="1173" width="0.0962%" height="15" fill="rgb(221,1,38)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (20 samples, 0.10%)</title><rect x="4.7255%" y="1157" width="0.0962%" height="15" fill="rgb(206,124,46)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (20 samples, 0.10%)</title><rect x="4.7255%" y="1141" width="0.0962%" height="15" fill="rgb(249,21,11)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (20 samples, 0.10%)</title><rect x="4.7255%" y="1125" width="0.0962%" height="15" fill="rgb(222,201,40)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.10%)</title><rect x="4.7255%" y="1109" width="0.0962%" height="15" fill="rgb(235,61,29)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.10%)</title><rect x="4.7255%" y="1093" width="0.0962%" height="15" fill="rgb(219,207,3)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.10%)</title><rect x="4.7255%" y="1077" width="0.0962%" height="15" fill="rgb(222,56,46)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.10%)</title><rect x="4.7255%" y="1061" width="0.0962%" height="15" fill="rgb(239,76,54)" fg:x="982" fg:w="20"/><text x="4.9755%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.07%)</title><rect x="4.7543%" y="1045" width="0.0674%" height="15" fill="rgb(231,124,27)" fg:x="988" fg:w="14"/><text x="5.0043%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.07%)</title><rect x="4.7543%" y="1029" width="0.0674%" height="15" fill="rgb(249,195,6)" fg:x="988" fg:w="14"/><text x="5.0043%" y="1039.50"></text></g><g><title>[libc.so.6] (13 samples, 0.06%)</title><rect x="4.7592%" y="1013" width="0.0626%" height="15" fill="rgb(237,174,47)" fg:x="989" fg:w="13"/><text x="5.0092%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.03%)</title><rect x="4.8265%" y="1109" width="0.0289%" height="15" fill="rgb(206,201,31)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.03%)</title><rect x="4.8265%" y="1093" width="0.0289%" height="15" fill="rgb(231,57,52)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.03%)</title><rect x="4.8265%" y="1077" width="0.0289%" height="15" fill="rgb(248,177,22)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1087.50"></text></g><g><title>realloc (6 samples, 0.03%)</title><rect x="4.8265%" y="1061" width="0.0289%" height="15" fill="rgb(215,211,37)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1071.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="4.8265%" y="1045" width="0.0289%" height="15" fill="rgb(241,128,51)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1055.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="4.8265%" y="1029" width="0.0289%" height="15" fill="rgb(227,165,31)" fg:x="1003" fg:w="6"/><text x="5.0765%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.03%)</title><rect x="4.8265%" y="1157" width="0.0337%" height="15" fill="rgb(228,167,24)" fg:x="1003" fg:w="7"/><text x="5.0765%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.03%)</title><rect x="4.8265%" y="1141" width="0.0337%" height="15" fill="rgb(228,143,12)" fg:x="1003" fg:w="7"/><text x="5.0765%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="4.8265%" y="1125" width="0.0337%" height="15" fill="rgb(249,149,8)" fg:x="1003" fg:w="7"/><text x="5.0765%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.05%)</title><rect x="4.8217%" y="1173" width="0.0529%" height="15" fill="rgb(243,35,44)" fg:x="1002" fg:w="11"/><text x="5.0717%" y="1183.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="4.8602%" y="1157" width="0.0144%" height="15" fill="rgb(246,89,9)" fg:x="1010" fg:w="3"/><text x="5.1102%" y="1167.50"></text></g><g><title>const_hex::decode_checked (3 samples, 0.01%)</title><rect x="4.8843%" y="1061" width="0.0144%" height="15" fill="rgb(233,213,13)" fg:x="1015" fg:w="3"/><text x="5.1343%" y="1071.50"></text></g><g><title>const_hex::arch::generic::decode_checked (3 samples, 0.01%)</title><rect x="4.8843%" y="1045" width="0.0144%" height="15" fill="rgb(233,141,41)" fg:x="1015" fg:w="3"/><text x="5.1343%" y="1055.50"></text></g><g><title>const_hex::arch::generic::decode_maybe_check (3 samples, 0.01%)</title><rect x="4.8843%" y="1029" width="0.0144%" height="15" fill="rgb(239,167,4)" fg:x="1015" fg:w="3"/><text x="5.1343%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.03%)</title><rect x="4.8746%" y="1173" width="0.0337%" height="15" fill="rgb(209,217,16)" fg:x="1013" fg:w="7"/><text x="5.1246%" y="1183.50"></text></g><g><title>server::start_server::{{closure}}::{{closure}} (6 samples, 0.03%)</title><rect x="4.8795%" y="1157" width="0.0289%" height="15" fill="rgb(219,88,35)" fg:x="1014" fg:w="6"/><text x="5.1295%" y="1167.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.03%)</title><rect x="4.8795%" y="1141" width="0.0289%" height="15" fill="rgb(220,193,23)" fg:x="1014" fg:w="6"/><text x="5.1295%" y="1151.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::str::traits::FromStr&gt;::from_str (6 samples, 0.03%)</title><rect x="4.8795%" y="1125" width="0.0289%" height="15" fill="rgb(230,90,52)" fg:x="1014" fg:w="6"/><text x="5.1295%" y="1135.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::str::traits::FromStr&gt;::from_str (6 samples, 0.03%)</title><rect x="4.8795%" y="1109" width="0.0289%" height="15" fill="rgb(252,106,19)" fg:x="1014" fg:w="6"/><text x="5.1295%" y="1119.50"></text></g><g><title>const_hex::decode_to_slice (5 samples, 0.02%)</title><rect x="4.8843%" y="1093" width="0.0241%" height="15" fill="rgb(206,74,20)" fg:x="1015" fg:w="5"/><text x="5.1343%" y="1103.50"></text></g><g><title>const_hex::decode_to_slice_inner (5 samples, 0.02%)</title><rect x="4.8843%" y="1077" width="0.0241%" height="15" fill="rgb(230,138,44)" fg:x="1015" fg:w="5"/><text x="5.1343%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.02%)</title><rect x="4.9083%" y="1173" width="0.0192%" height="15" fill="rgb(235,182,43)" fg:x="1020" fg:w="4"/><text x="5.1583%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.06%)</title><rect x="4.9372%" y="1109" width="0.0626%" height="15" fill="rgb(242,16,51)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.06%)</title><rect x="4.9372%" y="1093" width="0.0626%" height="15" fill="rgb(248,9,4)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.06%)</title><rect x="4.9372%" y="1077" width="0.0626%" height="15" fill="rgb(210,31,22)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.06%)</title><rect x="4.9372%" y="1061" width="0.0626%" height="15" fill="rgb(239,54,39)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.06%)</title><rect x="4.9372%" y="1045" width="0.0626%" height="15" fill="rgb(230,99,41)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.06%)</title><rect x="4.9372%" y="1029" width="0.0626%" height="15" fill="rgb(253,106,12)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1039.50"></text></g><g><title>free (13 samples, 0.06%)</title><rect x="4.9372%" y="1013" width="0.0626%" height="15" fill="rgb(213,46,41)" fg:x="1026" fg:w="13"/><text x="5.1872%" y="1023.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="4.9661%" y="997" width="0.0337%" height="15" fill="rgb(215,133,35)" fg:x="1032" fg:w="7"/><text x="5.2161%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.05%)</title><rect x="5.0094%" y="933" width="0.0529%" height="15" fill="rgb(213,28,5)" fg:x="1041" fg:w="11"/><text x="5.2594%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.05%)</title><rect x="5.0094%" y="917" width="0.0529%" height="15" fill="rgb(215,77,49)" fg:x="1041" fg:w="11"/><text x="5.2594%" y="927.50"></text></g><g><title>free (11 samples, 0.05%)</title><rect x="5.0094%" y="901" width="0.0529%" height="15" fill="rgb(248,100,22)" fg:x="1041" fg:w="11"/><text x="5.2594%" y="911.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="5.0238%" y="885" width="0.0385%" height="15" fill="rgb(208,67,9)" fg:x="1044" fg:w="8"/><text x="5.2738%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;server::types::SerializeableLog&gt; (13 samples, 0.06%)</title><rect x="5.0046%" y="1061" width="0.0626%" height="15" fill="rgb(219,133,21)" fg:x="1040" fg:w="13"/><text x="5.2546%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (12 samples, 0.06%)</title><rect x="5.0094%" y="1045" width="0.0577%" height="15" fill="rgb(246,46,29)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="5.0094%" y="1029" width="0.0577%" height="15" fill="rgb(246,185,52)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (12 samples, 0.06%)</title><rect x="5.0094%" y="1013" width="0.0577%" height="15" fill="rgb(252,136,11)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.06%)</title><rect x="5.0094%" y="997" width="0.0577%" height="15" fill="rgb(219,138,53)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.06%)</title><rect x="5.0094%" y="981" width="0.0577%" height="15" fill="rgb(211,51,23)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.06%)</title><rect x="5.0094%" y="965" width="0.0577%" height="15" fill="rgb(247,221,28)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="5.0094%" y="949" width="0.0577%" height="15" fill="rgb(251,222,45)" fg:x="1041" fg:w="12"/><text x="5.2594%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.09%)</title><rect x="4.9998%" y="1093" width="0.0866%" height="15" fill="rgb(217,162,53)" fg:x="1039" fg:w="18"/><text x="5.2498%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[server::types::SerializeableLog]&gt; (17 samples, 0.08%)</title><rect x="5.0046%" y="1077" width="0.0818%" height="15" fill="rgb(229,93,14)" fg:x="1040" fg:w="17"/><text x="5.2546%" y="1087.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="5.0671%" y="1061" width="0.0192%" height="15" fill="rgb(209,67,49)" fg:x="1053" fg:w="4"/><text x="5.3171%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;server::types::SerializableExecutionResult&gt;&gt; (33 samples, 0.16%)</title><rect x="4.9372%" y="1173" width="0.1588%" height="15" fill="rgb(213,87,29)" fg:x="1026" fg:w="33"/><text x="5.1872%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.16%)</title><rect x="4.9372%" y="1157" width="0.1588%" height="15" fill="rgb(205,151,52)" fg:x="1026" fg:w="33"/><text x="5.1872%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[server::types::SerializableExecutionResult]&gt; (33 samples, 0.16%)</title><rect x="4.9372%" y="1141" width="0.1588%" height="15" fill="rgb(253,215,39)" fg:x="1026" fg:w="33"/><text x="5.1872%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;server::types::SerializableExecutionResult&gt; (33 samples, 0.16%)</title><rect x="4.9372%" y="1125" width="0.1588%" height="15" fill="rgb(221,220,41)" fg:x="1026" fg:w="33"/><text x="5.1872%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;server::types::SerializeableLog&gt;&gt; (20 samples, 0.10%)</title><rect x="4.9998%" y="1109" width="0.0962%" height="15" fill="rgb(218,133,21)" fg:x="1039" fg:w="20"/><text x="5.2498%" y="1119.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (9 samples, 0.04%)</title><rect x="5.1201%" y="853" width="0.0433%" height="15" fill="rgb(221,193,43)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (9 samples, 0.04%)</title><rect x="5.1201%" y="837" width="0.0433%" height="15" fill="rgb(240,128,52)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (9 samples, 0.04%)</title><rect x="5.1201%" y="821" width="0.0433%" height="15" fill="rgb(253,114,12)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.04%)</title><rect x="5.1201%" y="805" width="0.0433%" height="15" fill="rgb(215,223,47)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.04%)</title><rect x="5.1201%" y="789" width="0.0433%" height="15" fill="rgb(248,225,23)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="799.50"></text></g><g><title>free (9 samples, 0.04%)</title><rect x="5.1201%" y="773" width="0.0433%" height="15" fill="rgb(250,108,0)" fg:x="1064" fg:w="9"/><text x="5.3701%" y="783.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="5.1297%" y="757" width="0.0337%" height="15" fill="rgb(228,208,7)" fg:x="1066" fg:w="7"/><text x="5.3797%" y="767.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="5.1345%" y="741" width="0.0289%" height="15" fill="rgb(244,45,10)" fg:x="1067" fg:w="6"/><text x="5.3845%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 samples, 0.09%)</title><rect x="5.1201%" y="869" width="0.0866%" height="15" fill="rgb(207,125,25)" fg:x="1064" fg:w="18"/><text x="5.3701%" y="879.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (9 samples, 0.04%)</title><rect x="5.1634%" y="853" width="0.0433%" height="15" fill="rgb(210,195,18)" fg:x="1073" fg:w="9"/><text x="5.4134%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (9 samples, 0.04%)</title><rect x="5.1634%" y="837" width="0.0433%" height="15" fill="rgb(249,80,12)" fg:x="1073" fg:w="9"/><text x="5.4134%" y="847.50"></text></g><g><title>alloc::collections::btree::mem::replace (9 samples, 0.04%)</title><rect x="5.1634%" y="821" width="0.0433%" height="15" fill="rgb(221,65,9)" fg:x="1073" fg:w="9"/><text x="5.4134%" y="831.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (9 samples, 0.04%)</title><rect x="5.1634%" y="805" width="0.0433%" height="15" fill="rgb(235,49,36)" fg:x="1073" fg:w="9"/><text x="5.4134%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (9 samples, 0.04%)</title><rect x="5.1634%" y="789" width="0.0433%" height="15" fill="rgb(225,32,20)" fg:x="1073" fg:w="9"/><text x="5.4134%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.05%)</title><rect x="5.2115%" y="773" width="0.0529%" height="15" fill="rgb(215,141,46)" fg:x="1083" fg:w="11"/><text x="5.4615%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.05%)</title><rect x="5.2115%" y="757" width="0.0529%" height="15" fill="rgb(250,160,47)" fg:x="1083" fg:w="11"/><text x="5.4615%" y="767.50"></text></g><g><title>free (10 samples, 0.05%)</title><rect x="5.2163%" y="741" width="0.0481%" height="15" fill="rgb(216,222,40)" fg:x="1084" fg:w="10"/><text x="5.4663%" y="751.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="5.2259%" y="725" width="0.0385%" height="15" fill="rgb(234,217,39)" fg:x="1086" fg:w="8"/><text x="5.4759%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.06%)</title><rect x="5.2115%" y="837" width="0.0626%" height="15" fill="rgb(207,178,40)" fg:x="1083" fg:w="13"/><text x="5.4615%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.06%)</title><rect x="5.2115%" y="821" width="0.0626%" height="15" fill="rgb(221,136,13)" fg:x="1083" fg:w="13"/><text x="5.4615%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.06%)</title><rect x="5.2115%" y="805" width="0.0626%" height="15" fill="rgb(249,199,10)" fg:x="1083" fg:w="13"/><text x="5.4615%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.06%)</title><rect x="5.2115%" y="789" width="0.0626%" height="15" fill="rgb(249,222,13)" fg:x="1083" fg:w="13"/><text x="5.4615%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.02%)</title><rect x="5.2740%" y="837" width="0.0241%" height="15" fill="rgb(244,185,38)" fg:x="1096" fg:w="5"/><text x="5.5240%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (57 samples, 0.27%)</title><rect x="5.1056%" y="1045" width="0.2743%" height="15" fill="rgb(236,202,9)" fg:x="1061" fg:w="57"/><text x="5.3556%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (57 samples, 0.27%)</title><rect x="5.1056%" y="1029" width="0.2743%" height="15" fill="rgb(250,229,37)" fg:x="1061" fg:w="57"/><text x="5.3556%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.27%)</title><rect x="5.1056%" y="1013" width="0.2743%" height="15" fill="rgb(206,174,23)" fg:x="1061" fg:w="57"/><text x="5.3556%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (57 samples, 0.27%)</title><rect x="5.1056%" y="997" width="0.2743%" height="15" fill="rgb(211,33,43)" fg:x="1061" fg:w="57"/><text x="5.3556%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (57 samples, 0.27%)</title><rect x="5.1056%" y="981" width="0.2743%" height="15" fill="rgb(245,58,50)" fg:x="1061" fg:w="57"/><text x="5.3556%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (54 samples, 0.26%)</title><rect x="5.1201%" y="965" width="0.2599%" height="15" fill="rgb(244,68,36)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (54 samples, 0.26%)</title><rect x="5.1201%" y="949" width="0.2599%" height="15" fill="rgb(232,229,15)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.26%)</title><rect x="5.1201%" y="933" width="0.2599%" height="15" fill="rgb(254,30,23)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="943.50"></text></g><g><title>core::mem::drop (54 samples, 0.26%)</title><rect x="5.1201%" y="917" width="0.2599%" height="15" fill="rgb(235,160,14)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (54 samples, 0.26%)</title><rect x="5.1201%" y="901" width="0.2599%" height="15" fill="rgb(212,155,44)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.26%)</title><rect x="5.1201%" y="885" width="0.2599%" height="15" fill="rgb(226,2,50)" fg:x="1064" fg:w="54"/><text x="5.3701%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (36 samples, 0.17%)</title><rect x="5.2067%" y="869" width="0.1732%" height="15" fill="rgb(234,177,6)" fg:x="1082" fg:w="36"/><text x="5.4567%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (35 samples, 0.17%)</title><rect x="5.2115%" y="853" width="0.1684%" height="15" fill="rgb(217,24,9)" fg:x="1083" fg:w="35"/><text x="5.4615%" y="863.50"></text></g><g><title>free (17 samples, 0.08%)</title><rect x="5.2981%" y="837" width="0.0818%" height="15" fill="rgb(220,13,46)" fg:x="1101" fg:w="17"/><text x="5.5481%" y="847.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="5.3222%" y="821" width="0.0577%" height="15" fill="rgb(239,221,27)" fg:x="1106" fg:w="12"/><text x="5.5722%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (60 samples, 0.29%)</title><rect x="5.0960%" y="1173" width="0.2887%" height="15" fill="rgb(222,198,25)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (60 samples, 0.29%)</title><rect x="5.0960%" y="1157" width="0.2887%" height="15" fill="rgb(211,99,13)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.29%)</title><rect x="5.0960%" y="1141" width="0.2887%" height="15" fill="rgb(232,111,31)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1151.50"></text></g><g><title>core::mem::drop (60 samples, 0.29%)</title><rect x="5.0960%" y="1125" width="0.2887%" height="15" fill="rgb(245,82,37)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (60 samples, 0.29%)</title><rect x="5.0960%" y="1109" width="0.2887%" height="15" fill="rgb(227,149,46)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.29%)</title><rect x="5.0960%" y="1093" width="0.2887%" height="15" fill="rgb(218,36,50)" fg:x="1059" fg:w="60"/><text x="5.3460%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (59 samples, 0.28%)</title><rect x="5.1008%" y="1077" width="0.2839%" height="15" fill="rgb(226,80,48)" fg:x="1060" fg:w="59"/><text x="5.3508%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (59 samples, 0.28%)</title><rect x="5.1008%" y="1061" width="0.2839%" height="15" fill="rgb(238,224,15)" fg:x="1060" fg:w="59"/><text x="5.3508%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (6 samples, 0.03%)</title><rect x="5.4088%" y="693" width="0.0289%" height="15" fill="rgb(241,136,10)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (6 samples, 0.03%)</title><rect x="5.4088%" y="677" width="0.0289%" height="15" fill="rgb(208,32,45)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (6 samples, 0.03%)</title><rect x="5.4088%" y="661" width="0.0289%" height="15" fill="rgb(207,135,9)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="5.4088%" y="645" width="0.0289%" height="15" fill="rgb(206,86,44)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="5.4088%" y="629" width="0.0289%" height="15" fill="rgb(245,177,15)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="639.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="5.4088%" y="613" width="0.0289%" height="15" fill="rgb(206,64,50)" fg:x="1124" fg:w="6"/><text x="5.6588%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="5.4136%" y="597" width="0.0241%" height="15" fill="rgb(234,36,40)" fg:x="1125" fg:w="5"/><text x="5.6636%" y="607.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="5.4184%" y="581" width="0.0192%" height="15" fill="rgb(213,64,8)" fg:x="1126" fg:w="4"/><text x="5.6684%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (4 samples, 0.02%)</title><rect x="5.4377%" y="677" width="0.0192%" height="15" fill="rgb(210,75,36)" fg:x="1130" fg:w="4"/><text x="5.6877%" y="687.50"></text></g><g><title>alloc::collections::btree::mem::replace (4 samples, 0.02%)</title><rect x="5.4377%" y="661" width="0.0192%" height="15" fill="rgb(229,88,21)" fg:x="1130" fg:w="4"/><text x="5.6877%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (4 samples, 0.02%)</title><rect x="5.4377%" y="645" width="0.0192%" height="15" fill="rgb(252,204,47)" fg:x="1130" fg:w="4"/><text x="5.6877%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (4 samples, 0.02%)</title><rect x="5.4377%" y="629" width="0.0192%" height="15" fill="rgb(208,77,27)" fg:x="1130" fg:w="4"/><text x="5.6877%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.06%)</title><rect x="5.4088%" y="709" width="0.0577%" height="15" fill="rgb(221,76,26)" fg:x="1124" fg:w="12"/><text x="5.6588%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (6 samples, 0.03%)</title><rect x="5.4377%" y="693" width="0.0289%" height="15" fill="rgb(225,139,18)" fg:x="1130" fg:w="6"/><text x="5.6877%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.10%)</title><rect x="5.4665%" y="613" width="0.0962%" height="15" fill="rgb(230,137,11)" fg:x="1136" fg:w="20"/><text x="5.7165%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.10%)</title><rect x="5.4665%" y="597" width="0.0962%" height="15" fill="rgb(212,28,1)" fg:x="1136" fg:w="20"/><text x="5.7165%" y="607.50"></text></g><g><title>free (19 samples, 0.09%)</title><rect x="5.4713%" y="581" width="0.0914%" height="15" fill="rgb(248,164,17)" fg:x="1137" fg:w="19"/><text x="5.7213%" y="591.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="5.5147%" y="565" width="0.0481%" height="15" fill="rgb(222,171,42)" fg:x="1146" fg:w="10"/><text x="5.7647%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (23 samples, 0.11%)</title><rect x="5.4665%" y="677" width="0.1107%" height="15" fill="rgb(243,84,45)" fg:x="1136" fg:w="23"/><text x="5.7165%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (23 samples, 0.11%)</title><rect x="5.4665%" y="661" width="0.1107%" height="15" fill="rgb(252,49,23)" fg:x="1136" fg:w="23"/><text x="5.7165%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (23 samples, 0.11%)</title><rect x="5.4665%" y="645" width="0.1107%" height="15" fill="rgb(215,19,7)" fg:x="1136" fg:w="23"/><text x="5.7165%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.11%)</title><rect x="5.4665%" y="629" width="0.1107%" height="15" fill="rgb(238,81,41)" fg:x="1136" fg:w="23"/><text x="5.7165%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.01%)</title><rect x="5.5628%" y="613" width="0.0144%" height="15" fill="rgb(210,199,37)" fg:x="1156" fg:w="3"/><text x="5.8128%" y="623.50"></text></g><g><title>free (36 samples, 0.17%)</title><rect x="5.5868%" y="677" width="0.1732%" height="15" fill="rgb(244,192,49)" fg:x="1161" fg:w="36"/><text x="5.8368%" y="687.50"></text></g><g><title>[libc.so.6] (24 samples, 0.12%)</title><rect x="5.6446%" y="661" width="0.1155%" height="15" fill="rgb(226,211,11)" fg:x="1173" fg:w="24"/><text x="5.8946%" y="671.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="5.7456%" y="645" width="0.0144%" height="15" fill="rgb(236,162,54)" fg:x="1194" fg:w="3"/><text x="5.9956%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (76 samples, 0.37%)</title><rect x="5.3992%" y="885" width="0.3657%" height="15" fill="rgb(220,229,9)" fg:x="1122" fg:w="76"/><text x="5.6492%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (76 samples, 0.37%)</title><rect x="5.3992%" y="869" width="0.3657%" height="15" fill="rgb(250,87,22)" fg:x="1122" fg:w="76"/><text x="5.6492%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.37%)</title><rect x="5.3992%" y="853" width="0.3657%" height="15" fill="rgb(239,43,17)" fg:x="1122" fg:w="76"/><text x="5.6492%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (76 samples, 0.37%)</title><rect x="5.3992%" y="837" width="0.3657%" height="15" fill="rgb(231,177,25)" fg:x="1122" fg:w="76"/><text x="5.6492%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (76 samples, 0.37%)</title><rect x="5.3992%" y="821" width="0.3657%" height="15" fill="rgb(219,179,1)" fg:x="1122" fg:w="76"/><text x="5.6492%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (74 samples, 0.36%)</title><rect x="5.4088%" y="805" width="0.3561%" height="15" fill="rgb(238,219,53)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (74 samples, 0.36%)</title><rect x="5.4088%" y="789" width="0.3561%" height="15" fill="rgb(232,167,36)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.36%)</title><rect x="5.4088%" y="773" width="0.3561%" height="15" fill="rgb(244,19,51)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="783.50"></text></g><g><title>core::mem::drop (74 samples, 0.36%)</title><rect x="5.4088%" y="757" width="0.3561%" height="15" fill="rgb(224,6,22)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (74 samples, 0.36%)</title><rect x="5.4088%" y="741" width="0.3561%" height="15" fill="rgb(224,145,5)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.36%)</title><rect x="5.4088%" y="725" width="0.3561%" height="15" fill="rgb(234,130,49)" fg:x="1124" fg:w="74"/><text x="5.6588%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (62 samples, 0.30%)</title><rect x="5.4665%" y="709" width="0.2983%" height="15" fill="rgb(254,6,2)" fg:x="1136" fg:w="62"/><text x="5.7165%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (62 samples, 0.30%)</title><rect x="5.4665%" y="693" width="0.2983%" height="15" fill="rgb(208,96,46)" fg:x="1136" fg:w="62"/><text x="5.7165%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1173" width="0.4235%" height="15" fill="rgb(239,3,39)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1157" width="0.4235%" height="15" fill="rgb(233,210,1)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1141" width="0.4235%" height="15" fill="rgb(244,137,37)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="1125" width="0.4235%" height="15" fill="rgb(240,136,2)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1135.50"></text></g><g><title>core::mem::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="1109" width="0.4235%" height="15" fill="rgb(239,18,37)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1093" width="0.4235%" height="15" fill="rgb(218,185,22)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="1077" width="0.4235%" height="15" fill="rgb(225,218,4)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (88 samples, 0.42%)</title><rect x="5.3847%" y="1061" width="0.4235%" height="15" fill="rgb(230,182,32)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (88 samples, 0.42%)</title><rect x="5.3847%" y="1045" width="0.4235%" height="15" fill="rgb(242,56,43)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1029" width="0.4235%" height="15" fill="rgb(233,99,24)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="1013" width="0.4235%" height="15" fill="rgb(234,209,42)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="997" width="0.4235%" height="15" fill="rgb(227,7,12)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="981" width="0.4235%" height="15" fill="rgb(245,203,43)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="991.50"></text></g><g><title>core::mem::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="965" width="0.4235%" height="15" fill="rgb(238,205,33)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (88 samples, 0.42%)</title><rect x="5.3847%" y="949" width="0.4235%" height="15" fill="rgb(231,56,7)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.42%)</title><rect x="5.3847%" y="933" width="0.4235%" height="15" fill="rgb(244,186,29)" fg:x="1119" fg:w="88"/><text x="5.6347%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (86 samples, 0.41%)</title><rect x="5.3944%" y="917" width="0.4138%" height="15" fill="rgb(234,111,31)" fg:x="1121" fg:w="86"/><text x="5.6444%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (86 samples, 0.41%)</title><rect x="5.3944%" y="901" width="0.4138%" height="15" fill="rgb(241,149,10)" fg:x="1121" fg:w="86"/><text x="5.6444%" y="911.50"></text></g><g><title>free (9 samples, 0.04%)</title><rect x="5.7649%" y="885" width="0.0433%" height="15" fill="rgb(249,206,44)" fg:x="1198" fg:w="9"/><text x="6.0149%" y="895.50"></text></g><g><title>[libc.so.6] (9 samples, 0.04%)</title><rect x="5.7649%" y="869" width="0.0433%" height="15" fill="rgb(251,153,30)" fg:x="1198" fg:w="9"/><text x="6.0149%" y="879.50"></text></g><g><title>[libc.so.6] (9 samples, 0.04%)</title><rect x="5.7649%" y="853" width="0.0433%" height="15" fill="rgb(239,152,38)" fg:x="1198" fg:w="9"/><text x="6.0149%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="5.7938%" y="837" width="0.0144%" height="15" fill="rgb(249,139,47)" fg:x="1204" fg:w="3"/><text x="6.0438%" y="847.50"></text></g><g><title>bytes::bytes::shared_drop (10 samples, 0.05%)</title><rect x="5.8082%" y="1109" width="0.0481%" height="15" fill="rgb(244,64,35)" fg:x="1207" fg:w="10"/><text x="6.0582%" y="1119.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (10 samples, 0.05%)</title><rect x="5.8082%" y="1093" width="0.0481%" height="15" fill="rgb(216,46,15)" fg:x="1207" fg:w="10"/><text x="6.0582%" y="1103.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (10 samples, 0.05%)</title><rect x="5.8082%" y="1077" width="0.0481%" height="15" fill="rgb(250,74,19)" fg:x="1207" fg:w="10"/><text x="6.0582%" y="1087.50"></text></g><g><title>bytes::bytes::release_shared (10 samples, 0.05%)</title><rect x="5.8082%" y="1061" width="0.0481%" height="15" fill="rgb(249,42,33)" fg:x="1207" fg:w="10"/><text x="6.0582%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.04%)</title><rect x="5.8130%" y="1045" width="0.0433%" height="15" fill="rgb(242,149,17)" fg:x="1208" fg:w="9"/><text x="6.0630%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.04%)</title><rect x="5.8130%" y="1029" width="0.0433%" height="15" fill="rgb(244,29,21)" fg:x="1208" fg:w="9"/><text x="6.0630%" y="1039.50"></text></g><g><title>__aarch64_ldadd8_rel (9 samples, 0.04%)</title><rect x="5.8130%" y="1013" width="0.0433%" height="15" fill="rgb(220,130,37)" fg:x="1208" fg:w="9"/><text x="6.0630%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;server::types::TxInfo&gt; (11 samples, 0.05%)</title><rect x="5.8082%" y="1173" width="0.0529%" height="15" fill="rgb(211,67,2)" fg:x="1207" fg:w="11"/><text x="6.0582%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (11 samples, 0.05%)</title><rect x="5.8082%" y="1157" width="0.0529%" height="15" fill="rgb(235,68,52)" fg:x="1207" fg:w="11"/><text x="6.0582%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (11 samples, 0.05%)</title><rect x="5.8082%" y="1141" width="0.0529%" height="15" fill="rgb(246,142,3)" fg:x="1207" fg:w="11"/><text x="6.0582%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (11 samples, 0.05%)</title><rect x="5.8082%" y="1125" width="0.0529%" height="15" fill="rgb(241,25,7)" fg:x="1207" fg:w="11"/><text x="6.0582%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.02%)</title><rect x="5.8659%" y="1173" width="0.0192%" height="15" fill="rgb(242,119,39)" fg:x="1219" fg:w="4"/><text x="6.1159%" y="1183.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::str::traits::FromStr&gt;::from_str (13 samples, 0.06%)</title><rect x="5.8852%" y="1141" width="0.0626%" height="15" fill="rgb(241,98,45)" fg:x="1223" fg:w="13"/><text x="6.1352%" y="1151.50"></text></g><g><title>const_hex::decode_to_slice (12 samples, 0.06%)</title><rect x="5.8900%" y="1125" width="0.0577%" height="15" fill="rgb(254,28,30)" fg:x="1224" fg:w="12"/><text x="6.1400%" y="1135.50"></text></g><g><title>const_hex::decode_to_slice_inner (12 samples, 0.06%)</title><rect x="5.8900%" y="1109" width="0.0577%" height="15" fill="rgb(241,142,54)" fg:x="1224" fg:w="12"/><text x="6.1400%" y="1119.50"></text></g><g><title>const_hex::decode_checked (12 samples, 0.06%)</title><rect x="5.8900%" y="1093" width="0.0577%" height="15" fill="rgb(222,85,15)" fg:x="1224" fg:w="12"/><text x="6.1400%" y="1103.50"></text></g><g><title>const_hex::arch::generic::decode_checked (12 samples, 0.06%)</title><rect x="5.8900%" y="1077" width="0.0577%" height="15" fill="rgb(210,85,47)" fg:x="1224" fg:w="12"/><text x="6.1400%" y="1087.50"></text></g><g><title>const_hex::arch::generic::decode_maybe_check (12 samples, 0.06%)</title><rect x="5.8900%" y="1061" width="0.0577%" height="15" fill="rgb(224,206,25)" fg:x="1224" fg:w="12"/><text x="6.1400%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (14 samples, 0.07%)</title><rect x="5.8852%" y="1173" width="0.0674%" height="15" fill="rgb(243,201,19)" fg:x="1223" fg:w="14"/><text x="6.1352%" y="1183.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::str::traits::FromStr&gt;::from_str (14 samples, 0.07%)</title><rect x="5.8852%" y="1157" width="0.0674%" height="15" fill="rgb(236,59,4)" fg:x="1223" fg:w="14"/><text x="6.1352%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="5.9766%" y="1029" width="0.0289%" height="15" fill="rgb(254,179,45)" fg:x="1242" fg:w="6"/><text x="6.2266%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="5.9766%" y="1013" width="0.0289%" height="15" fill="rgb(226,14,10)" fg:x="1242" fg:w="6"/><text x="6.2266%" y="1023.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (5 samples, 0.02%)</title><rect x="5.9814%" y="997" width="0.0241%" height="15" fill="rgb(244,27,41)" fg:x="1243" fg:w="5"/><text x="6.2314%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="5.9910%" y="981" width="0.0144%" height="15" fill="rgb(235,35,32)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="5.9910%" y="965" width="0.0144%" height="15" fill="rgb(218,68,31)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="975.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="5.9910%" y="949" width="0.0144%" height="15" fill="rgb(207,120,37)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="5.9910%" y="933" width="0.0144%" height="15" fill="rgb(227,98,0)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="943.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="5.9910%" y="917" width="0.0144%" height="15" fill="rgb(207,7,3)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="5.9910%" y="901" width="0.0144%" height="15" fill="rgb(206,98,19)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="5.9910%" y="885" width="0.0144%" height="15" fill="rgb(217,5,26)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="5.9910%" y="869" width="0.0144%" height="15" fill="rgb(235,190,38)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="5.9910%" y="853" width="0.0144%" height="15" fill="rgb(247,86,24)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="863.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="5.9910%" y="837" width="0.0144%" height="15" fill="rgb(205,101,16)" fg:x="1245" fg:w="3"/><text x="6.2410%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.04%)</title><rect x="5.9766%" y="1061" width="0.0385%" height="15" fill="rgb(246,168,33)" fg:x="1242" fg:w="8"/><text x="6.2266%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.04%)</title><rect x="5.9766%" y="1045" width="0.0385%" height="15" fill="rgb(231,114,1)" fg:x="1242" fg:w="8"/><text x="6.2266%" y="1055.50"></text></g><g><title>&lt;db::UintEncodeDecode&lt;_,_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (9 samples, 0.04%)</title><rect x="5.9766%" y="1141" width="0.0433%" height="15" fill="rgb(207,184,53)" fg:x="1242" fg:w="9"/><text x="6.2266%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.04%)</title><rect x="5.9766%" y="1125" width="0.0433%" height="15" fill="rgb(224,95,51)" fg:x="1242" fg:w="9"/><text x="6.2266%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.04%)</title><rect x="5.9766%" y="1109" width="0.0433%" height="15" fill="rgb(212,188,45)" fg:x="1242" fg:w="9"/><text x="6.2266%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.04%)</title><rect x="5.9766%" y="1093" width="0.0433%" height="15" fill="rgb(223,154,38)" fg:x="1242" fg:w="9"/><text x="6.2266%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.04%)</title><rect x="5.9766%" y="1077" width="0.0433%" height="15" fill="rgb(251,22,52)" fg:x="1242" fg:w="9"/><text x="6.2266%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;[u8]&gt;&gt; (3 samples, 0.01%)</title><rect x="6.0199%" y="1141" width="0.0144%" height="15" fill="rgb(229,209,22)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="6.0199%" y="1125" width="0.0144%" height="15" fill="rgb(234,138,34)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="6.0199%" y="1109" width="0.0144%" height="15" fill="rgb(212,95,11)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="6.0199%" y="1093" width="0.0144%" height="15" fill="rgb(240,179,47)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="6.0199%" y="1077" width="0.0144%" height="15" fill="rgb(240,163,11)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="6.0199%" y="1061" width="0.0144%" height="15" fill="rgb(236,37,12)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1071.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="6.0199%" y="1045" width="0.0144%" height="15" fill="rgb(232,164,16)" fg:x="1251" fg:w="3"/><text x="6.2699%" y="1055.50"></text></g><g><title>mdb_node_search (3 samples, 0.01%)</title><rect x="6.0440%" y="1093" width="0.0144%" height="15" fill="rgb(244,205,15)" fg:x="1256" fg:w="3"/><text x="6.2940%" y="1103.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="6.0777%" y="1061" width="0.0192%" height="15" fill="rgb(223,117,47)" fg:x="1263" fg:w="4"/><text x="6.3277%" y="1071.50"></text></g><g><title>mdb_cursor_set (13 samples, 0.06%)</title><rect x="6.0392%" y="1109" width="0.0626%" height="15" fill="rgb(244,107,35)" fg:x="1255" fg:w="13"/><text x="6.2892%" y="1119.50"></text></g><g><title>mdb_page_search (9 samples, 0.04%)</title><rect x="6.0584%" y="1093" width="0.0433%" height="15" fill="rgb(205,140,8)" fg:x="1259" fg:w="9"/><text x="6.3084%" y="1103.50"></text></g><g><title>mdb_page_search_root (8 samples, 0.04%)</title><rect x="6.0632%" y="1077" width="0.0385%" height="15" fill="rgb(228,84,46)" fg:x="1260" fg:w="8"/><text x="6.3132%" y="1087.50"></text></g><g><title>db::DB::commit_changes_to_db_with_txn (37 samples, 0.18%)</title><rect x="5.9526%" y="1173" width="0.1780%" height="15" fill="rgb(254,188,9)" fg:x="1237" fg:w="37"/><text x="6.2026%" y="1183.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::put (33 samples, 0.16%)</title><rect x="5.9718%" y="1157" width="0.1588%" height="15" fill="rgb(206,112,54)" fg:x="1241" fg:w="33"/><text x="6.2218%" y="1167.50"></text></g><g><title>mdb_put (19 samples, 0.09%)</title><rect x="6.0392%" y="1141" width="0.0914%" height="15" fill="rgb(216,84,49)" fg:x="1255" fg:w="19"/><text x="6.2892%" y="1151.50"></text></g><g><title>mdb_cursor_put (19 samples, 0.09%)</title><rect x="6.0392%" y="1125" width="0.0914%" height="15" fill="rgb(214,194,35)" fg:x="1255" fg:w="19"/><text x="6.2892%" y="1135.50"></text></g><g><title>mdb_page_split (3 samples, 0.01%)</title><rect x="6.1162%" y="1109" width="0.0144%" height="15" fill="rgb(249,28,3)" fg:x="1271" fg:w="3"/><text x="6.3662%" y="1119.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="6.1306%" y="1141" width="0.0674%" height="15" fill="rgb(222,56,52)" fg:x="1274" fg:w="14"/><text x="6.3806%" y="1151.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="6.1835%" y="1125" width="0.0144%" height="15" fill="rgb(245,217,50)" fg:x="1285" fg:w="3"/><text x="6.4335%" y="1135.50"></text></g><g><title>free (15 samples, 0.07%)</title><rect x="6.1306%" y="1173" width="0.0722%" height="15" fill="rgb(213,201,24)" fg:x="1274" fg:w="15"/><text x="6.3806%" y="1183.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="6.1306%" y="1157" width="0.0722%" height="15" fill="rgb(248,116,28)" fg:x="1274" fg:w="15"/><text x="6.3806%" y="1167.50"></text></g><g><title>heed::txn::RwTxn&lt;T&gt;::commit (6 samples, 0.03%)</title><rect x="6.2028%" y="1173" width="0.0289%" height="15" fill="rgb(219,72,43)" fg:x="1289" fg:w="6"/><text x="6.4528%" y="1183.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::commit (6 samples, 0.03%)</title><rect x="6.2028%" y="1157" width="0.0289%" height="15" fill="rgb(209,138,14)" fg:x="1289" fg:w="6"/><text x="6.4528%" y="1167.50"></text></g><g><title>mdb_txn_commit (6 samples, 0.03%)</title><rect x="6.2028%" y="1141" width="0.0289%" height="15" fill="rgb(222,18,33)" fg:x="1289" fg:w="6"/><text x="6.4528%" y="1151.50"></text></g><g><title>mdb_page_flush (4 samples, 0.02%)</title><rect x="6.2124%" y="1125" width="0.0192%" height="15" fill="rgb(213,199,7)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1135.50"></text></g><g><title>writev (4 samples, 0.02%)</title><rect x="6.2124%" y="1109" width="0.0192%" height="15" fill="rgb(250,110,10)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1119.50"></text></g><g><title>el0t_64_sync (4 samples, 0.02%)</title><rect x="6.2124%" y="1093" width="0.0192%" height="15" fill="rgb(248,123,6)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1103.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.02%)</title><rect x="6.2124%" y="1077" width="0.0192%" height="15" fill="rgb(206,91,31)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1087.50"></text></g><g><title>el0_svc (4 samples, 0.02%)</title><rect x="6.2124%" y="1061" width="0.0192%" height="15" fill="rgb(211,154,13)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1071.50"></text></g><g><title>do_el0_svc (4 samples, 0.02%)</title><rect x="6.2124%" y="1045" width="0.0192%" height="15" fill="rgb(225,148,7)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1055.50"></text></g><g><title>el0_svc_common.constprop.0 (4 samples, 0.02%)</title><rect x="6.2124%" y="1029" width="0.0192%" height="15" fill="rgb(220,160,43)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1039.50"></text></g><g><title>invoke_syscall (4 samples, 0.02%)</title><rect x="6.2124%" y="1013" width="0.0192%" height="15" fill="rgb(213,52,39)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1023.50"></text></g><g><title>__arm64_sys_writev (4 samples, 0.02%)</title><rect x="6.2124%" y="997" width="0.0192%" height="15" fill="rgb(243,137,7)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="1007.50"></text></g><g><title>do_writev (4 samples, 0.02%)</title><rect x="6.2124%" y="981" width="0.0192%" height="15" fill="rgb(230,79,13)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="991.50"></text></g><g><title>vfs_writev (4 samples, 0.02%)</title><rect x="6.2124%" y="965" width="0.0192%" height="15" fill="rgb(247,105,23)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="975.50"></text></g><g><title>do_iter_write (4 samples, 0.02%)</title><rect x="6.2124%" y="949" width="0.0192%" height="15" fill="rgb(223,179,41)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="959.50"></text></g><g><title>do_iter_readv_writev (4 samples, 0.02%)</title><rect x="6.2124%" y="933" width="0.0192%" height="15" fill="rgb(218,9,34)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="943.50"></text></g><g><title>ext4_file_write_iter (4 samples, 0.02%)</title><rect x="6.2124%" y="917" width="0.0192%" height="15" fill="rgb(222,106,8)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="927.50"></text></g><g><title>ext4_buffered_write_iter (4 samples, 0.02%)</title><rect x="6.2124%" y="901" width="0.0192%" height="15" fill="rgb(211,220,0)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="911.50"></text></g><g><title>generic_perform_write (4 samples, 0.02%)</title><rect x="6.2124%" y="885" width="0.0192%" height="15" fill="rgb(229,52,16)" fg:x="1291" fg:w="4"/><text x="6.4624%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (58 samples, 0.28%)</title><rect x="6.3423%" y="885" width="0.2791%" height="15" fill="rgb(212,155,18)" fg:x="1318" fg:w="58"/><text x="6.5923%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (51 samples, 0.25%)</title><rect x="6.3760%" y="869" width="0.2454%" height="15" fill="rgb(242,21,14)" fg:x="1325" fg:w="51"/><text x="6.6260%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (51 samples, 0.25%)</title><rect x="6.3760%" y="853" width="0.2454%" height="15" fill="rgb(222,19,48)" fg:x="1325" fg:w="51"/><text x="6.6260%" y="863.50"></text></g><g><title>hex::val (33 samples, 0.16%)</title><rect x="6.4626%" y="837" width="0.1588%" height="15" fill="rgb(232,45,27)" fg:x="1343" fg:w="33"/><text x="6.7126%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.35%)</title><rect x="6.3327%" y="981" width="0.3465%" height="15" fill="rgb(249,103,42)" fg:x="1316" fg:w="72"/><text x="6.5827%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (72 samples, 0.35%)</title><rect x="6.3327%" y="965" width="0.3465%" height="15" fill="rgb(246,81,33)" fg:x="1316" fg:w="72"/><text x="6.5827%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 0.35%)</title><rect x="6.3327%" y="949" width="0.3465%" height="15" fill="rgb(252,33,42)" fg:x="1316" fg:w="72"/><text x="6.5827%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71 samples, 0.34%)</title><rect x="6.3375%" y="933" width="0.3417%" height="15" fill="rgb(209,212,41)" fg:x="1317" fg:w="71"/><text x="6.5875%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (70 samples, 0.34%)</title><rect x="6.3423%" y="917" width="0.3368%" height="15" fill="rgb(207,154,6)" fg:x="1318" fg:w="70"/><text x="6.5923%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (70 samples, 0.34%)</title><rect x="6.3423%" y="901" width="0.3368%" height="15" fill="rgb(223,64,47)" fg:x="1318" fg:w="70"/><text x="6.5923%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="6.6214%" y="885" width="0.0577%" height="15" fill="rgb(211,161,38)" fg:x="1376" fg:w="12"/><text x="6.8714%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.03%)</title><rect x="6.6792%" y="981" width="0.0289%" height="15" fill="rgb(219,138,40)" fg:x="1388" fg:w="6"/><text x="6.9292%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.02%)</title><rect x="6.6840%" y="965" width="0.0241%" height="15" fill="rgb(241,228,46)" fg:x="1389" fg:w="5"/><text x="6.9340%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.28%)</title><rect x="6.7081%" y="981" width="0.2791%" height="15" fill="rgb(223,209,38)" fg:x="1394" fg:w="58"/><text x="6.9581%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.28%)</title><rect x="6.7081%" y="965" width="0.2791%" height="15" fill="rgb(236,164,45)" fg:x="1394" fg:w="58"/><text x="6.9581%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (58 samples, 0.28%)</title><rect x="6.7081%" y="949" width="0.2791%" height="15" fill="rgb(231,15,5)" fg:x="1394" fg:w="58"/><text x="6.9581%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.27%)</title><rect x="6.7177%" y="933" width="0.2695%" height="15" fill="rgb(252,35,15)" fg:x="1396" fg:w="56"/><text x="6.9677%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (56 samples, 0.27%)</title><rect x="6.7177%" y="917" width="0.2695%" height="15" fill="rgb(248,181,18)" fg:x="1396" fg:w="56"/><text x="6.9677%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (53 samples, 0.26%)</title><rect x="6.7321%" y="901" width="0.2550%" height="15" fill="rgb(233,39,42)" fg:x="1399" fg:w="53"/><text x="6.9821%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (53 samples, 0.26%)</title><rect x="6.7321%" y="885" width="0.2550%" height="15" fill="rgb(238,110,33)" fg:x="1399" fg:w="53"/><text x="6.9821%" y="895.50"></text></g><g><title>alloc::alloc::realloc (52 samples, 0.25%)</title><rect x="6.7369%" y="869" width="0.2502%" height="15" fill="rgb(233,195,10)" fg:x="1400" fg:w="52"/><text x="6.9869%" y="879.50"></text></g><g><title>realloc (51 samples, 0.25%)</title><rect x="6.7417%" y="853" width="0.2454%" height="15" fill="rgb(254,105,3)" fg:x="1401" fg:w="51"/><text x="6.9917%" y="863.50"></text></g><g><title>[libc.so.6] (50 samples, 0.24%)</title><rect x="6.7465%" y="837" width="0.2406%" height="15" fill="rgb(221,225,9)" fg:x="1402" fg:w="50"/><text x="6.9965%" y="847.50"></text></g><g><title>[libc.so.6] (35 samples, 0.17%)</title><rect x="6.8187%" y="821" width="0.1684%" height="15" fill="rgb(224,227,45)" fg:x="1417" fg:w="35"/><text x="7.0687%" y="831.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="6.9583%" y="805" width="0.0289%" height="15" fill="rgb(229,198,43)" fg:x="1446" fg:w="6"/><text x="7.2083%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (154 samples, 0.74%)</title><rect x="6.2605%" y="1013" width="0.7411%" height="15" fill="rgb(206,209,35)" fg:x="1301" fg:w="154"/><text x="6.5105%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (154 samples, 0.74%)</title><rect x="6.2605%" y="997" width="0.7411%" height="15" fill="rgb(245,195,53)" fg:x="1301" fg:w="154"/><text x="6.5105%" y="1007.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="6.9872%" y="981" width="0.0144%" height="15" fill="rgb(240,92,26)" fg:x="1452" fg:w="3"/><text x="7.2372%" y="991.50"></text></g><g><title>hex::decode (161 samples, 0.77%)</title><rect x="6.2317%" y="1173" width="0.7747%" height="15" fill="rgb(207,40,23)" fg:x="1295" fg:w="161"/><text x="6.4817%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (161 samples, 0.77%)</title><rect x="6.2317%" y="1157" width="0.7747%" height="15" fill="rgb(223,111,35)" fg:x="1295" fg:w="161"/><text x="6.4817%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (161 samples, 0.77%)</title><rect x="6.2317%" y="1141" width="0.7747%" height="15" fill="rgb(229,147,28)" fg:x="1295" fg:w="161"/><text x="6.4817%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (161 samples, 0.77%)</title><rect x="6.2317%" y="1125" width="0.7747%" height="15" fill="rgb(211,29,28)" fg:x="1295" fg:w="161"/><text x="6.4817%" y="1135.50"></text></g><g><title>core::iter::adapters::try_process (161 samples, 0.77%)</title><rect x="6.2317%" y="1109" width="0.7747%" height="15" fill="rgb(228,72,33)" fg:x="1295" fg:w="161"/><text x="6.4817%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (157 samples, 0.76%)</title><rect x="6.2509%" y="1093" width="0.7555%" height="15" fill="rgb(205,214,31)" fg:x="1299" fg:w="157"/><text x="6.5009%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (157 samples, 0.76%)</title><rect x="6.2509%" y="1077" width="0.7555%" height="15" fill="rgb(224,111,15)" fg:x="1299" fg:w="157"/><text x="6.5009%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (157 samples, 0.76%)</title><rect x="6.2509%" y="1061" width="0.7555%" height="15" fill="rgb(253,21,26)" fg:x="1299" fg:w="157"/><text x="6.5009%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (156 samples, 0.75%)</title><rect x="6.2557%" y="1045" width="0.7507%" height="15" fill="rgb(245,139,43)" fg:x="1300" fg:w="156"/><text x="6.5057%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (155 samples, 0.75%)</title><rect x="6.2605%" y="1029" width="0.7459%" height="15" fill="rgb(252,170,7)" fg:x="1301" fg:w="155"/><text x="6.5105%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="7.0545%" y="789" width="0.0144%" height="15" fill="rgb(231,118,14)" fg:x="1466" fg:w="3"/><text x="7.3045%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="7.0545%" y="773" width="0.0144%" height="15" fill="rgb(238,83,0)" fg:x="1466" fg:w="3"/><text x="7.3045%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="7.0545%" y="757" width="0.0144%" height="15" fill="rgb(221,39,39)" fg:x="1466" fg:w="3"/><text x="7.3045%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="7.0545%" y="741" width="0.0144%" height="15" fill="rgb(222,119,46)" fg:x="1466" fg:w="3"/><text x="7.3045%" y="751.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="7.0545%" y="725" width="0.0144%" height="15" fill="rgb(222,165,49)" fg:x="1466" fg:w="3"/><text x="7.3045%" y="735.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_send (5 samples, 0.02%)</title><rect x="7.0545%" y="805" width="0.0241%" height="15" fill="rgb(219,113,52)" fg:x="1466" fg:w="5"/><text x="7.3045%" y="815.50"></text></g><g><title>futex_wake (8 samples, 0.04%)</title><rect x="7.0834%" y="517" width="0.0385%" height="15" fill="rgb(214,7,15)" fg:x="1472" fg:w="8"/><text x="7.3334%" y="527.50"></text></g><g><title>wake_up_q (7 samples, 0.03%)</title><rect x="7.0882%" y="501" width="0.0337%" height="15" fill="rgb(235,32,4)" fg:x="1473" fg:w="7"/><text x="7.3382%" y="511.50"></text></g><g><title>arch_local_irq_restore (7 samples, 0.03%)</title><rect x="7.0882%" y="485" width="0.0337%" height="15" fill="rgb(238,90,54)" fg:x="1473" fg:w="7"/><text x="7.3382%" y="495.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::end (16 samples, 0.08%)</title><rect x="7.0497%" y="1125" width="0.0770%" height="15" fill="rgb(213,208,19)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1135.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (16 samples, 0.08%)</title><rect x="7.0497%" y="1109" width="0.0770%" height="15" fill="rgb(233,156,4)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1119.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (16 samples, 0.08%)</title><rect x="7.0497%" y="1093" width="0.0770%" height="15" fill="rgb(207,194,5)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1103.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (16 samples, 0.08%)</title><rect x="7.0497%" y="1077" width="0.0770%" height="15" fill="rgb(206,111,30)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1087.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.08%)</title><rect x="7.0497%" y="1061" width="0.0770%" height="15" fill="rgb(243,70,54)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1071.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.08%)</title><rect x="7.0497%" y="1045" width="0.0770%" height="15" fill="rgb(242,28,8)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1055.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (16 samples, 0.08%)</title><rect x="7.0497%" y="1029" width="0.0770%" height="15" fill="rgb(219,106,18)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1039.50"></text></g><g><title>std::io::inlined_slow_read_byte (16 samples, 0.08%)</title><rect x="7.0497%" y="1013" width="0.0770%" height="15" fill="rgb(244,222,10)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1023.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (16 samples, 0.08%)</title><rect x="7.0497%" y="997" width="0.0770%" height="15" fill="rgb(236,179,52)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (16 samples, 0.08%)</title><rect x="7.0497%" y="981" width="0.0770%" height="15" fill="rgb(213,23,39)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="991.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (16 samples, 0.08%)</title><rect x="7.0497%" y="965" width="0.0770%" height="15" fill="rgb(238,48,10)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (16 samples, 0.08%)</title><rect x="7.0497%" y="949" width="0.0770%" height="15" fill="rgb(251,196,23)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="959.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (16 samples, 0.08%)</title><rect x="7.0497%" y="933" width="0.0770%" height="15" fill="rgb(250,152,24)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tiny_http::util::equal_reader::EqualReader&lt;tiny_http::util::sequential::SequentialReader&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt;&gt;&gt; (16 samples, 0.08%)</title><rect x="7.0497%" y="917" width="0.0770%" height="15" fill="rgb(209,150,17)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tiny_http::util::equal_reader::EqualReader&lt;tiny_http::util::sequential::SequentialReader&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt;&gt; (16 samples, 0.08%)</title><rect x="7.0497%" y="901" width="0.0770%" height="15" fill="rgb(234,202,34)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tiny_http::util::sequential::SequentialReader&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt; (16 samples, 0.08%)</title><rect x="7.0497%" y="885" width="0.0770%" height="15" fill="rgb(253,148,53)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="895.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialReader&lt;R&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.08%)</title><rect x="7.0497%" y="869" width="0.0770%" height="15" fill="rgb(218,129,16)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="879.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (16 samples, 0.08%)</title><rect x="7.0497%" y="853" width="0.0770%" height="15" fill="rgb(216,85,19)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="863.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::send (16 samples, 0.08%)</title><rect x="7.0497%" y="837" width="0.0770%" height="15" fill="rgb(235,228,7)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="847.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::send (16 samples, 0.08%)</title><rect x="7.0497%" y="821" width="0.0770%" height="15" fill="rgb(245,175,0)" fg:x="1465" fg:w="16"/><text x="7.2997%" y="831.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::write (10 samples, 0.05%)</title><rect x="7.0786%" y="805" width="0.0481%" height="15" fill="rgb(208,168,36)" fg:x="1471" fg:w="10"/><text x="7.3286%" y="815.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (10 samples, 0.05%)</title><rect x="7.0786%" y="789" width="0.0481%" height="15" fill="rgb(246,171,24)" fg:x="1471" fg:w="10"/><text x="7.3286%" y="799.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (10 samples, 0.05%)</title><rect x="7.0786%" y="773" width="0.0481%" height="15" fill="rgb(215,142,24)" fg:x="1471" fg:w="10"/><text x="7.3286%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (10 samples, 0.05%)</title><rect x="7.0786%" y="757" width="0.0481%" height="15" fill="rgb(250,187,7)" fg:x="1471" fg:w="10"/><text x="7.3286%" y="767.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select::{{closure}} (10 samples, 0.05%)</title><rect x="7.0786%" y="741" width="0.0481%" height="15" fill="rgb(228,66,33)" fg:x="1471" fg:w="10"/><text x="7.3286%" y="751.50"></text></g><g><title>std::sync::mpmc::context::Context::unpark (9 samples, 0.04%)</title><rect x="7.0834%" y="725" width="0.0433%" height="15" fill="rgb(234,215,21)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="735.50"></text></g><g><title>std::thread::Thread::unpark (9 samples, 0.04%)</title><rect x="7.0834%" y="709" width="0.0433%" height="15" fill="rgb(222,191,20)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="719.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::unpark (9 samples, 0.04%)</title><rect x="7.0834%" y="693" width="0.0433%" height="15" fill="rgb(245,79,54)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="703.50"></text></g><g><title>std::sys::unix::futex::futex_wake (9 samples, 0.04%)</title><rect x="7.0834%" y="677" width="0.0433%" height="15" fill="rgb(240,10,37)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="687.50"></text></g><g><title>syscall (9 samples, 0.04%)</title><rect x="7.0834%" y="661" width="0.0433%" height="15" fill="rgb(214,192,32)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="671.50"></text></g><g><title>el0t_64_sync (9 samples, 0.04%)</title><rect x="7.0834%" y="645" width="0.0433%" height="15" fill="rgb(209,36,54)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="655.50"></text></g><g><title>el0t_64_sync_handler (9 samples, 0.04%)</title><rect x="7.0834%" y="629" width="0.0433%" height="15" fill="rgb(220,10,11)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="639.50"></text></g><g><title>el0_svc (9 samples, 0.04%)</title><rect x="7.0834%" y="613" width="0.0433%" height="15" fill="rgb(221,106,17)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="623.50"></text></g><g><title>do_el0_svc (9 samples, 0.04%)</title><rect x="7.0834%" y="597" width="0.0433%" height="15" fill="rgb(251,142,44)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="607.50"></text></g><g><title>el0_svc_common.constprop.0 (9 samples, 0.04%)</title><rect x="7.0834%" y="581" width="0.0433%" height="15" fill="rgb(238,13,15)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="591.50"></text></g><g><title>invoke_syscall (9 samples, 0.04%)</title><rect x="7.0834%" y="565" width="0.0433%" height="15" fill="rgb(208,107,27)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="575.50"></text></g><g><title>__arm64_sys_futex (9 samples, 0.04%)</title><rect x="7.0834%" y="549" width="0.0433%" height="15" fill="rgb(205,136,37)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="559.50"></text></g><g><title>do_futex (9 samples, 0.04%)</title><rect x="7.0834%" y="533" width="0.0433%" height="15" fill="rgb(250,205,27)" fg:x="1472" fg:w="9"/><text x="7.3334%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.01%)</title><rect x="7.2133%" y="981" width="0.0144%" height="15" fill="rgb(210,80,43)" fg:x="1499" fg:w="3"/><text x="7.4633%" y="991.50"></text></g><g><title>serde_json::read::as_str (3 samples, 0.01%)</title><rect x="7.2133%" y="965" width="0.0144%" height="15" fill="rgb(247,160,36)" fg:x="1499" fg:w="3"/><text x="7.4633%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.01%)</title><rect x="7.2133%" y="949" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="1499" fg:w="3"/><text x="7.4633%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.01%)</title><rect x="7.2133%" y="933" width="0.0144%" height="15" fill="rgb(234,122,0)" fg:x="1499" fg:w="3"/><text x="7.4633%" y="943.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (11 samples, 0.05%)</title><rect x="7.1893%" y="1013" width="0.0529%" height="15" fill="rgb(207,146,38)" fg:x="1494" fg:w="11"/><text x="7.4393%" y="1023.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (7 samples, 0.03%)</title><rect x="7.2085%" y="997" width="0.0337%" height="15" fill="rgb(207,177,25)" fg:x="1498" fg:w="7"/><text x="7.4585%" y="1007.50"></text></g><g><title>serde_json::read::next_or_eof (3 samples, 0.01%)</title><rect x="7.2278%" y="981" width="0.0144%" height="15" fill="rgb(211,178,42)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="991.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (3 samples, 0.01%)</title><rect x="7.2278%" y="965" width="0.0144%" height="15" fill="rgb(230,69,54)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="975.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.2278%" y="949" width="0.0144%" height="15" fill="rgb(214,135,41)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="959.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.2278%" y="933" width="0.0144%" height="15" fill="rgb(237,67,25)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="943.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (3 samples, 0.01%)</title><rect x="7.2278%" y="917" width="0.0144%" height="15" fill="rgb(222,189,50)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="927.50"></text></g><g><title>std::io::inlined_slow_read_byte (3 samples, 0.01%)</title><rect x="7.2278%" y="901" width="0.0144%" height="15" fill="rgb(245,148,34)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="911.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.2278%" y="885" width="0.0144%" height="15" fill="rgb(222,29,6)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="7.2278%" y="869" width="0.0144%" height="15" fill="rgb(221,189,43)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="879.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.2278%" y="853" width="0.0144%" height="15" fill="rgb(207,36,27)" fg:x="1502" fg:w="3"/><text x="7.4778%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (19 samples, 0.09%)</title><rect x="7.1700%" y="1077" width="0.0914%" height="15" fill="rgb(217,90,24)" fg:x="1490" fg:w="19"/><text x="7.4200%" y="1087.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.08%)</title><rect x="7.1844%" y="1061" width="0.0770%" height="15" fill="rgb(224,66,35)" fg:x="1493" fg:w="16"/><text x="7.4344%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (16 samples, 0.08%)</title><rect x="7.1844%" y="1045" width="0.0770%" height="15" fill="rgb(221,13,50)" fg:x="1493" fg:w="16"/><text x="7.4344%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 0.08%)</title><rect x="7.1844%" y="1029" width="0.0770%" height="15" fill="rgb(236,68,49)" fg:x="1493" fg:w="16"/><text x="7.4344%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="7.2422%" y="1013" width="0.0192%" height="15" fill="rgb(229,146,28)" fg:x="1505" fg:w="4"/><text x="7.4922%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="7.2422%" y="997" width="0.0192%" height="15" fill="rgb(225,31,38)" fg:x="1505" fg:w="4"/><text x="7.4922%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="7.2422%" y="981" width="0.0192%" height="15" fill="rgb(250,208,3)" fg:x="1505" fg:w="4"/><text x="7.4922%" y="991.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="7.2422%" y="965" width="0.0192%" height="15" fill="rgb(246,54,23)" fg:x="1505" fg:w="4"/><text x="7.4922%" y="975.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="7.2422%" y="949" width="0.0192%" height="15" fill="rgb(243,76,11)" fg:x="1505" fg:w="4"/><text x="7.4922%" y="959.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.2470%" y="933" width="0.0144%" height="15" fill="rgb(245,21,50)" fg:x="1506" fg:w="3"/><text x="7.4970%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.01%)</title><rect x="7.2663%" y="1029" width="0.0144%" height="15" fill="rgb(228,9,43)" fg:x="1510" fg:w="3"/><text x="7.5163%" y="1039.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (3 samples, 0.01%)</title><rect x="7.2663%" y="1013" width="0.0144%" height="15" fill="rgb(208,100,47)" fg:x="1510" fg:w="3"/><text x="7.5163%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.01%)</title><rect x="7.2663%" y="997" width="0.0144%" height="15" fill="rgb(232,26,8)" fg:x="1510" fg:w="3"/><text x="7.5163%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.01%)</title><rect x="7.2663%" y="981" width="0.0144%" height="15" fill="rgb(216,166,38)" fg:x="1510" fg:w="3"/><text x="7.5163%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.03%)</title><rect x="7.2663%" y="1045" width="0.0289%" height="15" fill="rgb(251,202,51)" fg:x="1510" fg:w="6"/><text x="7.5163%" y="1055.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (3 samples, 0.01%)</title><rect x="7.2807%" y="1029" width="0.0144%" height="15" fill="rgb(254,216,34)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="1039.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (3 samples, 0.01%)</title><rect x="7.2807%" y="1013" width="0.0144%" height="15" fill="rgb(251,32,27)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="1023.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (3 samples, 0.01%)</title><rect x="7.2807%" y="997" width="0.0144%" height="15" fill="rgb(208,127,28)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="1007.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.2807%" y="981" width="0.0144%" height="15" fill="rgb(224,137,22)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="991.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.2807%" y="965" width="0.0144%" height="15" fill="rgb(254,70,32)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="975.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (3 samples, 0.01%)</title><rect x="7.2807%" y="949" width="0.0144%" height="15" fill="rgb(229,75,37)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="959.50"></text></g><g><title>std::io::inlined_slow_read_byte (3 samples, 0.01%)</title><rect x="7.2807%" y="933" width="0.0144%" height="15" fill="rgb(252,64,23)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="943.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.2807%" y="917" width="0.0144%" height="15" fill="rgb(232,162,48)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="7.2807%" y="901" width="0.0144%" height="15" fill="rgb(246,160,12)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="911.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.2807%" y="885" width="0.0144%" height="15" fill="rgb(247,166,0)" fg:x="1513" fg:w="3"/><text x="7.5307%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="7.2999%" y="757" width="0.0144%" height="15" fill="rgb(249,219,21)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.2999%" y="741" width="0.0144%" height="15" fill="rgb(205,209,3)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="7.2999%" y="725" width="0.0144%" height="15" fill="rgb(243,44,1)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="7.2999%" y="709" width="0.0144%" height="15" fill="rgb(206,159,16)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="7.2999%" y="693" width="0.0144%" height="15" fill="rgb(244,77,30)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="703.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="7.2999%" y="677" width="0.0144%" height="15" fill="rgb(218,69,12)" fg:x="1517" fg:w="3"/><text x="7.5499%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.02%)</title><rect x="7.2999%" y="981" width="0.0192%" height="15" fill="rgb(212,87,7)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (4 samples, 0.02%)</title><rect x="7.2999%" y="965" width="0.0192%" height="15" fill="rgb(245,114,25)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="975.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.02%)</title><rect x="7.2999%" y="949" width="0.0192%" height="15" fill="rgb(210,61,42)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="959.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (4 samples, 0.02%)</title><rect x="7.2999%" y="933" width="0.0192%" height="15" fill="rgb(211,52,33)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="943.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (4 samples, 0.02%)</title><rect x="7.2999%" y="917" width="0.0192%" height="15" fill="rgb(234,58,33)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="927.50"></text></g><g><title>serde_json::read::next_or_eof (4 samples, 0.02%)</title><rect x="7.2999%" y="901" width="0.0192%" height="15" fill="rgb(220,115,36)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="911.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (4 samples, 0.02%)</title><rect x="7.2999%" y="885" width="0.0192%" height="15" fill="rgb(243,153,54)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="895.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="7.2999%" y="869" width="0.0192%" height="15" fill="rgb(251,47,18)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="879.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="7.2999%" y="853" width="0.0192%" height="15" fill="rgb(242,102,42)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="863.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (4 samples, 0.02%)</title><rect x="7.2999%" y="837" width="0.0192%" height="15" fill="rgb(234,31,38)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="847.50"></text></g><g><title>std::io::inlined_slow_read_byte (4 samples, 0.02%)</title><rect x="7.2999%" y="821" width="0.0192%" height="15" fill="rgb(221,117,51)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="831.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="7.2999%" y="805" width="0.0192%" height="15" fill="rgb(212,20,18)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (4 samples, 0.02%)</title><rect x="7.2999%" y="789" width="0.0192%" height="15" fill="rgb(245,133,36)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="799.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="7.2999%" y="773" width="0.0192%" height="15" fill="rgb(212,6,19)" fg:x="1517" fg:w="4"/><text x="7.5499%" y="783.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.02%)</title><rect x="7.2999%" y="997" width="0.0241%" height="15" fill="rgb(218,1,36)" fg:x="1517" fg:w="5"/><text x="7.5499%" y="1007.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (4 samples, 0.02%)</title><rect x="7.3240%" y="885" width="0.0192%" height="15" fill="rgb(246,84,54)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.02%)</title><rect x="7.3240%" y="869" width="0.0192%" height="15" fill="rgb(242,110,6)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.02%)</title><rect x="7.3240%" y="853" width="0.0192%" height="15" fill="rgb(214,47,5)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="7.3240%" y="837" width="0.0192%" height="15" fill="rgb(218,159,25)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="7.3240%" y="821" width="0.0192%" height="15" fill="rgb(215,211,28)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="7.3240%" y="805" width="0.0192%" height="15" fill="rgb(238,59,32)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="7.3240%" y="789" width="0.0192%" height="15" fill="rgb(226,82,3)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="7.3240%" y="773" width="0.0192%" height="15" fill="rgb(240,164,32)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="7.3240%" y="757" width="0.0192%" height="15" fill="rgb(232,46,7)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="7.3240%" y="741" width="0.0192%" height="15" fill="rgb(229,129,53)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="7.3240%" y="725" width="0.0192%" height="15" fill="rgb(234,188,29)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="7.3240%" y="709" width="0.0192%" height="15" fill="rgb(246,141,4)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="7.3240%" y="693" width="0.0192%" height="15" fill="rgb(229,23,39)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="703.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="7.3240%" y="677" width="0.0192%" height="15" fill="rgb(206,12,3)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="687.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="7.3240%" y="661" width="0.0192%" height="15" fill="rgb(252,226,20)" fg:x="1522" fg:w="4"/><text x="7.5740%" y="671.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.04%)</title><rect x="7.3240%" y="949" width="0.0385%" height="15" fill="rgb(216,123,35)" fg:x="1522" fg:w="8"/><text x="7.5740%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (8 samples, 0.04%)</title><rect x="7.3240%" y="933" width="0.0385%" height="15" fill="rgb(212,68,40)" fg:x="1522" fg:w="8"/><text x="7.5740%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (8 samples, 0.04%)</title><rect x="7.3240%" y="917" width="0.0385%" height="15" fill="rgb(254,125,32)" fg:x="1522" fg:w="8"/><text x="7.5740%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.04%)</title><rect x="7.3240%" y="901" width="0.0385%" height="15" fill="rgb(253,97,22)" fg:x="1522" fg:w="8"/><text x="7.5740%" y="911.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (4 samples, 0.02%)</title><rect x="7.3432%" y="885" width="0.0192%" height="15" fill="rgb(241,101,14)" fg:x="1526" fg:w="4"/><text x="7.5932%" y="895.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (4 samples, 0.02%)</title><rect x="7.3432%" y="869" width="0.0192%" height="15" fill="rgb(238,103,29)" fg:x="1526" fg:w="4"/><text x="7.5932%" y="879.50"></text></g><g><title>serde_json::read::next_or_eof (3 samples, 0.01%)</title><rect x="7.3481%" y="853" width="0.0144%" height="15" fill="rgb(233,195,47)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="863.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (3 samples, 0.01%)</title><rect x="7.3481%" y="837" width="0.0144%" height="15" fill="rgb(246,218,30)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="847.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.3481%" y="821" width="0.0144%" height="15" fill="rgb(219,145,47)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="831.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.3481%" y="805" width="0.0144%" height="15" fill="rgb(243,12,26)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="815.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (3 samples, 0.01%)</title><rect x="7.3481%" y="789" width="0.0144%" height="15" fill="rgb(214,87,16)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="799.50"></text></g><g><title>std::io::inlined_slow_read_byte (3 samples, 0.01%)</title><rect x="7.3481%" y="773" width="0.0144%" height="15" fill="rgb(208,99,42)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="783.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.3481%" y="757" width="0.0144%" height="15" fill="rgb(253,99,2)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="7.3481%" y="741" width="0.0144%" height="15" fill="rgb(220,168,23)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="751.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.3481%" y="725" width="0.0144%" height="15" fill="rgb(242,38,24)" fg:x="1527" fg:w="3"/><text x="7.5981%" y="735.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (10 samples, 0.05%)</title><rect x="7.3240%" y="965" width="0.0481%" height="15" fill="rgb(225,182,9)" fg:x="1522" fg:w="10"/><text x="7.5740%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="7.3721%" y="773" width="0.0144%" height="15" fill="rgb(243,178,37)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.3721%" y="757" width="0.0144%" height="15" fill="rgb(232,139,19)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="7.3721%" y="741" width="0.0144%" height="15" fill="rgb(225,201,24)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="7.3721%" y="725" width="0.0144%" height="15" fill="rgb(221,47,46)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="7.3721%" y="709" width="0.0144%" height="15" fill="rgb(249,23,13)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="719.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="7.3721%" y="693" width="0.0144%" height="15" fill="rgb(219,9,5)" fg:x="1532" fg:w="3"/><text x="7.6221%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.02%)</title><rect x="7.3721%" y="965" width="0.0192%" height="15" fill="rgb(254,171,16)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="975.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (4 samples, 0.02%)</title><rect x="7.3721%" y="949" width="0.0192%" height="15" fill="rgb(230,171,20)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="959.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (4 samples, 0.02%)</title><rect x="7.3721%" y="933" width="0.0192%" height="15" fill="rgb(210,71,41)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="943.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (4 samples, 0.02%)</title><rect x="7.3721%" y="917" width="0.0192%" height="15" fill="rgb(206,173,20)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="927.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (4 samples, 0.02%)</title><rect x="7.3721%" y="901" width="0.0192%" height="15" fill="rgb(233,88,34)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="911.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="7.3721%" y="885" width="0.0192%" height="15" fill="rgb(223,209,46)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="895.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="7.3721%" y="869" width="0.0192%" height="15" fill="rgb(250,43,18)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="879.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (4 samples, 0.02%)</title><rect x="7.3721%" y="853" width="0.0192%" height="15" fill="rgb(208,13,10)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="863.50"></text></g><g><title>std::io::inlined_slow_read_byte (4 samples, 0.02%)</title><rect x="7.3721%" y="837" width="0.0192%" height="15" fill="rgb(212,200,36)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="847.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="7.3721%" y="821" width="0.0192%" height="15" fill="rgb(225,90,30)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="831.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (4 samples, 0.02%)</title><rect x="7.3721%" y="805" width="0.0192%" height="15" fill="rgb(236,182,39)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="815.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="7.3721%" y="789" width="0.0192%" height="15" fill="rgb(212,144,35)" fg:x="1532" fg:w="4"/><text x="7.6221%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="7.4010%" y="901" width="0.0192%" height="15" fill="rgb(228,63,44)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="7.4010%" y="885" width="0.0192%" height="15" fill="rgb(228,109,6)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="7.4010%" y="869" width="0.0192%" height="15" fill="rgb(238,117,24)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="7.4010%" y="853" width="0.0192%" height="15" fill="rgb(242,26,26)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="7.4010%" y="837" width="0.0192%" height="15" fill="rgb(221,92,48)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="7.4010%" y="821" width="0.0192%" height="15" fill="rgb(209,209,32)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="831.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="7.4010%" y="805" width="0.0192%" height="15" fill="rgb(221,70,22)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="815.50"></text></g><g><title>realloc (4 samples, 0.02%)</title><rect x="7.4010%" y="789" width="0.0192%" height="15" fill="rgb(248,145,5)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="799.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="7.4010%" y="773" width="0.0192%" height="15" fill="rgb(226,116,26)" fg:x="1538" fg:w="4"/><text x="7.6510%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.4058%" y="757" width="0.0144%" height="15" fill="rgb(244,5,17)" fg:x="1539" fg:w="3"/><text x="7.6558%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (11 samples, 0.05%)</title><rect x="7.4395%" y="757" width="0.0529%" height="15" fill="rgb(252,159,33)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.05%)</title><rect x="7.4395%" y="741" width="0.0529%" height="15" fill="rgb(206,71,0)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (11 samples, 0.05%)</title><rect x="7.4395%" y="725" width="0.0529%" height="15" fill="rgb(233,118,54)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (11 samples, 0.05%)</title><rect x="7.4395%" y="709" width="0.0529%" height="15" fill="rgb(234,83,48)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.05%)</title><rect x="7.4395%" y="693" width="0.0529%" height="15" fill="rgb(228,3,54)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="703.50"></text></g><g><title>__aarch64_swp4_rel (11 samples, 0.05%)</title><rect x="7.4395%" y="677" width="0.0529%" height="15" fill="rgb(226,155,13)" fg:x="1546" fg:w="11"/><text x="7.6895%" y="687.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="7.4924%" y="757" width="0.0144%" height="15" fill="rgb(241,28,37)" fg:x="1557" fg:w="3"/><text x="7.7424%" y="767.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.4924%" y="741" width="0.0144%" height="15" fill="rgb(233,93,10)" fg:x="1557" fg:w="3"/><text x="7.7424%" y="751.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.4924%" y="725" width="0.0144%" height="15" fill="rgb(225,113,19)" fg:x="1557" fg:w="3"/><text x="7.7424%" y="735.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (31 samples, 0.15%)</title><rect x="7.4010%" y="933" width="0.1492%" height="15" fill="rgb(241,2,18)" fg:x="1538" fg:w="31"/><text x="7.6510%" y="943.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (31 samples, 0.15%)</title><rect x="7.4010%" y="917" width="0.1492%" height="15" fill="rgb(228,207,21)" fg:x="1538" fg:w="31"/><text x="7.6510%" y="927.50"></text></g><g><title>serde_json::read::next_or_eof (26 samples, 0.13%)</title><rect x="7.4251%" y="901" width="0.1251%" height="15" fill="rgb(213,211,35)" fg:x="1543" fg:w="26"/><text x="7.6751%" y="911.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (26 samples, 0.13%)</title><rect x="7.4251%" y="885" width="0.1251%" height="15" fill="rgb(209,83,10)" fg:x="1543" fg:w="26"/><text x="7.6751%" y="895.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.13%)</title><rect x="7.4251%" y="869" width="0.1251%" height="15" fill="rgb(209,164,1)" fg:x="1543" fg:w="26"/><text x="7.6751%" y="879.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.12%)</title><rect x="7.4347%" y="853" width="0.1155%" height="15" fill="rgb(213,184,43)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="863.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (24 samples, 0.12%)</title><rect x="7.4347%" y="837" width="0.1155%" height="15" fill="rgb(231,61,34)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="847.50"></text></g><g><title>std::io::inlined_slow_read_byte (24 samples, 0.12%)</title><rect x="7.4347%" y="821" width="0.1155%" height="15" fill="rgb(235,75,3)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="831.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (24 samples, 0.12%)</title><rect x="7.4347%" y="805" width="0.1155%" height="15" fill="rgb(220,106,47)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (24 samples, 0.12%)</title><rect x="7.4347%" y="789" width="0.1155%" height="15" fill="rgb(210,196,33)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="799.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (24 samples, 0.12%)</title><rect x="7.4347%" y="773" width="0.1155%" height="15" fill="rgb(229,154,42)" fg:x="1545" fg:w="24"/><text x="7.6847%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.04%)</title><rect x="7.5069%" y="757" width="0.0433%" height="15" fill="rgb(228,114,26)" fg:x="1560" fg:w="9"/><text x="7.7569%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (8 samples, 0.04%)</title><rect x="7.5117%" y="741" width="0.0385%" height="15" fill="rgb(208,144,1)" fg:x="1561" fg:w="8"/><text x="7.7617%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.04%)</title><rect x="7.5117%" y="725" width="0.0385%" height="15" fill="rgb(239,112,37)" fg:x="1561" fg:w="8"/><text x="7.7617%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.04%)</title><rect x="7.5117%" y="709" width="0.0385%" height="15" fill="rgb(210,96,50)" fg:x="1561" fg:w="8"/><text x="7.7617%" y="719.50"></text></g><g><title>__aarch64_cas4_acq (8 samples, 0.04%)</title><rect x="7.5117%" y="693" width="0.0385%" height="15" fill="rgb(222,178,2)" fg:x="1561" fg:w="8"/><text x="7.7617%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.12%)</title><rect x="7.5550%" y="853" width="0.1203%" height="15" fill="rgb(226,74,18)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.12%)</title><rect x="7.5550%" y="837" width="0.1203%" height="15" fill="rgb(225,67,54)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="847.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.12%)</title><rect x="7.5550%" y="821" width="0.1203%" height="15" fill="rgb(251,92,32)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="831.50"></text></g><g><title>realloc (25 samples, 0.12%)</title><rect x="7.5550%" y="805" width="0.1203%" height="15" fill="rgb(228,149,22)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="815.50"></text></g><g><title>[libc.so.6] (25 samples, 0.12%)</title><rect x="7.5550%" y="789" width="0.1203%" height="15" fill="rgb(243,54,13)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="799.50"></text></g><g><title>[libc.so.6] (25 samples, 0.12%)</title><rect x="7.5550%" y="773" width="0.1203%" height="15" fill="rgb(243,180,28)" fg:x="1570" fg:w="25"/><text x="7.8050%" y="783.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="7.6175%" y="757" width="0.0577%" height="15" fill="rgb(208,167,24)" fg:x="1583" fg:w="12"/><text x="7.8675%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (27 samples, 0.13%)</title><rect x="7.5550%" y="901" width="0.1299%" height="15" fill="rgb(245,73,45)" fg:x="1570" fg:w="27"/><text x="7.8050%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.13%)</title><rect x="7.5550%" y="885" width="0.1299%" height="15" fill="rgb(237,203,48)" fg:x="1570" fg:w="27"/><text x="7.8050%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.13%)</title><rect x="7.5550%" y="869" width="0.1299%" height="15" fill="rgb(211,197,16)" fg:x="1570" fg:w="27"/><text x="7.8050%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.14%)</title><rect x="7.5502%" y="917" width="0.1396%" height="15" fill="rgb(243,99,51)" fg:x="1569" fg:w="29"/><text x="7.8002%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.02%)</title><rect x="7.7860%" y="725" width="0.0192%" height="15" fill="rgb(215,123,29)" fg:x="1618" fg:w="4"/><text x="8.0360%" y="735.50"></text></g><g><title>serde_json::read::as_str (4 samples, 0.02%)</title><rect x="7.7860%" y="709" width="0.0192%" height="15" fill="rgb(239,186,37)" fg:x="1618" fg:w="4"/><text x="8.0360%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="7.8148%" y="581" width="0.0241%" height="15" fill="rgb(252,136,39)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="7.8148%" y="565" width="0.0241%" height="15" fill="rgb(223,213,32)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (5 samples, 0.02%)</title><rect x="7.8148%" y="549" width="0.0241%" height="15" fill="rgb(233,115,5)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.02%)</title><rect x="7.8148%" y="533" width="0.0241%" height="15" fill="rgb(207,226,44)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.02%)</title><rect x="7.8148%" y="517" width="0.0241%" height="15" fill="rgb(208,126,0)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="527.50"></text></g><g><title>__aarch64_swp4_rel (5 samples, 0.02%)</title><rect x="7.8148%" y="501" width="0.0241%" height="15" fill="rgb(244,66,21)" fg:x="1624" fg:w="5"/><text x="8.0648%" y="511.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (23 samples, 0.11%)</title><rect x="7.7811%" y="757" width="0.1107%" height="15" fill="rgb(222,97,12)" fg:x="1617" fg:w="23"/><text x="8.0311%" y="767.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (22 samples, 0.11%)</title><rect x="7.7860%" y="741" width="0.1059%" height="15" fill="rgb(219,213,19)" fg:x="1618" fg:w="22"/><text x="8.0360%" y="751.50"></text></g><g><title>serde_json::read::next_or_eof (18 samples, 0.09%)</title><rect x="7.8052%" y="725" width="0.0866%" height="15" fill="rgb(252,169,30)" fg:x="1622" fg:w="18"/><text x="8.0552%" y="735.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (18 samples, 0.09%)</title><rect x="7.8052%" y="709" width="0.0866%" height="15" fill="rgb(206,32,51)" fg:x="1622" fg:w="18"/><text x="8.0552%" y="719.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.09%)</title><rect x="7.8052%" y="693" width="0.0866%" height="15" fill="rgb(250,172,42)" fg:x="1622" fg:w="18"/><text x="8.0552%" y="703.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.08%)</title><rect x="7.8100%" y="677" width="0.0818%" height="15" fill="rgb(209,34,43)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="687.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (17 samples, 0.08%)</title><rect x="7.8100%" y="661" width="0.0818%" height="15" fill="rgb(223,11,35)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="671.50"></text></g><g><title>std::io::inlined_slow_read_byte (17 samples, 0.08%)</title><rect x="7.8100%" y="645" width="0.0818%" height="15" fill="rgb(251,219,26)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="655.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (17 samples, 0.08%)</title><rect x="7.8100%" y="629" width="0.0818%" height="15" fill="rgb(231,119,3)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (17 samples, 0.08%)</title><rect x="7.8100%" y="613" width="0.0818%" height="15" fill="rgb(216,97,11)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="623.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (17 samples, 0.08%)</title><rect x="7.8100%" y="597" width="0.0818%" height="15" fill="rgb(223,59,9)" fg:x="1623" fg:w="17"/><text x="8.0600%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.04%)</title><rect x="7.8485%" y="581" width="0.0433%" height="15" fill="rgb(233,93,31)" fg:x="1631" fg:w="9"/><text x="8.0985%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (9 samples, 0.04%)</title><rect x="7.8485%" y="565" width="0.0433%" height="15" fill="rgb(239,81,33)" fg:x="1631" fg:w="9"/><text x="8.0985%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (9 samples, 0.04%)</title><rect x="7.8485%" y="549" width="0.0433%" height="15" fill="rgb(213,120,34)" fg:x="1631" fg:w="9"/><text x="8.0985%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.04%)</title><rect x="7.8485%" y="533" width="0.0433%" height="15" fill="rgb(243,49,53)" fg:x="1631" fg:w="9"/><text x="8.0985%" y="543.50"></text></g><g><title>__aarch64_cas4_acq (9 samples, 0.04%)</title><rect x="7.8485%" y="517" width="0.0433%" height="15" fill="rgb(247,216,33)" fg:x="1631" fg:w="9"/><text x="8.0985%" y="527.50"></text></g><g><title>malloc (17 samples, 0.08%)</title><rect x="7.8966%" y="693" width="0.0818%" height="15" fill="rgb(226,26,14)" fg:x="1641" fg:w="17"/><text x="8.1466%" y="703.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="7.9111%" y="677" width="0.0674%" height="15" fill="rgb(215,49,53)" fg:x="1644" fg:w="14"/><text x="8.1611%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.20%)</title><rect x="7.7811%" y="805" width="0.2021%" height="15" fill="rgb(245,162,40)" fg:x="1617" fg:w="42"/><text x="8.0311%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (42 samples, 0.20%)</title><rect x="7.7811%" y="789" width="0.2021%" height="15" fill="rgb(229,68,17)" fg:x="1617" fg:w="42"/><text x="8.0311%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (42 samples, 0.20%)</title><rect x="7.7811%" y="773" width="0.2021%" height="15" fill="rgb(213,182,10)" fg:x="1617" fg:w="42"/><text x="8.0311%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.09%)</title><rect x="7.8918%" y="757" width="0.0914%" height="15" fill="rgb(245,125,30)" fg:x="1640" fg:w="19"/><text x="8.1418%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.09%)</title><rect x="7.8918%" y="741" width="0.0914%" height="15" fill="rgb(232,202,2)" fg:x="1640" fg:w="19"/><text x="8.1418%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.09%)</title><rect x="7.8918%" y="725" width="0.0914%" height="15" fill="rgb(237,140,51)" fg:x="1640" fg:w="19"/><text x="8.1418%" y="735.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.09%)</title><rect x="7.8918%" y="709" width="0.0914%" height="15" fill="rgb(236,157,25)" fg:x="1640" fg:w="19"/><text x="8.1418%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (47 samples, 0.23%)</title><rect x="7.7715%" y="821" width="0.2262%" height="15" fill="rgb(219,209,0)" fg:x="1615" fg:w="47"/><text x="8.0215%" y="831.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (3 samples, 0.01%)</title><rect x="7.9833%" y="805" width="0.0144%" height="15" fill="rgb(240,116,54)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="815.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (3 samples, 0.01%)</title><rect x="7.9833%" y="789" width="0.0144%" height="15" fill="rgb(216,10,36)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="799.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (3 samples, 0.01%)</title><rect x="7.9833%" y="773" width="0.0144%" height="15" fill="rgb(222,72,44)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="783.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.9833%" y="757" width="0.0144%" height="15" fill="rgb(232,159,9)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="767.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="7.9833%" y="741" width="0.0144%" height="15" fill="rgb(210,39,32)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="751.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (3 samples, 0.01%)</title><rect x="7.9833%" y="725" width="0.0144%" height="15" fill="rgb(216,194,45)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="735.50"></text></g><g><title>std::io::inlined_slow_read_byte (3 samples, 0.01%)</title><rect x="7.9833%" y="709" width="0.0144%" height="15" fill="rgb(218,18,35)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="719.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="7.9833%" y="693" width="0.0144%" height="15" fill="rgb(207,83,51)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="7.9833%" y="677" width="0.0144%" height="15" fill="rgb(225,63,43)" fg:x="1659" fg:w="3"/><text x="8.2333%" y="687.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (31 samples, 0.15%)</title><rect x="8.0218%" y="709" width="0.1492%" height="15" fill="rgb(207,57,36)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (31 samples, 0.15%)</title><rect x="8.0218%" y="693" width="0.1492%" height="15" fill="rgb(216,99,33)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (31 samples, 0.15%)</title><rect x="8.0218%" y="677" width="0.1492%" height="15" fill="rgb(225,42,16)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.15%)</title><rect x="8.0218%" y="661" width="0.1492%" height="15" fill="rgb(220,201,45)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.15%)</title><rect x="8.0218%" y="645" width="0.1492%" height="15" fill="rgb(225,33,4)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.15%)</title><rect x="8.0218%" y="629" width="0.1492%" height="15" fill="rgb(224,33,50)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.15%)</title><rect x="8.0218%" y="613" width="0.1492%" height="15" fill="rgb(246,198,51)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.15%)</title><rect x="8.0218%" y="597" width="0.1492%" height="15" fill="rgb(205,22,4)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.15%)</title><rect x="8.0218%" y="581" width="0.1492%" height="15" fill="rgb(206,3,8)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.15%)</title><rect x="8.0218%" y="565" width="0.1492%" height="15" fill="rgb(251,23,15)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.15%)</title><rect x="8.0218%" y="549" width="0.1492%" height="15" fill="rgb(252,88,28)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.15%)</title><rect x="8.0218%" y="533" width="0.1492%" height="15" fill="rgb(212,127,14)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="543.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.15%)</title><rect x="8.0218%" y="517" width="0.1492%" height="15" fill="rgb(247,145,37)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="527.50"></text></g><g><title>malloc (31 samples, 0.15%)</title><rect x="8.0218%" y="501" width="0.1492%" height="15" fill="rgb(209,117,53)" fg:x="1667" fg:w="31"/><text x="8.2718%" y="511.50"></text></g><g><title>[libc.so.6] (26 samples, 0.13%)</title><rect x="8.0458%" y="485" width="0.1251%" height="15" fill="rgb(212,90,42)" fg:x="1672" fg:w="26"/><text x="8.2958%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="8.1805%" y="677" width="0.0241%" height="15" fill="rgb(218,164,37)" fg:x="1700" fg:w="5"/><text x="8.4305%" y="687.50"></text></g><g><title>serde_json::read::as_str (5 samples, 0.02%)</title><rect x="8.1805%" y="661" width="0.0241%" height="15" fill="rgb(246,65,34)" fg:x="1700" fg:w="5"/><text x="8.4305%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (28 samples, 0.13%)</title><rect x="8.2479%" y="533" width="0.1347%" height="15" fill="rgb(231,100,33)" fg:x="1714" fg:w="28"/><text x="8.4979%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.13%)</title><rect x="8.2479%" y="517" width="0.1347%" height="15" fill="rgb(228,126,14)" fg:x="1714" fg:w="28"/><text x="8.4979%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (28 samples, 0.13%)</title><rect x="8.2479%" y="501" width="0.1347%" height="15" fill="rgb(215,173,21)" fg:x="1714" fg:w="28"/><text x="8.4979%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (28 samples, 0.13%)</title><rect x="8.2479%" y="485" width="0.1347%" height="15" fill="rgb(210,6,40)" fg:x="1714" fg:w="28"/><text x="8.4979%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.13%)</title><rect x="8.2479%" y="469" width="0.1347%" height="15" fill="rgb(212,48,18)" fg:x="1714" fg:w="28"/><text x="8.4979%" y="479.50"></text></g><g><title>__aarch64_swp4_rel (27 samples, 0.13%)</title><rect x="8.2527%" y="453" width="0.1299%" height="15" fill="rgb(230,214,11)" fg:x="1715" fg:w="27"/><text x="8.5027%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (10 samples, 0.05%)</title><rect x="8.3827%" y="533" width="0.0481%" height="15" fill="rgb(254,105,39)" fg:x="1742" fg:w="10"/><text x="8.6327%" y="543.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.04%)</title><rect x="8.3875%" y="517" width="0.0433%" height="15" fill="rgb(245,158,5)" fg:x="1743" fg:w="9"/><text x="8.6375%" y="527.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="8.4067%" y="501" width="0.0241%" height="15" fill="rgb(249,208,11)" fg:x="1747" fg:w="5"/><text x="8.6567%" y="511.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="8.4067%" y="485" width="0.0241%" height="15" fill="rgb(210,39,28)" fg:x="1747" fg:w="5"/><text x="8.6567%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (113 samples, 0.54%)</title><rect x="8.0169%" y="773" width="0.5438%" height="15" fill="rgb(211,56,53)" fg:x="1666" fg:w="113"/><text x="8.2669%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (113 samples, 0.54%)</title><rect x="8.0169%" y="757" width="0.5438%" height="15" fill="rgb(226,201,30)" fg:x="1666" fg:w="113"/><text x="8.2669%" y="767.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (113 samples, 0.54%)</title><rect x="8.0169%" y="741" width="0.5438%" height="15" fill="rgb(239,101,34)" fg:x="1666" fg:w="113"/><text x="8.2669%" y="751.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (113 samples, 0.54%)</title><rect x="8.0169%" y="725" width="0.5438%" height="15" fill="rgb(226,209,5)" fg:x="1666" fg:w="113"/><text x="8.2669%" y="735.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (81 samples, 0.39%)</title><rect x="8.1709%" y="709" width="0.3898%" height="15" fill="rgb(250,105,47)" fg:x="1698" fg:w="81"/><text x="8.4209%" y="719.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (79 samples, 0.38%)</title><rect x="8.1805%" y="693" width="0.3802%" height="15" fill="rgb(230,72,3)" fg:x="1700" fg:w="79"/><text x="8.4305%" y="703.50"></text></g><g><title>serde_json::read::next_or_eof (74 samples, 0.36%)</title><rect x="8.2046%" y="677" width="0.3561%" height="15" fill="rgb(232,218,39)" fg:x="1705" fg:w="74"/><text x="8.4546%" y="687.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (74 samples, 0.36%)</title><rect x="8.2046%" y="661" width="0.3561%" height="15" fill="rgb(248,166,6)" fg:x="1705" fg:w="74"/><text x="8.4546%" y="671.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.36%)</title><rect x="8.2046%" y="645" width="0.3561%" height="15" fill="rgb(247,89,20)" fg:x="1705" fg:w="74"/><text x="8.4546%" y="655.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.35%)</title><rect x="8.2142%" y="629" width="0.3465%" height="15" fill="rgb(248,130,54)" fg:x="1707" fg:w="72"/><text x="8.4642%" y="639.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (72 samples, 0.35%)</title><rect x="8.2142%" y="613" width="0.3465%" height="15" fill="rgb(234,196,4)" fg:x="1707" fg:w="72"/><text x="8.4642%" y="623.50"></text></g><g><title>std::io::inlined_slow_read_byte (72 samples, 0.35%)</title><rect x="8.2142%" y="597" width="0.3465%" height="15" fill="rgb(250,143,31)" fg:x="1707" fg:w="72"/><text x="8.4642%" y="607.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (68 samples, 0.33%)</title><rect x="8.2335%" y="581" width="0.3272%" height="15" fill="rgb(211,110,34)" fg:x="1711" fg:w="68"/><text x="8.4835%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (68 samples, 0.33%)</title><rect x="8.2335%" y="565" width="0.3272%" height="15" fill="rgb(215,124,48)" fg:x="1711" fg:w="68"/><text x="8.4835%" y="575.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (68 samples, 0.33%)</title><rect x="8.2335%" y="549" width="0.3272%" height="15" fill="rgb(216,46,13)" fg:x="1711" fg:w="68"/><text x="8.4835%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.13%)</title><rect x="8.4308%" y="533" width="0.1299%" height="15" fill="rgb(205,184,25)" fg:x="1752" fg:w="27"/><text x="8.6808%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (25 samples, 0.12%)</title><rect x="8.4404%" y="517" width="0.1203%" height="15" fill="rgb(228,1,10)" fg:x="1754" fg:w="25"/><text x="8.6904%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (25 samples, 0.12%)</title><rect x="8.4404%" y="501" width="0.1203%" height="15" fill="rgb(213,116,27)" fg:x="1754" fg:w="25"/><text x="8.6904%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.12%)</title><rect x="8.4404%" y="485" width="0.1203%" height="15" fill="rgb(241,95,50)" fg:x="1754" fg:w="25"/><text x="8.6904%" y="495.50"></text></g><g><title>__aarch64_cas4_acq (24 samples, 0.12%)</title><rect x="8.4452%" y="469" width="0.1155%" height="15" fill="rgb(238,48,32)" fg:x="1755" fg:w="24"/><text x="8.6952%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="8.6040%" y="613" width="0.0337%" height="15" fill="rgb(235,113,49)" fg:x="1788" fg:w="7"/><text x="8.8540%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="8.6040%" y="597" width="0.0337%" height="15" fill="rgb(205,127,43)" fg:x="1788" fg:w="7"/><text x="8.8540%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (7 samples, 0.03%)</title><rect x="8.6040%" y="581" width="0.0337%" height="15" fill="rgb(250,162,2)" fg:x="1788" fg:w="7"/><text x="8.8540%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.03%)</title><rect x="8.6040%" y="565" width="0.0337%" height="15" fill="rgb(220,13,41)" fg:x="1788" fg:w="7"/><text x="8.8540%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.03%)</title><rect x="8.6040%" y="549" width="0.0337%" height="15" fill="rgb(249,221,25)" fg:x="1788" fg:w="7"/><text x="8.8540%" y="559.50"></text></g><g><title>__aarch64_swp4_rel (6 samples, 0.03%)</title><rect x="8.6088%" y="533" width="0.0289%" height="15" fill="rgb(215,208,19)" fg:x="1789" fg:w="6"/><text x="8.8588%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (5 samples, 0.02%)</title><rect x="8.6377%" y="613" width="0.0241%" height="15" fill="rgb(236,175,2)" fg:x="1795" fg:w="5"/><text x="8.8877%" y="623.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="8.6377%" y="597" width="0.0241%" height="15" fill="rgb(241,52,2)" fg:x="1795" fg:w="5"/><text x="8.8877%" y="607.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="8.6425%" y="581" width="0.0192%" height="15" fill="rgb(248,140,14)" fg:x="1796" fg:w="4"/><text x="8.8925%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="8.6618%" y="597" width="0.0144%" height="15" fill="rgb(253,22,42)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="607.50"></text></g><g><title>std::sync::poison::Flag::guard (3 samples, 0.01%)</title><rect x="8.6618%" y="581" width="0.0144%" height="15" fill="rgb(234,61,47)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="591.50"></text></g><g><title>std::thread::panicking (3 samples, 0.01%)</title><rect x="8.6618%" y="565" width="0.0144%" height="15" fill="rgb(208,226,15)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="575.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.01%)</title><rect x="8.6618%" y="549" width="0.0144%" height="15" fill="rgb(217,221,4)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="559.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.01%)</title><rect x="8.6618%" y="533" width="0.0144%" height="15" fill="rgb(212,174,34)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="8.6618%" y="517" width="0.0144%" height="15" fill="rgb(253,83,4)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="8.6618%" y="501" width="0.0144%" height="15" fill="rgb(250,195,49)" fg:x="1800" fg:w="3"/><text x="8.9118%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (183 samples, 0.88%)</title><rect x="8.0073%" y="789" width="0.8806%" height="15" fill="rgb(241,192,25)" fg:x="1664" fg:w="183"/><text x="8.2573%" y="799.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (68 samples, 0.33%)</title><rect x="8.5607%" y="773" width="0.3272%" height="15" fill="rgb(208,124,10)" fg:x="1779" fg:w="68"/><text x="8.8107%" y="783.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (68 samples, 0.33%)</title><rect x="8.5607%" y="757" width="0.3272%" height="15" fill="rgb(222,33,0)" fg:x="1779" fg:w="68"/><text x="8.8107%" y="767.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (68 samples, 0.33%)</title><rect x="8.5607%" y="741" width="0.3272%" height="15" fill="rgb(234,209,28)" fg:x="1779" fg:w="68"/><text x="8.8107%" y="751.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.32%)</title><rect x="8.5703%" y="725" width="0.3176%" height="15" fill="rgb(224,11,23)" fg:x="1781" fg:w="66"/><text x="8.8203%" y="735.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.31%)</title><rect x="8.5800%" y="709" width="0.3080%" height="15" fill="rgb(232,99,1)" fg:x="1783" fg:w="64"/><text x="8.8300%" y="719.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (64 samples, 0.31%)</title><rect x="8.5800%" y="693" width="0.3080%" height="15" fill="rgb(237,95,45)" fg:x="1783" fg:w="64"/><text x="8.8300%" y="703.50"></text></g><g><title>std::io::inlined_slow_read_byte (64 samples, 0.31%)</title><rect x="8.5800%" y="677" width="0.3080%" height="15" fill="rgb(208,109,11)" fg:x="1783" fg:w="64"/><text x="8.8300%" y="687.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (64 samples, 0.31%)</title><rect x="8.5800%" y="661" width="0.3080%" height="15" fill="rgb(216,190,48)" fg:x="1783" fg:w="64"/><text x="8.8300%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (64 samples, 0.31%)</title><rect x="8.5800%" y="645" width="0.3080%" height="15" fill="rgb(251,171,36)" fg:x="1783" fg:w="64"/><text x="8.8300%" y="655.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (63 samples, 0.30%)</title><rect x="8.5848%" y="629" width="0.3032%" height="15" fill="rgb(230,62,22)" fg:x="1784" fg:w="63"/><text x="8.8348%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.23%)</title><rect x="8.6618%" y="613" width="0.2262%" height="15" fill="rgb(225,114,35)" fg:x="1800" fg:w="47"/><text x="8.9118%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (44 samples, 0.21%)</title><rect x="8.6762%" y="597" width="0.2117%" height="15" fill="rgb(215,118,42)" fg:x="1803" fg:w="44"/><text x="8.9262%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (44 samples, 0.21%)</title><rect x="8.6762%" y="581" width="0.2117%" height="15" fill="rgb(243,119,21)" fg:x="1803" fg:w="44"/><text x="8.9262%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.21%)</title><rect x="8.6762%" y="565" width="0.2117%" height="15" fill="rgb(252,177,53)" fg:x="1803" fg:w="44"/><text x="8.9262%" y="575.50"></text></g><g><title>__aarch64_cas4_acq (43 samples, 0.21%)</title><rect x="8.6810%" y="549" width="0.2069%" height="15" fill="rgb(237,209,29)" fg:x="1804" fg:w="43"/><text x="8.9310%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="8.8927%" y="597" width="0.0144%" height="15" fill="rgb(212,65,23)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="8.8927%" y="581" width="0.0144%" height="15" fill="rgb(230,222,46)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="8.8927%" y="565" width="0.0144%" height="15" fill="rgb(215,135,32)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="8.8927%" y="549" width="0.0144%" height="15" fill="rgb(246,101,22)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="8.8927%" y="533" width="0.0144%" height="15" fill="rgb(206,107,13)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="543.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="8.8927%" y="517" width="0.0144%" height="15" fill="rgb(250,100,44)" fg:x="1848" fg:w="3"/><text x="9.1427%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (4 samples, 0.02%)</title><rect x="8.9072%" y="597" width="0.0192%" height="15" fill="rgb(231,147,38)" fg:x="1851" fg:w="4"/><text x="9.1572%" y="607.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="8.9072%" y="581" width="0.0192%" height="15" fill="rgb(229,8,40)" fg:x="1851" fg:w="4"/><text x="9.1572%" y="591.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.02%)</title><rect x="8.9072%" y="565" width="0.0192%" height="15" fill="rgb(221,135,30)" fg:x="1851" fg:w="4"/><text x="9.1572%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12 samples, 0.06%)</title><rect x="8.8879%" y="789" width="0.0577%" height="15" fill="rgb(249,193,18)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="799.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (12 samples, 0.06%)</title><rect x="8.8879%" y="773" width="0.0577%" height="15" fill="rgb(209,133,39)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="783.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (12 samples, 0.06%)</title><rect x="8.8879%" y="757" width="0.0577%" height="15" fill="rgb(232,100,14)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="767.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (12 samples, 0.06%)</title><rect x="8.8879%" y="741" width="0.0577%" height="15" fill="rgb(224,185,1)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="751.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (12 samples, 0.06%)</title><rect x="8.8879%" y="725" width="0.0577%" height="15" fill="rgb(223,139,8)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="735.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="8.8879%" y="709" width="0.0577%" height="15" fill="rgb(232,213,38)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="719.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="8.8879%" y="693" width="0.0577%" height="15" fill="rgb(207,94,22)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="703.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (12 samples, 0.06%)</title><rect x="8.8879%" y="677" width="0.0577%" height="15" fill="rgb(219,183,54)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="687.50"></text></g><g><title>std::io::inlined_slow_read_byte (12 samples, 0.06%)</title><rect x="8.8879%" y="661" width="0.0577%" height="15" fill="rgb(216,185,54)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="671.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (12 samples, 0.06%)</title><rect x="8.8879%" y="645" width="0.0577%" height="15" fill="rgb(254,217,39)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (12 samples, 0.06%)</title><rect x="8.8879%" y="629" width="0.0577%" height="15" fill="rgb(240,178,23)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="639.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (12 samples, 0.06%)</title><rect x="8.8879%" y="613" width="0.0577%" height="15" fill="rgb(218,11,47)" fg:x="1847" fg:w="12"/><text x="9.1379%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="8.9264%" y="597" width="0.0192%" height="15" fill="rgb(218,51,51)" fg:x="1855" fg:w="4"/><text x="9.1764%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (3 samples, 0.01%)</title><rect x="8.9312%" y="581" width="0.0144%" height="15" fill="rgb(238,126,27)" fg:x="1856" fg:w="3"/><text x="9.1812%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (3 samples, 0.01%)</title><rect x="8.9312%" y="565" width="0.0144%" height="15" fill="rgb(249,202,22)" fg:x="1856" fg:w="3"/><text x="9.1812%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.01%)</title><rect x="8.9312%" y="549" width="0.0144%" height="15" fill="rgb(254,195,49)" fg:x="1856" fg:w="3"/><text x="9.1812%" y="559.50"></text></g><g><title>__aarch64_cas4_acq (3 samples, 0.01%)</title><rect x="8.9312%" y="533" width="0.0144%" height="15" fill="rgb(208,123,14)" fg:x="1856" fg:w="3"/><text x="9.1812%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.09%)</title><rect x="8.9553%" y="725" width="0.0914%" height="15" fill="rgb(224,200,8)" fg:x="1861" fg:w="19"/><text x="9.2053%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="9.0275%" y="709" width="0.0192%" height="15" fill="rgb(217,61,36)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="9.0275%" y="693" width="0.0192%" height="15" fill="rgb(206,35,45)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="9.0275%" y="677" width="0.0192%" height="15" fill="rgb(217,65,33)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="9.0275%" y="661" width="0.0192%" height="15" fill="rgb(222,158,48)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="9.0275%" y="645" width="0.0192%" height="15" fill="rgb(254,2,54)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="655.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="9.0275%" y="629" width="0.0192%" height="15" fill="rgb(250,143,38)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="639.50"></text></g><g><title>realloc (4 samples, 0.02%)</title><rect x="9.0275%" y="613" width="0.0192%" height="15" fill="rgb(248,25,0)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="623.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="9.0275%" y="597" width="0.0192%" height="15" fill="rgb(206,152,27)" fg:x="1876" fg:w="4"/><text x="9.2775%" y="607.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="9.0323%" y="581" width="0.0144%" height="15" fill="rgb(240,77,30)" fg:x="1877" fg:w="3"/><text x="9.2823%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.06%)</title><rect x="9.0467%" y="725" width="0.0626%" height="15" fill="rgb(231,5,3)" fg:x="1880" fg:w="13"/><text x="9.2967%" y="735.50"></text></g><g><title>serde_json::read::as_str (13 samples, 0.06%)</title><rect x="9.0467%" y="709" width="0.0626%" height="15" fill="rgb(207,226,32)" fg:x="1880" fg:w="13"/><text x="9.2967%" y="719.50"></text></g><g><title>core::str::converts::from_utf8 (10 samples, 0.05%)</title><rect x="9.0612%" y="693" width="0.0481%" height="15" fill="rgb(222,207,47)" fg:x="1883" fg:w="10"/><text x="9.3112%" y="703.50"></text></g><g><title>core::str::validations::run_utf8_validation (10 samples, 0.05%)</title><rect x="9.0612%" y="677" width="0.0481%" height="15" fill="rgb(229,115,45)" fg:x="1883" fg:w="10"/><text x="9.3112%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (24 samples, 0.12%)</title><rect x="9.9610%" y="581" width="0.1155%" height="15" fill="rgb(224,191,6)" fg:x="2070" fg:w="24"/><text x="10.2110%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (577 samples, 2.78%)</title><rect x="10.0765%" y="581" width="2.7766%" height="15" fill="rgb(230,227,24)" fg:x="2094" fg:w="577"/><text x="10.3265%" y="591.50">co..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (577 samples, 2.78%)</title><rect x="10.0765%" y="565" width="2.7766%" height="15" fill="rgb(228,80,19)" fg:x="2094" fg:w="577"/><text x="10.3265%" y="575.50">&lt;s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (577 samples, 2.78%)</title><rect x="10.0765%" y="549" width="2.7766%" height="15" fill="rgb(247,229,0)" fg:x="2094" fg:w="577"/><text x="10.3265%" y="559.50">st..</text></g><g><title>core::sync::atomic::AtomicU32::swap (577 samples, 2.78%)</title><rect x="10.0765%" y="533" width="2.7766%" height="15" fill="rgb(237,194,15)" fg:x="2094" fg:w="577"/><text x="10.3265%" y="543.50">co..</text></g><g><title>core::sync::atomic::atomic_swap (577 samples, 2.78%)</title><rect x="10.0765%" y="517" width="2.7766%" height="15" fill="rgb(219,203,20)" fg:x="2094" fg:w="577"/><text x="10.3265%" y="527.50">co..</text></g><g><title>__aarch64_swp4_rel (551 samples, 2.65%)</title><rect x="10.2016%" y="501" width="2.6515%" height="15" fill="rgb(234,128,8)" fg:x="2120" fg:w="551"/><text x="10.4516%" y="511.50">__..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (20 samples, 0.10%)</title><rect x="13.8781%" y="501" width="0.0962%" height="15" fill="rgb(248,202,8)" fg:x="2884" fg:w="20"/><text x="14.1281%" y="511.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (20 samples, 0.10%)</title><rect x="13.8781%" y="485" width="0.0962%" height="15" fill="rgb(206,104,37)" fg:x="2884" fg:w="20"/><text x="14.1281%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (24 samples, 0.12%)</title><rect x="13.9743%" y="469" width="0.1155%" height="15" fill="rgb(223,8,27)" fg:x="2904" fg:w="24"/><text x="14.2243%" y="479.50"></text></g><g><title>__kfree_skb (3 samples, 0.01%)</title><rect x="14.2245%" y="101" width="0.0144%" height="15" fill="rgb(216,217,28)" fg:x="2956" fg:w="3"/><text x="14.4745%" y="111.50"></text></g><g><title>__check_object_size (3 samples, 0.01%)</title><rect x="14.2534%" y="53" width="0.0144%" height="15" fill="rgb(249,199,1)" fg:x="2962" fg:w="3"/><text x="14.5034%" y="63.50"></text></g><g><title>__check_object_size.part.0 (3 samples, 0.01%)</title><rect x="14.2534%" y="37" width="0.0144%" height="15" fill="rgb(240,85,17)" fg:x="2962" fg:w="3"/><text x="14.5034%" y="47.50"></text></g><g><title>_copy_to_iter (6 samples, 0.03%)</title><rect x="14.2678%" y="53" width="0.0289%" height="15" fill="rgb(206,108,45)" fg:x="2965" fg:w="6"/><text x="14.5178%" y="63.50"></text></g><g><title>__arch_copy_to_user (5 samples, 0.02%)</title><rect x="14.2727%" y="37" width="0.0241%" height="15" fill="rgb(245,210,41)" fg:x="2966" fg:w="5"/><text x="14.5227%" y="47.50"></text></g><g><title>skb_copy_datagram_iter (13 samples, 0.06%)</title><rect x="14.2438%" y="101" width="0.0626%" height="15" fill="rgb(206,13,37)" fg:x="2960" fg:w="13"/><text x="14.4938%" y="111.50"></text></g><g><title>__skb_datagram_iter (13 samples, 0.06%)</title><rect x="14.2438%" y="85" width="0.0626%" height="15" fill="rgb(250,61,18)" fg:x="2960" fg:w="13"/><text x="14.4938%" y="95.50"></text></g><g><title>simple_copy_to_iter (12 samples, 0.06%)</title><rect x="14.2486%" y="69" width="0.0577%" height="15" fill="rgb(235,172,48)" fg:x="2961" fg:w="12"/><text x="14.4986%" y="79.50"></text></g><g><title>inet_recvmsg (27 samples, 0.13%)</title><rect x="14.1908%" y="149" width="0.1299%" height="15" fill="rgb(249,201,17)" fg:x="2949" fg:w="27"/><text x="14.4408%" y="159.50"></text></g><g><title>tcp_recvmsg (26 samples, 0.13%)</title><rect x="14.1957%" y="133" width="0.1251%" height="15" fill="rgb(219,208,6)" fg:x="2950" fg:w="26"/><text x="14.4457%" y="143.50"></text></g><g><title>tcp_recvmsg_locked (23 samples, 0.11%)</title><rect x="14.2101%" y="117" width="0.1107%" height="15" fill="rgb(248,31,23)" fg:x="2953" fg:w="23"/><text x="14.4601%" y="127.50"></text></g><g><title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="14.3208%" y="149" width="0.0192%" height="15" fill="rgb(245,15,42)" fg:x="2976" fg:w="4"/><text x="14.5708%" y="159.50"></text></g><g><title>apparmor_socket_recvmsg (4 samples, 0.02%)</title><rect x="14.3208%" y="133" width="0.0192%" height="15" fill="rgb(222,217,39)" fg:x="2976" fg:w="4"/><text x="14.5708%" y="143.50"></text></g><g><title>aa_sk_perm (4 samples, 0.02%)</title><rect x="14.3208%" y="117" width="0.0192%" height="15" fill="rgb(210,219,27)" fg:x="2976" fg:w="4"/><text x="14.5708%" y="127.50"></text></g><g><title>__sys_recvfrom (37 samples, 0.18%)</title><rect x="14.1812%" y="165" width="0.1780%" height="15" fill="rgb(252,166,36)" fg:x="2947" fg:w="37"/><text x="14.4312%" y="175.50"></text></g><g><title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="14.3400%" y="149" width="0.0192%" height="15" fill="rgb(245,132,34)" fg:x="2980" fg:w="4"/><text x="14.5900%" y="159.50"></text></g><g><title>__arm64_sys_recvfrom (38 samples, 0.18%)</title><rect x="14.1812%" y="181" width="0.1829%" height="15" fill="rgb(236,54,3)" fg:x="2947" fg:w="38"/><text x="14.4312%" y="191.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (88 samples, 0.42%)</title><rect x="13.9743%" y="501" width="0.4235%" height="15" fill="rgb(241,173,43)" fg:x="2904" fg:w="88"/><text x="14.2243%" y="511.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (88 samples, 0.42%)</title><rect x="13.9743%" y="485" width="0.4235%" height="15" fill="rgb(215,190,9)" fg:x="2904" fg:w="88"/><text x="14.2243%" y="495.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (64 samples, 0.31%)</title><rect x="14.0898%" y="469" width="0.3080%" height="15" fill="rgb(242,101,16)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="479.50"></text></g><g><title>std::io::Read::read_buf (64 samples, 0.31%)</title><rect x="14.0898%" y="453" width="0.3080%" height="15" fill="rgb(223,190,21)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="463.50"></text></g><g><title>std::io::default_read_buf (64 samples, 0.31%)</title><rect x="14.0898%" y="437" width="0.3080%" height="15" fill="rgb(215,228,25)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="447.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (64 samples, 0.31%)</title><rect x="14.0898%" y="421" width="0.3080%" height="15" fill="rgb(225,36,22)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="431.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Read&gt;::read (64 samples, 0.31%)</title><rect x="14.0898%" y="405" width="0.3080%" height="15" fill="rgb(251,106,46)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="415.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Read&gt;::read (64 samples, 0.31%)</title><rect x="14.0898%" y="389" width="0.3080%" height="15" fill="rgb(208,90,1)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="399.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Read&gt;::read (64 samples, 0.31%)</title><rect x="14.0898%" y="373" width="0.3080%" height="15" fill="rgb(243,10,4)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="383.50"></text></g><g><title>std::net::udp::UdpSocket::recv (64 samples, 0.31%)</title><rect x="14.0898%" y="357" width="0.3080%" height="15" fill="rgb(212,137,27)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="367.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (64 samples, 0.31%)</title><rect x="14.0898%" y="341" width="0.3080%" height="15" fill="rgb(231,220,49)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::read (64 samples, 0.31%)</title><rect x="14.0898%" y="325" width="0.3080%" height="15" fill="rgb(237,96,20)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (64 samples, 0.31%)</title><rect x="14.0898%" y="309" width="0.3080%" height="15" fill="rgb(239,229,30)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="319.50"></text></g><g><title>recv (64 samples, 0.31%)</title><rect x="14.0898%" y="293" width="0.3080%" height="15" fill="rgb(219,65,33)" fg:x="2928" fg:w="64"/><text x="14.3398%" y="303.50"></text></g><g><title>el0t_64_sync (56 samples, 0.27%)</title><rect x="14.1283%" y="277" width="0.2695%" height="15" fill="rgb(243,134,7)" fg:x="2936" fg:w="56"/><text x="14.3783%" y="287.50"></text></g><g><title>el0t_64_sync_handler (56 samples, 0.27%)</title><rect x="14.1283%" y="261" width="0.2695%" height="15" fill="rgb(216,177,54)" fg:x="2936" fg:w="56"/><text x="14.3783%" y="271.50"></text></g><g><title>el0_svc (56 samples, 0.27%)</title><rect x="14.1283%" y="245" width="0.2695%" height="15" fill="rgb(211,160,20)" fg:x="2936" fg:w="56"/><text x="14.3783%" y="255.50"></text></g><g><title>do_el0_svc (56 samples, 0.27%)</title><rect x="14.1283%" y="229" width="0.2695%" height="15" fill="rgb(239,85,39)" fg:x="2936" fg:w="56"/><text x="14.3783%" y="239.50"></text></g><g><title>el0_svc_common.constprop.0 (56 samples, 0.27%)</title><rect x="14.1283%" y="213" width="0.2695%" height="15" fill="rgb(232,125,22)" fg:x="2936" fg:w="56"/><text x="14.3783%" y="223.50"></text></g><g><title>invoke_syscall (47 samples, 0.23%)</title><rect x="14.1716%" y="197" width="0.2262%" height="15" fill="rgb(244,57,34)" fg:x="2945" fg:w="47"/><text x="14.4216%" y="207.50"></text></g><g><title>get_random_u32 (6 samples, 0.03%)</title><rect x="14.3689%" y="181" width="0.0289%" height="15" fill="rgb(214,203,32)" fg:x="2986" fg:w="6"/><text x="14.6189%" y="191.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (25 samples, 0.12%)</title><rect x="14.3978%" y="501" width="0.1203%" height="15" fill="rgb(207,58,43)" fg:x="2992" fg:w="25"/><text x="14.6478%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (379 samples, 1.82%)</title><rect x="12.8531%" y="581" width="1.8238%" height="15" fill="rgb(215,193,15)" fg:x="2671" fg:w="379"/><text x="13.1031%" y="591.50">s..</text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (355 samples, 1.71%)</title><rect x="12.9686%" y="565" width="1.7083%" height="15" fill="rgb(232,15,44)" fg:x="2695" fg:w="355"/><text x="13.2186%" y="575.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (317 samples, 1.53%)</title><rect x="13.1514%" y="549" width="1.5254%" height="15" fill="rgb(212,3,48)" fg:x="2733" fg:w="317"/><text x="13.4014%" y="559.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialReader&lt;R&gt; as std::io::Read&gt;::read (268 samples, 1.29%)</title><rect x="13.3872%" y="533" width="1.2896%" height="15" fill="rgb(218,128,7)" fg:x="2782" fg:w="268"/><text x="13.6372%" y="543.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (195 samples, 0.94%)</title><rect x="13.7385%" y="517" width="0.9384%" height="15" fill="rgb(226,216,39)" fg:x="2855" fg:w="195"/><text x="13.9885%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (33 samples, 0.16%)</title><rect x="14.5181%" y="501" width="0.1588%" height="15" fill="rgb(243,47,51)" fg:x="3017" fg:w="33"/><text x="14.7681%" y="511.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (75 samples, 0.36%)</title><rect x="14.6769%" y="565" width="0.3609%" height="15" fill="rgb(241,183,40)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="575.50"></text></g><g><title>std::sync::poison::Flag::guard (75 samples, 0.36%)</title><rect x="14.6769%" y="549" width="0.3609%" height="15" fill="rgb(231,217,32)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="559.50"></text></g><g><title>std::thread::panicking (75 samples, 0.36%)</title><rect x="14.6769%" y="533" width="0.3609%" height="15" fill="rgb(229,61,38)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="543.50"></text></g><g><title>std::panicking::panicking (75 samples, 0.36%)</title><rect x="14.6769%" y="517" width="0.3609%" height="15" fill="rgb(225,210,5)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="527.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (75 samples, 0.36%)</title><rect x="14.6769%" y="501" width="0.3609%" height="15" fill="rgb(231,79,45)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (75 samples, 0.36%)</title><rect x="14.6769%" y="485" width="0.3609%" height="15" fill="rgb(224,100,7)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (75 samples, 0.36%)</title><rect x="14.6769%" y="469" width="0.3609%" height="15" fill="rgb(241,198,18)" fg:x="3050" fg:w="75"/><text x="14.9269%" y="479.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,969 samples, 9.48%)</title><rect x="9.1093%" y="693" width="9.4750%" height="15" fill="rgb(252,97,53)" fg:x="1893" fg:w="1969"/><text x="9.3593%" y="703.50">&lt;serde_json::i..</text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,911 samples, 9.20%)</title><rect x="9.3884%" y="677" width="9.1959%" height="15" fill="rgb(220,88,7)" fg:x="1951" fg:w="1911"/><text x="9.6384%" y="687.50">&lt;std::io::Byt..</text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (1,911 samples, 9.20%)</title><rect x="9.3884%" y="661" width="9.1959%" height="15" fill="rgb(213,176,14)" fg:x="1951" fg:w="1911"/><text x="9.6384%" y="671.50">&lt;R as std::io..</text></g><g><title>std::io::inlined_slow_read_byte (1,911 samples, 9.20%)</title><rect x="9.3884%" y="645" width="9.1959%" height="15" fill="rgb(246,73,7)" fg:x="1951" fg:w="1911"/><text x="9.6384%" y="655.50">std::io::inli..</text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (1,887 samples, 9.08%)</title><rect x="9.5039%" y="629" width="9.0804%" height="15" fill="rgb(245,64,36)" fg:x="1975" fg:w="1887"/><text x="9.7539%" y="639.50">&lt;rouille::Req..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (1,887 samples, 9.08%)</title><rect x="9.5039%" y="613" width="9.0804%" height="15" fill="rgb(245,80,10)" fg:x="1975" fg:w="1887"/><text x="9.7539%" y="623.50">std::io::impl..</text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (1,872 samples, 9.01%)</title><rect x="9.5761%" y="597" width="9.0082%" height="15" fill="rgb(232,107,50)" fg:x="1990" fg:w="1872"/><text x="9.8261%" y="607.50">&lt;rouille::Ser..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (812 samples, 3.91%)</title><rect x="14.6769%" y="581" width="3.9074%" height="15" fill="rgb(253,3,0)" fg:x="3050" fg:w="812"/><text x="14.9269%" y="591.50">std:..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (737 samples, 3.55%)</title><rect x="15.0378%" y="565" width="3.5465%" height="15" fill="rgb(212,99,53)" fg:x="3125" fg:w="737"/><text x="15.2878%" y="575.50">std:..</text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (737 samples, 3.55%)</title><rect x="15.0378%" y="549" width="3.5465%" height="15" fill="rgb(249,111,54)" fg:x="3125" fg:w="737"/><text x="15.2878%" y="559.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (737 samples, 3.55%)</title><rect x="15.0378%" y="533" width="3.5465%" height="15" fill="rgb(249,55,30)" fg:x="3125" fg:w="737"/><text x="15.2878%" y="543.50">core..</text></g><g><title>__aarch64_cas4_acq (714 samples, 3.44%)</title><rect x="15.1485%" y="517" width="3.4358%" height="15" fill="rgb(237,47,42)" fg:x="3148" fg:w="714"/><text x="15.3985%" y="527.50">__a..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (2,028 samples, 9.76%)</title><rect x="8.9553%" y="757" width="9.7589%" height="15" fill="rgb(211,20,18)" fg:x="1861" fg:w="2028"/><text x="9.2053%" y="767.50">&lt;serde_json::r..</text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (2,028 samples, 9.76%)</title><rect x="8.9553%" y="741" width="9.7589%" height="15" fill="rgb(231,203,46)" fg:x="1861" fg:w="2028"/><text x="9.2053%" y="751.50">serde_json::re..</text></g><g><title>serde_json::read::next_or_eof (1,996 samples, 9.60%)</title><rect x="9.1093%" y="725" width="9.6049%" height="15" fill="rgb(237,142,3)" fg:x="1893" fg:w="1996"/><text x="9.3593%" y="735.50">serde_json::re..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (1,996 samples, 9.60%)</title><rect x="9.1093%" y="709" width="9.6049%" height="15" fill="rgb(241,107,1)" fg:x="1893" fg:w="1996"/><text x="9.3593%" y="719.50">&lt;serde_json::r..</text></g><g><title>core::option::Option&lt;T&gt;::take (27 samples, 0.13%)</title><rect x="18.5843%" y="693" width="0.1299%" height="15" fill="rgb(229,83,13)" fg:x="3862" fg:w="27"/><text x="18.8343%" y="703.50"></text></g><g><title>core::mem::replace (27 samples, 0.13%)</title><rect x="18.5843%" y="677" width="0.1299%" height="15" fill="rgb(241,91,40)" fg:x="3862" fg:w="27"/><text x="18.8343%" y="687.50"></text></g><g><title>core::ptr::read (27 samples, 0.13%)</title><rect x="18.5843%" y="661" width="0.1299%" height="15" fill="rgb(225,3,45)" fg:x="3862" fg:w="27"/><text x="18.8343%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.27%)</title><rect x="18.7190%" y="757" width="0.2695%" height="15" fill="rgb(244,223,14)" fg:x="3890" fg:w="56"/><text x="18.9690%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.27%)</title><rect x="18.7190%" y="741" width="0.2695%" height="15" fill="rgb(224,124,37)" fg:x="3890" fg:w="56"/><text x="18.9690%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.27%)</title><rect x="18.7190%" y="725" width="0.2695%" height="15" fill="rgb(251,171,30)" fg:x="3890" fg:w="56"/><text x="18.9690%" y="735.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.27%)</title><rect x="18.7190%" y="709" width="0.2695%" height="15" fill="rgb(236,46,54)" fg:x="3890" fg:w="56"/><text x="18.9690%" y="719.50"></text></g><g><title>malloc (56 samples, 0.27%)</title><rect x="18.7190%" y="693" width="0.2695%" height="15" fill="rgb(245,213,5)" fg:x="3890" fg:w="56"/><text x="18.9690%" y="703.50"></text></g><g><title>[libc.so.6] (50 samples, 0.24%)</title><rect x="18.7479%" y="677" width="0.2406%" height="15" fill="rgb(230,144,27)" fg:x="3896" fg:w="50"/><text x="18.9979%" y="687.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="18.9308%" y="661" width="0.0577%" height="15" fill="rgb(220,86,6)" fg:x="3934" fg:w="12"/><text x="19.1808%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="18.9933%" y="597" width="0.0144%" height="15" fill="rgb(240,20,13)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="18.9933%" y="581" width="0.0144%" height="15" fill="rgb(217,89,34)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="18.9933%" y="565" width="0.0144%" height="15" fill="rgb(229,13,5)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="18.9933%" y="549" width="0.0144%" height="15" fill="rgb(244,67,35)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="18.9933%" y="533" width="0.0144%" height="15" fill="rgb(221,40,2)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="543.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="18.9933%" y="517" width="0.0144%" height="15" fill="rgb(237,157,21)" fg:x="3947" fg:w="3"/><text x="19.2433%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="19.0077%" y="597" width="0.0144%" height="15" fill="rgb(222,94,11)" fg:x="3950" fg:w="3"/><text x="19.2577%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,296 samples, 11.05%)</title><rect x="7.9977%" y="821" width="11.0486%" height="15" fill="rgb(249,113,6)" fg:x="1662" fg:w="2296"/><text x="8.2477%" y="831.50">serde::de::MapAc..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,296 samples, 11.05%)</title><rect x="7.9977%" y="805" width="11.0486%" height="15" fill="rgb(238,137,36)" fg:x="1662" fg:w="2296"/><text x="8.2477%" y="815.50">serde::de::MapAc..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,099 samples, 10.10%)</title><rect x="8.9457%" y="789" width="10.1006%" height="15" fill="rgb(210,102,26)" fg:x="1859" fg:w="2099"/><text x="9.1957%" y="799.50">serde_json::val..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,097 samples, 10.09%)</title><rect x="8.9553%" y="773" width="10.0909%" height="15" fill="rgb(218,30,30)" fg:x="1861" fg:w="2097"/><text x="9.2053%" y="783.50">&lt;&amp;mut serde_jso..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (12 samples, 0.06%)</title><rect x="18.9885%" y="757" width="0.0577%" height="15" fill="rgb(214,67,26)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="767.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (12 samples, 0.06%)</title><rect x="18.9885%" y="741" width="0.0577%" height="15" fill="rgb(251,9,53)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="751.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (12 samples, 0.06%)</title><rect x="18.9885%" y="725" width="0.0577%" height="15" fill="rgb(228,204,25)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="735.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="18.9885%" y="709" width="0.0577%" height="15" fill="rgb(207,153,8)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="719.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="18.9885%" y="693" width="0.0577%" height="15" fill="rgb(242,9,16)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="703.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (12 samples, 0.06%)</title><rect x="18.9885%" y="677" width="0.0577%" height="15" fill="rgb(217,211,10)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="687.50"></text></g><g><title>std::io::inlined_slow_read_byte (12 samples, 0.06%)</title><rect x="18.9885%" y="661" width="0.0577%" height="15" fill="rgb(219,228,52)" fg:x="3946" fg:w="12"/><text x="19.2385%" y="671.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="18.9933%" y="645" width="0.0529%" height="15" fill="rgb(231,92,29)" fg:x="3947" fg:w="11"/><text x="19.2433%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (11 samples, 0.05%)</title><rect x="18.9933%" y="629" width="0.0529%" height="15" fill="rgb(232,8,23)" fg:x="3947" fg:w="11"/><text x="19.2433%" y="639.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="18.9933%" y="613" width="0.0529%" height="15" fill="rgb(216,211,34)" fg:x="3947" fg:w="11"/><text x="19.2433%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.02%)</title><rect x="19.0222%" y="597" width="0.0241%" height="15" fill="rgb(236,151,0)" fg:x="3953" fg:w="5"/><text x="19.2722%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (5 samples, 0.02%)</title><rect x="19.0222%" y="581" width="0.0241%" height="15" fill="rgb(209,168,3)" fg:x="3953" fg:w="5"/><text x="19.2722%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.02%)</title><rect x="19.0222%" y="565" width="0.0241%" height="15" fill="rgb(208,129,28)" fg:x="3953" fg:w="5"/><text x="19.2722%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.02%)</title><rect x="19.0222%" y="549" width="0.0241%" height="15" fill="rgb(229,78,22)" fg:x="3953" fg:w="5"/><text x="19.2722%" y="559.50"></text></g><g><title>__aarch64_cas4_acq (5 samples, 0.02%)</title><rect x="19.0222%" y="533" width="0.0241%" height="15" fill="rgb(228,187,13)" fg:x="3953" fg:w="5"/><text x="19.2722%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.03%)</title><rect x="19.0462%" y="805" width="0.0289%" height="15" fill="rgb(240,119,24)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="815.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (6 samples, 0.03%)</title><rect x="19.0462%" y="789" width="0.0289%" height="15" fill="rgb(209,194,42)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="799.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (6 samples, 0.03%)</title><rect x="19.0462%" y="773" width="0.0289%" height="15" fill="rgb(247,200,46)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="783.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (6 samples, 0.03%)</title><rect x="19.0462%" y="757" width="0.0289%" height="15" fill="rgb(218,76,16)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="767.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (6 samples, 0.03%)</title><rect x="19.0462%" y="741" width="0.0289%" height="15" fill="rgb(225,21,48)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="751.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="19.0462%" y="725" width="0.0289%" height="15" fill="rgb(239,223,50)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="735.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="19.0462%" y="709" width="0.0289%" height="15" fill="rgb(244,45,21)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="719.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (6 samples, 0.03%)</title><rect x="19.0462%" y="693" width="0.0289%" height="15" fill="rgb(232,33,43)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="703.50"></text></g><g><title>std::io::inlined_slow_read_byte (6 samples, 0.03%)</title><rect x="19.0462%" y="677" width="0.0289%" height="15" fill="rgb(209,8,3)" fg:x="3958" fg:w="6"/><text x="19.2962%" y="687.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="19.0511%" y="661" width="0.0241%" height="15" fill="rgb(214,25,53)" fg:x="3959" fg:w="5"/><text x="19.3011%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (5 samples, 0.02%)</title><rect x="19.0511%" y="645" width="0.0241%" height="15" fill="rgb(254,186,54)" fg:x="3959" fg:w="5"/><text x="19.3011%" y="655.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="19.0511%" y="629" width="0.0241%" height="15" fill="rgb(208,174,49)" fg:x="3959" fg:w="5"/><text x="19.3011%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="19.0799%" y="741" width="0.0241%" height="15" fill="rgb(233,191,51)" fg:x="3965" fg:w="5"/><text x="19.3299%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (73 samples, 0.35%)</title><rect x="19.2580%" y="597" width="0.3513%" height="15" fill="rgb(222,134,10)" fg:x="4002" fg:w="73"/><text x="19.5080%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.35%)</title><rect x="19.2580%" y="581" width="0.3513%" height="15" fill="rgb(230,226,20)" fg:x="4002" fg:w="73"/><text x="19.5080%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (73 samples, 0.35%)</title><rect x="19.2580%" y="565" width="0.3513%" height="15" fill="rgb(251,111,25)" fg:x="4002" fg:w="73"/><text x="19.5080%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (73 samples, 0.35%)</title><rect x="19.2580%" y="549" width="0.3513%" height="15" fill="rgb(224,40,46)" fg:x="4002" fg:w="73"/><text x="19.5080%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (73 samples, 0.35%)</title><rect x="19.2580%" y="533" width="0.3513%" height="15" fill="rgb(236,108,47)" fg:x="4002" fg:w="73"/><text x="19.5080%" y="543.50"></text></g><g><title>__aarch64_swp4_rel (70 samples, 0.34%)</title><rect x="19.2724%" y="517" width="0.3368%" height="15" fill="rgb(234,93,0)" fg:x="4005" fg:w="70"/><text x="19.5224%" y="527.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (8 samples, 0.04%)</title><rect x="19.7729%" y="517" width="0.0385%" height="15" fill="rgb(224,213,32)" fg:x="4109" fg:w="8"/><text x="20.0229%" y="527.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (8 samples, 0.04%)</title><rect x="19.7729%" y="501" width="0.0385%" height="15" fill="rgb(251,11,48)" fg:x="4109" fg:w="8"/><text x="20.0229%" y="511.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (7 samples, 0.03%)</title><rect x="19.8114%" y="485" width="0.0337%" height="15" fill="rgb(236,173,5)" fg:x="4117" fg:w="7"/><text x="20.0614%" y="495.50"></text></g><g><title>inet_recvmsg (5 samples, 0.02%)</title><rect x="19.8547%" y="165" width="0.0241%" height="15" fill="rgb(230,95,12)" fg:x="4126" fg:w="5"/><text x="20.1047%" y="175.50"></text></g><g><title>tcp_recvmsg (4 samples, 0.02%)</title><rect x="19.8595%" y="149" width="0.0192%" height="15" fill="rgb(232,209,1)" fg:x="4127" fg:w="4"/><text x="20.1095%" y="159.50"></text></g><g><title>tcp_recvmsg_locked (4 samples, 0.02%)</title><rect x="19.8595%" y="133" width="0.0192%" height="15" fill="rgb(232,6,1)" fg:x="4127" fg:w="4"/><text x="20.1095%" y="143.50"></text></g><g><title>__arm64_sys_recvfrom (6 samples, 0.03%)</title><rect x="19.8547%" y="197" width="0.0289%" height="15" fill="rgb(210,224,50)" fg:x="4126" fg:w="6"/><text x="20.1047%" y="207.50"></text></g><g><title>__sys_recvfrom (6 samples, 0.03%)</title><rect x="19.8547%" y="181" width="0.0289%" height="15" fill="rgb(228,127,35)" fg:x="4126" fg:w="6"/><text x="20.1047%" y="191.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (18 samples, 0.09%)</title><rect x="19.8114%" y="517" width="0.0866%" height="15" fill="rgb(245,102,45)" fg:x="4117" fg:w="18"/><text x="20.0614%" y="527.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (18 samples, 0.09%)</title><rect x="19.8114%" y="501" width="0.0866%" height="15" fill="rgb(214,1,49)" fg:x="4117" fg:w="18"/><text x="20.0614%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (11 samples, 0.05%)</title><rect x="19.8451%" y="485" width="0.0529%" height="15" fill="rgb(226,163,40)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="495.50"></text></g><g><title>std::io::Read::read_buf (11 samples, 0.05%)</title><rect x="19.8451%" y="469" width="0.0529%" height="15" fill="rgb(239,212,28)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="479.50"></text></g><g><title>std::io::default_read_buf (11 samples, 0.05%)</title><rect x="19.8451%" y="453" width="0.0529%" height="15" fill="rgb(220,20,13)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="463.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (11 samples, 0.05%)</title><rect x="19.8451%" y="437" width="0.0529%" height="15" fill="rgb(210,164,35)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="447.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="19.8451%" y="421" width="0.0529%" height="15" fill="rgb(248,109,41)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="431.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="19.8451%" y="405" width="0.0529%" height="15" fill="rgb(238,23,50)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="415.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="19.8451%" y="389" width="0.0529%" height="15" fill="rgb(211,48,49)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="399.50"></text></g><g><title>std::net::udp::UdpSocket::recv (11 samples, 0.05%)</title><rect x="19.8451%" y="373" width="0.0529%" height="15" fill="rgb(223,36,21)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="383.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (11 samples, 0.05%)</title><rect x="19.8451%" y="357" width="0.0529%" height="15" fill="rgb(207,123,46)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="367.50"></text></g><g><title>std::sys::unix::net::Socket::read (11 samples, 0.05%)</title><rect x="19.8451%" y="341" width="0.0529%" height="15" fill="rgb(240,218,32)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (11 samples, 0.05%)</title><rect x="19.8451%" y="325" width="0.0529%" height="15" fill="rgb(252,5,43)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="335.50"></text></g><g><title>recv (11 samples, 0.05%)</title><rect x="19.8451%" y="309" width="0.0529%" height="15" fill="rgb(252,84,19)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="319.50"></text></g><g><title>el0t_64_sync (11 samples, 0.05%)</title><rect x="19.8451%" y="293" width="0.0529%" height="15" fill="rgb(243,152,39)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="303.50"></text></g><g><title>el0t_64_sync_handler (11 samples, 0.05%)</title><rect x="19.8451%" y="277" width="0.0529%" height="15" fill="rgb(234,160,15)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="287.50"></text></g><g><title>el0_svc (11 samples, 0.05%)</title><rect x="19.8451%" y="261" width="0.0529%" height="15" fill="rgb(237,34,20)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="271.50"></text></g><g><title>do_el0_svc (11 samples, 0.05%)</title><rect x="19.8451%" y="245" width="0.0529%" height="15" fill="rgb(229,97,13)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="255.50"></text></g><g><title>el0_svc_common.constprop.0 (11 samples, 0.05%)</title><rect x="19.8451%" y="229" width="0.0529%" height="15" fill="rgb(234,71,50)" fg:x="4124" fg:w="11"/><text x="20.0951%" y="239.50"></text></g><g><title>invoke_syscall (9 samples, 0.04%)</title><rect x="19.8547%" y="213" width="0.0433%" height="15" fill="rgb(253,155,4)" fg:x="4126" fg:w="9"/><text x="20.1047%" y="223.50"></text></g><g><title>get_random_u32 (3 samples, 0.01%)</title><rect x="19.8835%" y="197" width="0.0144%" height="15" fill="rgb(222,185,37)" fg:x="4132" fg:w="3"/><text x="20.1335%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (64 samples, 0.31%)</title><rect x="19.6093%" y="597" width="0.3080%" height="15" fill="rgb(251,177,13)" fg:x="4075" fg:w="64"/><text x="19.8593%" y="607.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (61 samples, 0.29%)</title><rect x="19.6237%" y="581" width="0.2935%" height="15" fill="rgb(250,179,40)" fg:x="4078" fg:w="61"/><text x="19.8737%" y="591.50"></text></g><g><title>&lt;tiny_http::util::equal_reader::EqualReader&lt;R&gt; as std::io::Read&gt;::read (52 samples, 0.25%)</title><rect x="19.6670%" y="565" width="0.2502%" height="15" fill="rgb(242,44,2)" fg:x="4087" fg:w="52"/><text x="19.9170%" y="575.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialReader&lt;R&gt; as std::io::Read&gt;::read (47 samples, 0.23%)</title><rect x="19.6911%" y="549" width="0.2262%" height="15" fill="rgb(216,177,13)" fg:x="4092" fg:w="47"/><text x="19.9411%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 0.17%)</title><rect x="19.7488%" y="533" width="0.1684%" height="15" fill="rgb(216,106,43)" fg:x="4104" fg:w="35"/><text x="19.9988%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (3 samples, 0.01%)</title><rect x="19.9028%" y="517" width="0.0144%" height="15" fill="rgb(216,183,2)" fg:x="4136" fg:w="3"/><text x="20.1528%" y="527.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.06%)</title><rect x="19.9172%" y="581" width="0.0577%" height="15" fill="rgb(249,75,3)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="591.50"></text></g><g><title>std::sync::poison::Flag::guard (12 samples, 0.06%)</title><rect x="19.9172%" y="565" width="0.0577%" height="15" fill="rgb(219,67,39)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="575.50"></text></g><g><title>std::thread::panicking (12 samples, 0.06%)</title><rect x="19.9172%" y="549" width="0.0577%" height="15" fill="rgb(253,228,2)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="559.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.06%)</title><rect x="19.9172%" y="533" width="0.0577%" height="15" fill="rgb(235,138,27)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="543.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.06%)</title><rect x="19.9172%" y="517" width="0.0577%" height="15" fill="rgb(236,97,51)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.06%)</title><rect x="19.9172%" y="501" width="0.0577%" height="15" fill="rgb(240,80,30)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.06%)</title><rect x="19.9172%" y="485" width="0.0577%" height="15" fill="rgb(230,178,19)" fg:x="4139" fg:w="12"/><text x="20.1672%" y="495.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (283 samples, 1.36%)</title><rect x="19.1136%" y="709" width="1.3618%" height="15" fill="rgb(210,190,27)" fg:x="3972" fg:w="283"/><text x="19.3636%" y="719.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 1.33%)</title><rect x="19.1473%" y="693" width="1.3281%" height="15" fill="rgb(222,107,31)" fg:x="3979" fg:w="276"/><text x="19.3973%" y="703.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (276 samples, 1.33%)</title><rect x="19.1473%" y="677" width="1.3281%" height="15" fill="rgb(216,127,34)" fg:x="3979" fg:w="276"/><text x="19.3973%" y="687.50"></text></g><g><title>std::io::inlined_slow_read_byte (276 samples, 1.33%)</title><rect x="19.1473%" y="661" width="1.3281%" height="15" fill="rgb(234,116,52)" fg:x="3979" fg:w="276"/><text x="19.3973%" y="671.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (275 samples, 1.32%)</title><rect x="19.1521%" y="645" width="1.3233%" height="15" fill="rgb(222,124,15)" fg:x="3980" fg:w="275"/><text x="19.4021%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (275 samples, 1.32%)</title><rect x="19.1521%" y="629" width="1.3233%" height="15" fill="rgb(231,179,28)" fg:x="3980" fg:w="275"/><text x="19.4021%" y="639.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (269 samples, 1.29%)</title><rect x="19.1810%" y="613" width="1.2945%" height="15" fill="rgb(226,93,45)" fg:x="3986" fg:w="269"/><text x="19.4310%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (116 samples, 0.56%)</title><rect x="19.9172%" y="597" width="0.5582%" height="15" fill="rgb(215,8,51)" fg:x="4139" fg:w="116"/><text x="20.1672%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (104 samples, 0.50%)</title><rect x="19.9750%" y="581" width="0.5005%" height="15" fill="rgb(223,106,5)" fg:x="4151" fg:w="104"/><text x="20.2250%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (104 samples, 0.50%)</title><rect x="19.9750%" y="565" width="0.5005%" height="15" fill="rgb(250,191,5)" fg:x="4151" fg:w="104"/><text x="20.2250%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (104 samples, 0.50%)</title><rect x="19.9750%" y="549" width="0.5005%" height="15" fill="rgb(242,132,44)" fg:x="4151" fg:w="104"/><text x="20.2250%" y="559.50"></text></g><g><title>__aarch64_cas4_acq (100 samples, 0.48%)</title><rect x="19.9942%" y="533" width="0.4812%" height="15" fill="rgb(251,152,29)" fg:x="4155" fg:w="100"/><text x="20.2442%" y="543.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (294 samples, 1.41%)</title><rect x="19.0799%" y="773" width="1.4148%" height="15" fill="rgb(218,179,5)" fg:x="3965" fg:w="294"/><text x="19.3299%" y="783.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (294 samples, 1.41%)</title><rect x="19.0799%" y="757" width="1.4148%" height="15" fill="rgb(227,67,19)" fg:x="3965" fg:w="294"/><text x="19.3299%" y="767.50"></text></g><g><title>serde_json::read::next_or_eof (287 samples, 1.38%)</title><rect x="19.1136%" y="741" width="1.3811%" height="15" fill="rgb(233,119,31)" fg:x="3972" fg:w="287"/><text x="19.3636%" y="751.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (287 samples, 1.38%)</title><rect x="19.1136%" y="725" width="1.3811%" height="15" fill="rgb(241,120,22)" fg:x="3972" fg:w="287"/><text x="19.3636%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.02%)</title><rect x="20.4754%" y="709" width="0.0192%" height="15" fill="rgb(224,102,30)" fg:x="4255" fg:w="4"/><text x="20.7254%" y="719.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="20.4754%" y="693" width="0.0192%" height="15" fill="rgb(210,164,37)" fg:x="4255" fg:w="4"/><text x="20.7254%" y="703.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="20.4754%" y="677" width="0.0192%" height="15" fill="rgb(226,191,16)" fg:x="4255" fg:w="4"/><text x="20.7254%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.07%)</title><rect x="20.4947%" y="773" width="0.0674%" height="15" fill="rgb(214,40,45)" fg:x="4259" fg:w="14"/><text x="20.7447%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.06%)</title><rect x="20.5043%" y="757" width="0.0577%" height="15" fill="rgb(244,29,26)" fg:x="4261" fg:w="12"/><text x="20.7543%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.06%)</title><rect x="20.5043%" y="741" width="0.0577%" height="15" fill="rgb(216,16,5)" fg:x="4261" fg:w="12"/><text x="20.7543%" y="751.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.06%)</title><rect x="20.5043%" y="725" width="0.0577%" height="15" fill="rgb(249,76,35)" fg:x="4261" fg:w="12"/><text x="20.7543%" y="735.50"></text></g><g><title>malloc (12 samples, 0.06%)</title><rect x="20.5043%" y="709" width="0.0577%" height="15" fill="rgb(207,11,44)" fg:x="4261" fg:w="12"/><text x="20.7543%" y="719.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="20.5139%" y="693" width="0.0481%" height="15" fill="rgb(228,190,49)" fg:x="4263" fg:w="10"/><text x="20.7639%" y="703.50"></text></g><g><title>serde::de::MapAccess::next_value (323 samples, 1.55%)</title><rect x="19.0462%" y="821" width="1.5543%" height="15" fill="rgb(214,173,12)" fg:x="3958" fg:w="323"/><text x="19.2962%" y="831.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (317 samples, 1.53%)</title><rect x="19.0751%" y="805" width="1.5254%" height="15" fill="rgb(218,26,35)" fg:x="3964" fg:w="317"/><text x="19.3251%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (316 samples, 1.52%)</title><rect x="19.0799%" y="789" width="1.5206%" height="15" fill="rgb(220,200,19)" fg:x="3965" fg:w="316"/><text x="19.3299%" y="799.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (8 samples, 0.04%)</title><rect x="20.5621%" y="773" width="0.0385%" height="15" fill="rgb(239,95,49)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="783.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (8 samples, 0.04%)</title><rect x="20.5621%" y="757" width="0.0385%" height="15" fill="rgb(235,85,53)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="767.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (8 samples, 0.04%)</title><rect x="20.5621%" y="741" width="0.0385%" height="15" fill="rgb(233,133,31)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="751.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="20.5621%" y="725" width="0.0385%" height="15" fill="rgb(218,25,20)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="735.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="20.5621%" y="709" width="0.0385%" height="15" fill="rgb(252,210,38)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="719.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (8 samples, 0.04%)</title><rect x="20.5621%" y="693" width="0.0385%" height="15" fill="rgb(242,134,21)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="703.50"></text></g><g><title>std::io::inlined_slow_read_byte (8 samples, 0.04%)</title><rect x="20.5621%" y="677" width="0.0385%" height="15" fill="rgb(213,28,48)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="687.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (8 samples, 0.04%)</title><rect x="20.5621%" y="661" width="0.0385%" height="15" fill="rgb(250,196,2)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (8 samples, 0.04%)</title><rect x="20.5621%" y="645" width="0.0385%" height="15" fill="rgb(227,5,17)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="655.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (8 samples, 0.04%)</title><rect x="20.5621%" y="629" width="0.0385%" height="15" fill="rgb(221,226,24)" fg:x="4273" fg:w="8"/><text x="20.8121%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="20.5813%" y="613" width="0.0192%" height="15" fill="rgb(211,5,48)" fg:x="4277" fg:w="4"/><text x="20.8313%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.02%)</title><rect x="20.5813%" y="597" width="0.0192%" height="15" fill="rgb(219,150,6)" fg:x="4277" fg:w="4"/><text x="20.8313%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.02%)</title><rect x="20.5813%" y="581" width="0.0192%" height="15" fill="rgb(251,46,16)" fg:x="4277" fg:w="4"/><text x="20.8313%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="20.5813%" y="565" width="0.0192%" height="15" fill="rgb(220,204,40)" fg:x="4277" fg:w="4"/><text x="20.8313%" y="575.50"></text></g><g><title>__aarch64_cas4_acq (4 samples, 0.02%)</title><rect x="20.5813%" y="549" width="0.0192%" height="15" fill="rgb(211,85,2)" fg:x="4277" fg:w="4"/><text x="20.8313%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (6 samples, 0.03%)</title><rect x="20.6294%" y="789" width="0.0289%" height="15" fill="rgb(229,17,7)" fg:x="4287" fg:w="6"/><text x="20.8794%" y="799.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.01%)</title><rect x="20.6727%" y="709" width="0.0144%" height="15" fill="rgb(239,72,28)" fg:x="4296" fg:w="3"/><text x="20.9227%" y="719.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="20.6727%" y="693" width="0.0144%" height="15" fill="rgb(230,47,54)" fg:x="4296" fg:w="3"/><text x="20.9227%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (4 samples, 0.02%)</title><rect x="20.6727%" y="741" width="0.0192%" height="15" fill="rgb(214,50,8)" fg:x="4296" fg:w="4"/><text x="20.9227%" y="751.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (4 samples, 0.02%)</title><rect x="20.6727%" y="725" width="0.0192%" height="15" fill="rgb(216,198,43)" fg:x="4296" fg:w="4"/><text x="20.9227%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.03%)</title><rect x="20.6679%" y="773" width="0.0289%" height="15" fill="rgb(234,20,35)" fg:x="4295" fg:w="6"/><text x="20.9179%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (6 samples, 0.03%)</title><rect x="20.6679%" y="757" width="0.0289%" height="15" fill="rgb(254,45,19)" fg:x="4295" fg:w="6"/><text x="20.9179%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,736 samples, 13.17%)</title><rect x="7.6897%" y="885" width="13.1659%" height="15" fill="rgb(219,14,44)" fg:x="1598" fg:w="2736"/><text x="7.9397%" y="895.50">&lt;core::marker::Phant..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,736 samples, 13.17%)</title><rect x="7.6897%" y="869" width="13.1659%" height="15" fill="rgb(217,220,26)" fg:x="1598" fg:w="2736"/><text x="7.9397%" y="879.50">serde_json::value::d..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,735 samples, 13.16%)</title><rect x="7.6945%" y="853" width="13.1611%" height="15" fill="rgb(213,158,28)" fg:x="1599" fg:w="2735"/><text x="7.9445%" y="863.50">&lt;&amp;mut serde_json::de..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,734 samples, 13.16%)</title><rect x="7.6993%" y="837" width="13.1562%" height="15" fill="rgb(252,51,52)" fg:x="1600" fg:w="2734"/><text x="7.9493%" y="847.50">&lt;serde_json::value::..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (53 samples, 0.26%)</title><rect x="20.6005%" y="821" width="0.2550%" height="15" fill="rgb(246,89,16)" fg:x="4281" fg:w="53"/><text x="20.8505%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (53 samples, 0.26%)</title><rect x="20.6005%" y="805" width="0.2550%" height="15" fill="rgb(216,158,49)" fg:x="4281" fg:w="53"/><text x="20.8505%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (41 samples, 0.20%)</title><rect x="20.6583%" y="789" width="0.1973%" height="15" fill="rgb(236,107,19)" fg:x="4293" fg:w="41"/><text x="20.9083%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (33 samples, 0.16%)</title><rect x="20.6968%" y="773" width="0.1588%" height="15" fill="rgb(228,185,30)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="783.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (33 samples, 0.16%)</title><rect x="20.6968%" y="757" width="0.1588%" height="15" fill="rgb(246,134,8)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (33 samples, 0.16%)</title><rect x="20.6968%" y="741" width="0.1588%" height="15" fill="rgb(214,143,50)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (33 samples, 0.16%)</title><rect x="20.6968%" y="725" width="0.1588%" height="15" fill="rgb(228,75,8)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.16%)</title><rect x="20.6968%" y="709" width="0.1588%" height="15" fill="rgb(207,175,4)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.16%)</title><rect x="20.6968%" y="693" width="0.1588%" height="15" fill="rgb(205,108,24)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="703.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.16%)</title><rect x="20.6968%" y="677" width="0.1588%" height="15" fill="rgb(244,120,49)" fg:x="4301" fg:w="33"/><text x="20.9468%" y="687.50"></text></g><g><title>malloc (32 samples, 0.15%)</title><rect x="20.7016%" y="661" width="0.1540%" height="15" fill="rgb(223,47,38)" fg:x="4302" fg:w="32"/><text x="20.9516%" y="671.50"></text></g><g><title>[libc.so.6] (30 samples, 0.14%)</title><rect x="20.7112%" y="645" width="0.1444%" height="15" fill="rgb(229,179,11)" fg:x="4304" fg:w="30"/><text x="20.9612%" y="655.50"></text></g><g><title>[libc.so.6] (17 samples, 0.08%)</title><rect x="20.7738%" y="629" width="0.0818%" height="15" fill="rgb(231,122,1)" fg:x="4317" fg:w="17"/><text x="21.0238%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="20.8604%" y="725" width="0.0192%" height="15" fill="rgb(245,119,9)" fg:x="4335" fg:w="4"/><text x="21.1104%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="20.8604%" y="709" width="0.0192%" height="15" fill="rgb(241,163,25)" fg:x="4335" fg:w="4"/><text x="21.1104%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.02%)</title><rect x="20.8604%" y="693" width="0.0192%" height="15" fill="rgb(217,214,3)" fg:x="4335" fg:w="4"/><text x="21.1104%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.02%)</title><rect x="20.8604%" y="677" width="0.0192%" height="15" fill="rgb(240,86,28)" fg:x="4335" fg:w="4"/><text x="21.1104%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.02%)</title><rect x="20.8604%" y="661" width="0.0192%" height="15" fill="rgb(215,47,9)" fg:x="4335" fg:w="4"/><text x="21.1104%" y="671.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="20.8652%" y="645" width="0.0144%" height="15" fill="rgb(252,25,45)" fg:x="4336" fg:w="3"/><text x="21.1152%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="20.8796%" y="725" width="0.0144%" height="15" fill="rgb(251,164,9)" fg:x="4339" fg:w="3"/><text x="21.1296%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,829 samples, 13.61%)</title><rect x="7.3240%" y="997" width="13.6134%" height="15" fill="rgb(233,194,0)" fg:x="1522" fg:w="2829"/><text x="7.5740%" y="1007.50">serde::de::MapAccess:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,829 samples, 13.61%)</title><rect x="7.3240%" y="981" width="13.6134%" height="15" fill="rgb(249,111,24)" fg:x="1522" fg:w="2829"/><text x="7.5740%" y="991.50">serde::de::MapAccess:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,815 samples, 13.55%)</title><rect x="7.3914%" y="965" width="13.5460%" height="15" fill="rgb(250,223,3)" fg:x="1536" fg:w="2815"/><text x="7.6414%" y="975.50">serde_json::value::d..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,815 samples, 13.55%)</title><rect x="7.3914%" y="949" width="13.5460%" height="15" fill="rgb(236,178,37)" fg:x="1536" fg:w="2815"/><text x="7.6414%" y="959.50">&lt;&amp;mut serde_json::de..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,782 samples, 13.39%)</title><rect x="7.5502%" y="933" width="13.3872%" height="15" fill="rgb(241,158,50)" fg:x="1569" fg:w="2782"/><text x="7.8002%" y="943.50">&lt;serde_json::value::..</text></g><g><title>serde::de::SeqAccess::next_element (2,753 samples, 13.25%)</title><rect x="7.6897%" y="917" width="13.2477%" height="15" fill="rgb(213,121,41)" fg:x="1598" fg:w="2753"/><text x="7.9397%" y="927.50">serde::de::SeqAccess..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,753 samples, 13.25%)</title><rect x="7.6897%" y="901" width="13.2477%" height="15" fill="rgb(240,92,3)" fg:x="1598" fg:w="2753"/><text x="7.9397%" y="911.50">&lt;serde_json::de::Seq..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (17 samples, 0.08%)</title><rect x="20.8556%" y="885" width="0.0818%" height="15" fill="rgb(205,123,3)" fg:x="4334" fg:w="17"/><text x="21.1056%" y="895.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (17 samples, 0.08%)</title><rect x="20.8556%" y="869" width="0.0818%" height="15" fill="rgb(205,97,47)" fg:x="4334" fg:w="17"/><text x="21.1056%" y="879.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (17 samples, 0.08%)</title><rect x="20.8556%" y="853" width="0.0818%" height="15" fill="rgb(247,152,14)" fg:x="4334" fg:w="17"/><text x="21.1056%" y="863.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.08%)</title><rect x="20.8556%" y="837" width="0.0818%" height="15" fill="rgb(248,195,53)" fg:x="4334" fg:w="17"/><text x="21.1056%" y="847.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.08%)</title><rect x="20.8604%" y="821" width="0.0770%" height="15" fill="rgb(226,201,16)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="831.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (16 samples, 0.08%)</title><rect x="20.8604%" y="805" width="0.0770%" height="15" fill="rgb(205,98,0)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="815.50"></text></g><g><title>std::io::inlined_slow_read_byte (16 samples, 0.08%)</title><rect x="20.8604%" y="789" width="0.0770%" height="15" fill="rgb(214,191,48)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="799.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (16 samples, 0.08%)</title><rect x="20.8604%" y="773" width="0.0770%" height="15" fill="rgb(237,112,39)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (16 samples, 0.08%)</title><rect x="20.8604%" y="757" width="0.0770%" height="15" fill="rgb(247,203,27)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="767.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (16 samples, 0.08%)</title><rect x="20.8604%" y="741" width="0.0770%" height="15" fill="rgb(235,124,28)" fg:x="4335" fg:w="16"/><text x="21.1104%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.04%)</title><rect x="20.8941%" y="725" width="0.0433%" height="15" fill="rgb(208,207,46)" fg:x="4342" fg:w="9"/><text x="21.1441%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (9 samples, 0.04%)</title><rect x="20.8941%" y="709" width="0.0433%" height="15" fill="rgb(234,176,4)" fg:x="4342" fg:w="9"/><text x="21.1441%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (9 samples, 0.04%)</title><rect x="20.8941%" y="693" width="0.0433%" height="15" fill="rgb(230,133,28)" fg:x="4342" fg:w="9"/><text x="21.1441%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.04%)</title><rect x="20.8941%" y="677" width="0.0433%" height="15" fill="rgb(211,137,40)" fg:x="4342" fg:w="9"/><text x="21.1441%" y="687.50"></text></g><g><title>__aarch64_cas4_acq (9 samples, 0.04%)</title><rect x="20.8941%" y="661" width="0.0433%" height="15" fill="rgb(254,35,13)" fg:x="4342" fg:w="9"/><text x="21.1441%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_value (3 samples, 0.01%)</title><rect x="20.9374%" y="997" width="0.0144%" height="15" fill="rgb(225,49,51)" fg:x="4351" fg:w="3"/><text x="21.1874%" y="1007.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="20.9374%" y="981" width="0.0144%" height="15" fill="rgb(251,10,15)" fg:x="4351" fg:w="3"/><text x="21.1874%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.01%)</title><rect x="20.9374%" y="965" width="0.0144%" height="15" fill="rgb(228,207,15)" fg:x="4351" fg:w="3"/><text x="21.1874%" y="975.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (3 samples, 0.01%)</title><rect x="20.9374%" y="949" width="0.0144%" height="15" fill="rgb(241,99,19)" fg:x="4351" fg:w="3"/><text x="21.1874%" y="959.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (3 samples, 0.01%)</title><rect x="20.9374%" y="933" width="0.0144%" height="15" fill="rgb(207,104,49)" fg:x="4351" fg:w="3"/><text x="21.1874%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (3 samples, 0.01%)</title><rect x="20.9518%" y="965" width="0.0144%" height="15" fill="rgb(234,99,18)" fg:x="4354" fg:w="3"/><text x="21.2018%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.02%)</title><rect x="20.9663%" y="949" width="0.0192%" height="15" fill="rgb(213,191,49)" fg:x="4357" fg:w="4"/><text x="21.2163%" y="959.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,854 samples, 13.73%)</title><rect x="7.2614%" y="1077" width="13.7337%" height="15" fill="rgb(210,226,19)" fg:x="1509" fg:w="2854"/><text x="7.5114%" y="1087.50">serde::de::MapAccess:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (2,854 samples, 13.73%)</title><rect x="7.2614%" y="1061" width="13.7337%" height="15" fill="rgb(229,97,18)" fg:x="1509" fg:w="2854"/><text x="7.5114%" y="1071.50">serde::de::MapAccess:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,846 samples, 13.70%)</title><rect x="7.2999%" y="1045" width="13.6952%" height="15" fill="rgb(211,167,15)" fg:x="1517" fg:w="2846"/><text x="7.5499%" y="1055.50">serde_json::value::de..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,846 samples, 13.70%)</title><rect x="7.2999%" y="1029" width="13.6952%" height="15" fill="rgb(210,169,34)" fg:x="1517" fg:w="2846"/><text x="7.5499%" y="1039.50">&lt;&amp;mut serde_json::de:..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,846 samples, 13.70%)</title><rect x="7.2999%" y="1013" width="13.6952%" height="15" fill="rgb(241,121,31)" fg:x="1517" fg:w="2846"/><text x="7.5499%" y="1023.50">&lt;serde_json::value::d..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (9 samples, 0.04%)</title><rect x="20.9518%" y="997" width="0.0433%" height="15" fill="rgb(232,40,11)" fg:x="4354" fg:w="9"/><text x="21.2018%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.04%)</title><rect x="20.9518%" y="981" width="0.0433%" height="15" fill="rgb(205,86,26)" fg:x="4354" fg:w="9"/><text x="21.2018%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.03%)</title><rect x="20.9663%" y="965" width="0.0289%" height="15" fill="rgb(231,126,28)" fg:x="4357" fg:w="6"/><text x="21.2163%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="21.0048%" y="997" width="0.0144%" height="15" fill="rgb(219,221,18)" fg:x="4365" fg:w="3"/><text x="21.2548%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;tiny_http::request::Request&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="21.0288%" y="853" width="0.0192%" height="15" fill="rgb(211,40,0)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="21.0288%" y="837" width="0.0192%" height="15" fill="rgb(239,85,43)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="847.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.02%)</title><rect x="21.0288%" y="821" width="0.0192%" height="15" fill="rgb(231,55,21)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.02%)</title><rect x="21.0288%" y="805" width="0.0192%" height="15" fill="rgb(225,184,43)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.02%)</title><rect x="21.0288%" y="789" width="0.0192%" height="15" fill="rgb(251,158,41)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="799.50"></text></g><g><title>__aarch64_swp4_rel (4 samples, 0.02%)</title><rect x="21.0288%" y="773" width="0.0192%" height="15" fill="rgb(234,159,37)" fg:x="4370" fg:w="4"/><text x="21.2788%" y="783.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (13 samples, 0.06%)</title><rect x="21.0048%" y="1029" width="0.0626%" height="15" fill="rgb(216,204,22)" fg:x="4365" fg:w="13"/><text x="21.2548%" y="1039.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (13 samples, 0.06%)</title><rect x="21.0048%" y="1013" width="0.0626%" height="15" fill="rgb(214,17,3)" fg:x="4365" fg:w="13"/><text x="21.2548%" y="1023.50"></text></g><g><title>serde_json::read::next_or_eof (9 samples, 0.04%)</title><rect x="21.0240%" y="997" width="0.0433%" height="15" fill="rgb(212,111,17)" fg:x="4369" fg:w="9"/><text x="21.2740%" y="1007.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::next (9 samples, 0.04%)</title><rect x="21.0240%" y="981" width="0.0433%" height="15" fill="rgb(221,157,24)" fg:x="4369" fg:w="9"/><text x="21.2740%" y="991.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="21.0288%" y="965" width="0.0385%" height="15" fill="rgb(252,16,13)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="975.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="21.0288%" y="949" width="0.0385%" height="15" fill="rgb(221,62,2)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="959.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (8 samples, 0.04%)</title><rect x="21.0288%" y="933" width="0.0385%" height="15" fill="rgb(247,87,22)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="943.50"></text></g><g><title>std::io::inlined_slow_read_byte (8 samples, 0.04%)</title><rect x="21.0288%" y="917" width="0.0385%" height="15" fill="rgb(215,73,9)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="927.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (8 samples, 0.04%)</title><rect x="21.0288%" y="901" width="0.0385%" height="15" fill="rgb(207,175,33)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (8 samples, 0.04%)</title><rect x="21.0288%" y="885" width="0.0385%" height="15" fill="rgb(243,129,54)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="895.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (8 samples, 0.04%)</title><rect x="21.0288%" y="869" width="0.0385%" height="15" fill="rgb(227,119,45)" fg:x="4370" fg:w="8"/><text x="21.2788%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="21.0481%" y="853" width="0.0192%" height="15" fill="rgb(205,109,36)" fg:x="4374" fg:w="4"/><text x="21.2981%" y="863.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.02%)</title><rect x="21.0481%" y="837" width="0.0192%" height="15" fill="rgb(205,6,39)" fg:x="4374" fg:w="4"/><text x="21.2981%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.02%)</title><rect x="21.0481%" y="821" width="0.0192%" height="15" fill="rgb(221,32,16)" fg:x="4374" fg:w="4"/><text x="21.2981%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="21.0481%" y="805" width="0.0192%" height="15" fill="rgb(228,144,50)" fg:x="4374" fg:w="4"/><text x="21.2981%" y="815.50"></text></g><g><title>__aarch64_cas4_acq (4 samples, 0.02%)</title><rect x="21.0481%" y="789" width="0.0192%" height="15" fill="rgb(229,201,53)" fg:x="4374" fg:w="4"/><text x="21.2981%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_value (16 samples, 0.08%)</title><rect x="20.9951%" y="1077" width="0.0770%" height="15" fill="rgb(249,153,27)" fg:x="4363" fg:w="16"/><text x="21.2451%" y="1087.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 0.07%)</title><rect x="21.0000%" y="1061" width="0.0722%" height="15" fill="rgb(227,106,25)" fg:x="4364" fg:w="15"/><text x="21.2500%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 0.07%)</title><rect x="21.0000%" y="1045" width="0.0722%" height="15" fill="rgb(230,65,29)" fg:x="4364" fg:w="15"/><text x="21.2500%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,901 samples, 13.96%)</title><rect x="7.1508%" y="1093" width="13.9599%" height="15" fill="rgb(221,57,46)" fg:x="1486" fg:w="2901"/><text x="7.4008%" y="1103.50">&lt;serde_json::value::d..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (8 samples, 0.04%)</title><rect x="21.0721%" y="1077" width="0.0385%" height="15" fill="rgb(229,161,17)" fg:x="4379" fg:w="8"/><text x="21.3221%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.03%)</title><rect x="21.0769%" y="1061" width="0.0337%" height="15" fill="rgb(222,213,11)" fg:x="4380" fg:w="7"/><text x="21.3269%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.02%)</title><rect x="21.0866%" y="1045" width="0.0241%" height="15" fill="rgb(235,35,13)" fg:x="4382" fg:w="5"/><text x="21.3366%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.02%)</title><rect x="21.0914%" y="1029" width="0.0192%" height="15" fill="rgb(233,158,34)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.02%)</title><rect x="21.0914%" y="1013" width="0.0192%" height="15" fill="rgb(215,151,48)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.02%)</title><rect x="21.0914%" y="997" width="0.0192%" height="15" fill="rgb(229,84,14)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.02%)</title><rect x="21.0914%" y="981" width="0.0192%" height="15" fill="rgb(229,68,14)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="21.0914%" y="965" width="0.0192%" height="15" fill="rgb(243,106,26)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="21.0914%" y="949" width="0.0192%" height="15" fill="rgb(206,45,38)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="959.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="21.0914%" y="933" width="0.0192%" height="15" fill="rgb(226,6,15)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="943.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="21.0914%" y="917" width="0.0192%" height="15" fill="rgb(232,22,54)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="927.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="21.0914%" y="901" width="0.0192%" height="15" fill="rgb(229,222,32)" fg:x="4383" fg:w="4"/><text x="21.3414%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (4 samples, 0.02%)</title><rect x="21.1299%" y="933" width="0.0192%" height="15" fill="rgb(228,62,29)" fg:x="4391" fg:w="4"/><text x="21.3799%" y="943.50"></text></g><g><title>&lt;tiny_http::util::fused_reader::FusedReader&lt;R&gt; as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="21.1347%" y="917" width="0.0144%" height="15" fill="rgb(251,103,34)" fg:x="4392" fg:w="3"/><text x="21.3847%" y="927.50"></text></g><g><title>rouille::input::json::json_input (2,940 samples, 14.15%)</title><rect x="7.0064%" y="1173" width="14.1475%" height="15" fill="rgb(233,12,30)" fg:x="1456" fg:w="2940"/><text x="7.2564%" y="1183.50">rouille::input::json:..</text></g><g><title>serde_json::de::from_reader (2,935 samples, 14.12%)</title><rect x="7.0305%" y="1157" width="14.1235%" height="15" fill="rgb(238,52,0)" fg:x="1461" fg:w="2935"/><text x="7.2805%" y="1167.50">serde_json::de::from_..</text></g><g><title>serde_json::de::from_trait (2,931 samples, 14.10%)</title><rect x="7.0497%" y="1141" width="14.1042%" height="15" fill="rgb(223,98,5)" fg:x="1465" fg:w="2931"/><text x="7.2997%" y="1151.50">serde_json::de::from_..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,915 samples, 14.03%)</title><rect x="7.1267%" y="1125" width="14.0272%" height="15" fill="rgb(228,75,37)" fg:x="1481" fg:w="2915"/><text x="7.3767%" y="1135.50">serde_json::value::de..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,911 samples, 14.01%)</title><rect x="7.1460%" y="1109" width="14.0080%" height="15" fill="rgb(205,115,49)" fg:x="1485" fg:w="2911"/><text x="7.3960%" y="1119.50">&lt;&amp;mut serde_json::de:..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (9 samples, 0.04%)</title><rect x="21.1106%" y="1093" width="0.0433%" height="15" fill="rgb(250,154,43)" fg:x="4387" fg:w="9"/><text x="21.3606%" y="1103.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (9 samples, 0.04%)</title><rect x="21.1106%" y="1077" width="0.0433%" height="15" fill="rgb(226,43,29)" fg:x="4387" fg:w="9"/><text x="21.3606%" y="1087.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (9 samples, 0.04%)</title><rect x="21.1106%" y="1061" width="0.0433%" height="15" fill="rgb(249,228,39)" fg:x="4387" fg:w="9"/><text x="21.3606%" y="1071.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.04%)</title><rect x="21.1106%" y="1045" width="0.0433%" height="15" fill="rgb(216,79,43)" fg:x="4387" fg:w="9"/><text x="21.3606%" y="1055.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.04%)</title><rect x="21.1106%" y="1029" width="0.0433%" height="15" fill="rgb(228,95,12)" fg:x="4387" fg:w="9"/><text x="21.3606%" y="1039.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (7 samples, 0.03%)</title><rect x="21.1203%" y="1013" width="0.0337%" height="15" fill="rgb(249,221,15)" fg:x="4389" fg:w="7"/><text x="21.3703%" y="1023.50"></text></g><g><title>std::io::inlined_slow_read_byte (7 samples, 0.03%)</title><rect x="21.1203%" y="997" width="0.0337%" height="15" fill="rgb(233,34,13)" fg:x="4389" fg:w="7"/><text x="21.3703%" y="1007.50"></text></g><g><title>&lt;rouille::RequestBody as std::io::Read&gt;::read (7 samples, 0.03%)</title><rect x="21.1203%" y="981" width="0.0337%" height="15" fill="rgb(214,103,39)" fg:x="4389" fg:w="7"/><text x="21.3703%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (7 samples, 0.03%)</title><rect x="21.1203%" y="965" width="0.0337%" height="15" fill="rgb(251,126,39)" fg:x="4389" fg:w="7"/><text x="21.3703%" y="975.50"></text></g><g><title>&lt;rouille::Server&lt;F&gt;::process::{{closure}}::RequestRead as std::io::Read&gt;::read (5 samples, 0.02%)</title><rect x="21.1299%" y="949" width="0.0241%" height="15" fill="rgb(214,216,36)" fg:x="4391" fg:w="5"/><text x="21.3799%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.2454%" y="837" width="0.0192%" height="15" fill="rgb(220,221,8)" fg:x="4415" fg:w="4"/><text x="21.4954%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.2454%" y="821" width="0.0192%" height="15" fill="rgb(240,216,3)" fg:x="4415" fg:w="4"/><text x="21.4954%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="21.2694%" y="725" width="0.0192%" height="15" fill="rgb(232,218,17)" fg:x="4420" fg:w="4"/><text x="21.5194%" y="735.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (23 samples, 0.11%)</title><rect x="21.1876%" y="917" width="0.1107%" height="15" fill="rgb(229,163,45)" fg:x="4403" fg:w="23"/><text x="21.4376%" y="927.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (23 samples, 0.11%)</title><rect x="21.1876%" y="901" width="0.1107%" height="15" fill="rgb(231,110,42)" fg:x="4403" fg:w="23"/><text x="21.4376%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (23 samples, 0.11%)</title><rect x="21.1876%" y="885" width="0.1107%" height="15" fill="rgb(208,170,48)" fg:x="4403" fg:w="23"/><text x="21.4376%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str (22 samples, 0.11%)</title><rect x="21.1924%" y="869" width="0.1059%" height="15" fill="rgb(239,116,25)" fg:x="4404" fg:w="22"/><text x="21.4424%" y="879.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (17 samples, 0.08%)</title><rect x="21.2165%" y="853" width="0.0818%" height="15" fill="rgb(219,200,50)" fg:x="4409" fg:w="17"/><text x="21.4665%" y="863.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (6 samples, 0.03%)</title><rect x="21.2694%" y="837" width="0.0289%" height="15" fill="rgb(245,200,0)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="847.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.03%)</title><rect x="21.2694%" y="821" width="0.0289%" height="15" fill="rgb(245,119,33)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="831.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.03%)</title><rect x="21.2694%" y="805" width="0.0289%" height="15" fill="rgb(231,125,12)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.03%)</title><rect x="21.2694%" y="789" width="0.0289%" height="15" fill="rgb(216,96,41)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.03%)</title><rect x="21.2694%" y="773" width="0.0289%" height="15" fill="rgb(248,43,45)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.03%)</title><rect x="21.2694%" y="757" width="0.0289%" height="15" fill="rgb(217,222,7)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="21.2694%" y="741" width="0.0289%" height="15" fill="rgb(233,28,6)" fg:x="4420" fg:w="6"/><text x="21.5194%" y="751.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (30 samples, 0.14%)</title><rect x="21.1780%" y="933" width="0.1444%" height="15" fill="rgb(231,218,15)" fg:x="4401" fg:w="30"/><text x="21.4280%" y="943.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (5 samples, 0.02%)</title><rect x="21.2983%" y="917" width="0.0241%" height="15" fill="rgb(226,171,48)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (5 samples, 0.02%)</title><rect x="21.2983%" y="901" width="0.0241%" height="15" fill="rgb(235,201,9)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.02%)</title><rect x="21.2983%" y="885" width="0.0241%" height="15" fill="rgb(217,80,15)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.02%)</title><rect x="21.2983%" y="869" width="0.0241%" height="15" fill="rgb(219,152,8)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="21.2983%" y="853" width="0.0241%" height="15" fill="rgb(243,107,38)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.02%)</title><rect x="21.2983%" y="837" width="0.0241%" height="15" fill="rgb(231,17,5)" fg:x="4426" fg:w="5"/><text x="21.5483%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="21.3031%" y="821" width="0.0192%" height="15" fill="rgb(209,25,54)" fg:x="4427" fg:w="4"/><text x="21.5531%" y="831.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (3 samples, 0.01%)</title><rect x="21.3320%" y="869" width="0.0144%" height="15" fill="rgb(219,0,2)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.01%)</title><rect x="21.3320%" y="853" width="0.0144%" height="15" fill="rgb(246,9,5)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="863.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.01%)</title><rect x="21.3320%" y="837" width="0.0144%" height="15" fill="rgb(226,159,4)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="21.3320%" y="821" width="0.0144%" height="15" fill="rgb(219,175,34)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="21.3320%" y="805" width="0.0144%" height="15" fill="rgb(236,10,46)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="21.3320%" y="789" width="0.0144%" height="15" fill="rgb(240,211,16)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="21.3320%" y="773" width="0.0144%" height="15" fill="rgb(205,3,43)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="21.3320%" y="757" width="0.0144%" height="15" fill="rgb(245,7,22)" fg:x="4433" fg:w="3"/><text x="21.5820%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (24 samples, 0.12%)</title><rect x="21.3272%" y="917" width="0.1155%" height="15" fill="rgb(239,132,32)" fg:x="4432" fg:w="24"/><text x="21.5772%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (24 samples, 0.12%)</title><rect x="21.3272%" y="901" width="0.1155%" height="15" fill="rgb(228,202,34)" fg:x="4432" fg:w="24"/><text x="21.5772%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str (24 samples, 0.12%)</title><rect x="21.3272%" y="885" width="0.1155%" height="15" fill="rgb(254,200,22)" fg:x="4432" fg:w="24"/><text x="21.5772%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (19 samples, 0.09%)</title><rect x="21.3512%" y="869" width="0.0914%" height="15" fill="rgb(219,10,39)" fg:x="4437" fg:w="19"/><text x="21.6012%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.4234%" y="853" width="0.0192%" height="15" fill="rgb(226,210,39)" fg:x="4452" fg:w="4"/><text x="21.6734%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.4234%" y="837" width="0.0192%" height="15" fill="rgb(208,219,16)" fg:x="4452" fg:w="4"/><text x="21.6734%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="21.4234%" y="821" width="0.0192%" height="15" fill="rgb(216,158,51)" fg:x="4452" fg:w="4"/><text x="21.6734%" y="831.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::end (3 samples, 0.01%)</title><rect x="21.4427%" y="773" width="0.0144%" height="15" fill="rgb(233,14,44)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="783.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (3 samples, 0.01%)</title><rect x="21.4427%" y="757" width="0.0144%" height="15" fill="rgb(237,97,39)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="767.50"></text></g><g><title>serde_json::ser::Formatter::end_object (3 samples, 0.01%)</title><rect x="21.4427%" y="741" width="0.0144%" height="15" fill="rgb(218,198,43)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.01%)</title><rect x="21.4427%" y="725" width="0.0144%" height="15" fill="rgb(231,104,20)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.01%)</title><rect x="21.4427%" y="709" width="0.0144%" height="15" fill="rgb(254,36,13)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="21.4427%" y="693" width="0.0144%" height="15" fill="rgb(248,14,50)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="21.4427%" y="677" width="0.0144%" height="15" fill="rgb(217,107,29)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="21.4427%" y="661" width="0.0144%" height="15" fill="rgb(251,169,33)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="21.4427%" y="645" width="0.0144%" height="15" fill="rgb(217,108,32)" fg:x="4456" fg:w="3"/><text x="21.6927%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (7 samples, 0.03%)</title><rect x="21.4619%" y="725" width="0.0337%" height="15" fill="rgb(219,66,42)" fg:x="4460" fg:w="7"/><text x="21.7119%" y="735.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (7 samples, 0.03%)</title><rect x="21.4619%" y="709" width="0.0337%" height="15" fill="rgb(206,180,7)" fg:x="4460" fg:w="7"/><text x="21.7119%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (7 samples, 0.03%)</title><rect x="21.4619%" y="693" width="0.0337%" height="15" fill="rgb(208,226,31)" fg:x="4460" fg:w="7"/><text x="21.7119%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.03%)</title><rect x="21.4619%" y="677" width="0.0337%" height="15" fill="rgb(218,26,49)" fg:x="4460" fg:w="7"/><text x="21.7119%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (5 samples, 0.02%)</title><rect x="21.4715%" y="661" width="0.0241%" height="15" fill="rgb(233,197,48)" fg:x="4462" fg:w="5"/><text x="21.7215%" y="671.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (3 samples, 0.01%)</title><rect x="21.4812%" y="645" width="0.0144%" height="15" fill="rgb(252,181,51)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.01%)</title><rect x="21.4812%" y="629" width="0.0144%" height="15" fill="rgb(253,90,19)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.01%)</title><rect x="21.4812%" y="613" width="0.0144%" height="15" fill="rgb(215,171,30)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="21.4812%" y="597" width="0.0144%" height="15" fill="rgb(214,222,9)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="21.4812%" y="581" width="0.0144%" height="15" fill="rgb(223,3,22)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="21.4812%" y="565" width="0.0144%" height="15" fill="rgb(225,196,46)" fg:x="4464" fg:w="3"/><text x="21.7312%" y="575.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (9 samples, 0.04%)</title><rect x="21.4571%" y="741" width="0.0433%" height="15" fill="rgb(209,110,37)" fg:x="4459" fg:w="9"/><text x="21.7071%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.5870%" y="661" width="0.0192%" height="15" fill="rgb(249,89,12)" fg:x="4486" fg:w="4"/><text x="21.8370%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.5870%" y="645" width="0.0192%" height="15" fill="rgb(226,27,33)" fg:x="4486" fg:w="4"/><text x="21.8370%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="21.5870%" y="629" width="0.0192%" height="15" fill="rgb(213,82,22)" fg:x="4486" fg:w="4"/><text x="21.8370%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="21.6063%" y="565" width="0.0144%" height="15" fill="rgb(248,140,0)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="21.6063%" y="549" width="0.0144%" height="15" fill="rgb(228,106,3)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="21.6063%" y="533" width="0.0144%" height="15" fill="rgb(209,23,37)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="21.6063%" y="517" width="0.0144%" height="15" fill="rgb(241,93,50)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="21.6063%" y="501" width="0.0144%" height="15" fill="rgb(253,46,43)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="21.6063%" y="485" width="0.0144%" height="15" fill="rgb(226,206,43)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="21.6063%" y="469" width="0.0144%" height="15" fill="rgb(217,54,7)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="479.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="21.6063%" y="453" width="0.0144%" height="15" fill="rgb(223,5,52)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="463.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="21.6063%" y="437" width="0.0144%" height="15" fill="rgb(206,52,46)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="21.6063%" y="421" width="0.0144%" height="15" fill="rgb(253,136,11)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="21.6063%" y="405" width="0.0144%" height="15" fill="rgb(208,106,33)" fg:x="4490" fg:w="3"/><text x="21.8563%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (26 samples, 0.13%)</title><rect x="21.5004%" y="725" width="0.1251%" height="15" fill="rgb(206,54,4)" fg:x="4468" fg:w="26"/><text x="21.7504%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (26 samples, 0.13%)</title><rect x="21.5004%" y="709" width="0.1251%" height="15" fill="rgb(213,3,15)" fg:x="4468" fg:w="26"/><text x="21.7504%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (26 samples, 0.13%)</title><rect x="21.5004%" y="693" width="0.1251%" height="15" fill="rgb(252,211,39)" fg:x="4468" fg:w="26"/><text x="21.7504%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (24 samples, 0.12%)</title><rect x="21.5100%" y="677" width="0.1155%" height="15" fill="rgb(223,6,36)" fg:x="4470" fg:w="24"/><text x="21.7600%" y="687.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (4 samples, 0.02%)</title><rect x="21.6063%" y="661" width="0.0192%" height="15" fill="rgb(252,169,45)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.02%)</title><rect x="21.6063%" y="645" width="0.0192%" height="15" fill="rgb(212,48,26)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.02%)</title><rect x="21.6063%" y="629" width="0.0192%" height="15" fill="rgb(251,102,48)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="21.6063%" y="613" width="0.0192%" height="15" fill="rgb(243,208,16)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="21.6063%" y="597" width="0.0192%" height="15" fill="rgb(219,96,24)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="21.6063%" y="581" width="0.0192%" height="15" fill="rgb(219,33,29)" fg:x="4490" fg:w="4"/><text x="21.8563%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="21.7891%" y="533" width="0.0289%" height="15" fill="rgb(223,176,5)" fg:x="4528" fg:w="6"/><text x="22.0391%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="21.7891%" y="517" width="0.0289%" height="15" fill="rgb(228,140,14)" fg:x="4528" fg:w="6"/><text x="22.0391%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="21.7939%" y="501" width="0.0241%" height="15" fill="rgb(217,179,31)" fg:x="4529" fg:w="5"/><text x="22.0439%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="21.8180%" y="437" width="0.0192%" height="15" fill="rgb(230,9,30)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="21.8180%" y="421" width="0.0192%" height="15" fill="rgb(230,136,20)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="21.8180%" y="405" width="0.0192%" height="15" fill="rgb(215,210,22)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="21.8180%" y="389" width="0.0192%" height="15" fill="rgb(218,43,5)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="21.8180%" y="373" width="0.0192%" height="15" fill="rgb(216,11,5)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="21.8180%" y="357" width="0.0192%" height="15" fill="rgb(209,82,29)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="21.8180%" y="341" width="0.0192%" height="15" fill="rgb(244,115,12)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="351.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="21.8180%" y="325" width="0.0192%" height="15" fill="rgb(222,82,18)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="335.50"></text></g><g><title>realloc (4 samples, 0.02%)</title><rect x="21.8180%" y="309" width="0.0192%" height="15" fill="rgb(249,227,8)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="21.8180%" y="293" width="0.0192%" height="15" fill="rgb(253,141,45)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="21.8180%" y="277" width="0.0192%" height="15" fill="rgb(234,184,4)" fg:x="4534" fg:w="4"/><text x="22.0680%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (47 samples, 0.23%)</title><rect x="21.6255%" y="725" width="0.2262%" height="15" fill="rgb(218,194,23)" fg:x="4494" fg:w="47"/><text x="21.8755%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (47 samples, 0.23%)</title><rect x="21.6255%" y="709" width="0.2262%" height="15" fill="rgb(235,66,41)" fg:x="4494" fg:w="47"/><text x="21.8755%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (47 samples, 0.23%)</title><rect x="21.6255%" y="693" width="0.2262%" height="15" fill="rgb(245,217,1)" fg:x="4494" fg:w="47"/><text x="21.8755%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.23%)</title><rect x="21.6255%" y="677" width="0.2262%" height="15" fill="rgb(229,91,1)" fg:x="4494" fg:w="47"/><text x="21.8755%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (46 samples, 0.22%)</title><rect x="21.6303%" y="661" width="0.2214%" height="15" fill="rgb(207,101,30)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (46 samples, 0.22%)</title><rect x="21.6303%" y="645" width="0.2214%" height="15" fill="rgb(223,82,49)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="655.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (46 samples, 0.22%)</title><rect x="21.6303%" y="629" width="0.2214%" height="15" fill="rgb(218,167,17)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (46 samples, 0.22%)</title><rect x="21.6303%" y="613" width="0.2214%" height="15" fill="rgb(208,103,14)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (46 samples, 0.22%)</title><rect x="21.6303%" y="597" width="0.2214%" height="15" fill="rgb(238,20,8)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (46 samples, 0.22%)</title><rect x="21.6303%" y="581" width="0.2214%" height="15" fill="rgb(218,80,54)" fg:x="4495" fg:w="46"/><text x="21.8803%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (43 samples, 0.21%)</title><rect x="21.6448%" y="565" width="0.2069%" height="15" fill="rgb(240,144,17)" fg:x="4498" fg:w="43"/><text x="21.8948%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (43 samples, 0.21%)</title><rect x="21.6448%" y="549" width="0.2069%" height="15" fill="rgb(245,27,50)" fg:x="4498" fg:w="43"/><text x="21.8948%" y="559.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (7 samples, 0.03%)</title><rect x="21.8180%" y="533" width="0.0337%" height="15" fill="rgb(251,51,7)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.03%)</title><rect x="21.8180%" y="517" width="0.0337%" height="15" fill="rgb(245,217,29)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="527.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.03%)</title><rect x="21.8180%" y="501" width="0.0337%" height="15" fill="rgb(221,176,29)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.03%)</title><rect x="21.8180%" y="485" width="0.0337%" height="15" fill="rgb(212,180,24)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.03%)</title><rect x="21.8180%" y="469" width="0.0337%" height="15" fill="rgb(254,24,2)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.03%)</title><rect x="21.8180%" y="453" width="0.0337%" height="15" fill="rgb(230,100,2)" fg:x="4534" fg:w="7"/><text x="22.0680%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="21.8373%" y="437" width="0.0144%" height="15" fill="rgb(219,142,25)" fg:x="4538" fg:w="3"/><text x="22.0873%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="21.8373%" y="421" width="0.0144%" height="15" fill="rgb(240,73,43)" fg:x="4538" fg:w="3"/><text x="22.0873%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (89 samples, 0.43%)</title><rect x="21.4427%" y="917" width="0.4283%" height="15" fill="rgb(214,114,15)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="927.50"></text></g><g><title>serde::ser::Serializer::collect_seq (89 samples, 0.43%)</title><rect x="21.4427%" y="901" width="0.4283%" height="15" fill="rgb(207,130,4)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (89 samples, 0.43%)</title><rect x="21.4427%" y="885" width="0.4283%" height="15" fill="rgb(221,25,40)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89 samples, 0.43%)</title><rect x="21.4427%" y="869" width="0.4283%" height="15" fill="rgb(241,184,7)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (89 samples, 0.43%)</title><rect x="21.4427%" y="853" width="0.4283%" height="15" fill="rgb(235,159,4)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="863.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (89 samples, 0.43%)</title><rect x="21.4427%" y="837" width="0.4283%" height="15" fill="rgb(214,87,48)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (89 samples, 0.43%)</title><rect x="21.4427%" y="821" width="0.4283%" height="15" fill="rgb(246,198,24)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (89 samples, 0.43%)</title><rect x="21.4427%" y="805" width="0.4283%" height="15" fill="rgb(209,66,40)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="815.50"></text></g><g><title>server::types::_::&lt;impl serde::ser::Serialize for server::types::SerializeableLog&gt;::serialize (89 samples, 0.43%)</title><rect x="21.4427%" y="789" width="0.4283%" height="15" fill="rgb(233,147,39)" fg:x="4456" fg:w="89"/><text x="21.6927%" y="799.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (86 samples, 0.41%)</title><rect x="21.4571%" y="773" width="0.4138%" height="15" fill="rgb(231,145,52)" fg:x="4459" fg:w="86"/><text x="21.7071%" y="783.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (86 samples, 0.41%)</title><rect x="21.4571%" y="757" width="0.4138%" height="15" fill="rgb(206,20,26)" fg:x="4459" fg:w="86"/><text x="21.7071%" y="767.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (77 samples, 0.37%)</title><rect x="21.5004%" y="741" width="0.3705%" height="15" fill="rgb(238,220,4)" fg:x="4468" fg:w="77"/><text x="21.7504%" y="751.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (4 samples, 0.02%)</title><rect x="21.8517%" y="725" width="0.0192%" height="15" fill="rgb(252,195,42)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.02%)</title><rect x="21.8517%" y="709" width="0.0192%" height="15" fill="rgb(209,10,6)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.02%)</title><rect x="21.8517%" y="693" width="0.0192%" height="15" fill="rgb(229,3,52)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="21.8517%" y="677" width="0.0192%" height="15" fill="rgb(253,49,37)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="21.8517%" y="661" width="0.0192%" height="15" fill="rgb(240,103,49)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="21.8517%" y="645" width="0.0192%" height="15" fill="rgb(250,182,30)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="21.8517%" y="629" width="0.0192%" height="15" fill="rgb(248,8,30)" fg:x="4541" fg:w="4"/><text x="22.1017%" y="639.50"></text></g><g><title>rouille::response::Response::json (156 samples, 0.75%)</title><rect x="21.1539%" y="1173" width="0.7507%" height="15" fill="rgb(237,120,30)" fg:x="4396" fg:w="156"/><text x="21.4039%" y="1183.50"></text></g><g><title>serde_json::ser::to_string (156 samples, 0.75%)</title><rect x="21.1539%" y="1157" width="0.7507%" height="15" fill="rgb(221,146,34)" fg:x="4396" fg:w="156"/><text x="21.4039%" y="1167.50"></text></g><g><title>serde_json::ser::to_vec (156 samples, 0.75%)</title><rect x="21.1539%" y="1141" width="0.7507%" height="15" fill="rgb(242,55,13)" fg:x="4396" fg:w="156"/><text x="21.4039%" y="1151.50"></text></g><g><title>serde_json::ser::to_writer (154 samples, 0.74%)</title><rect x="21.1636%" y="1125" width="0.7411%" height="15" fill="rgb(242,112,31)" fg:x="4398" fg:w="154"/><text x="21.4136%" y="1135.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (154 samples, 0.74%)</title><rect x="21.1636%" y="1109" width="0.7411%" height="15" fill="rgb(249,192,27)" fg:x="4398" fg:w="154"/><text x="21.4136%" y="1119.50"></text></g><g><title>serde::ser::Serializer::collect_seq (154 samples, 0.74%)</title><rect x="21.1636%" y="1093" width="0.7411%" height="15" fill="rgb(208,204,44)" fg:x="4398" fg:w="154"/><text x="21.4136%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (153 samples, 0.74%)</title><rect x="21.1684%" y="1077" width="0.7362%" height="15" fill="rgb(208,93,54)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (153 samples, 0.74%)</title><rect x="21.1684%" y="1061" width="0.7362%" height="15" fill="rgb(242,1,31)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (153 samples, 0.74%)</title><rect x="21.1684%" y="1045" width="0.7362%" height="15" fill="rgb(241,83,25)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1055.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (153 samples, 0.74%)</title><rect x="21.1684%" y="1029" width="0.7362%" height="15" fill="rgb(205,169,50)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1039.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (153 samples, 0.74%)</title><rect x="21.1684%" y="1013" width="0.7362%" height="15" fill="rgb(239,186,37)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (153 samples, 0.74%)</title><rect x="21.1684%" y="997" width="0.7362%" height="15" fill="rgb(205,221,10)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="1007.50"></text></g><g><title>server::types::_::&lt;impl serde::ser::Serialize for server::types::SerializableExecutionResult&gt;::serialize (153 samples, 0.74%)</title><rect x="21.1684%" y="981" width="0.7362%" height="15" fill="rgb(218,196,15)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="991.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (153 samples, 0.74%)</title><rect x="21.1684%" y="965" width="0.7362%" height="15" fill="rgb(218,196,35)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="975.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (153 samples, 0.74%)</title><rect x="21.1684%" y="949" width="0.7362%" height="15" fill="rgb(233,63,24)" fg:x="4399" fg:w="153"/><text x="21.4184%" y="959.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (121 samples, 0.58%)</title><rect x="21.3224%" y="933" width="0.5823%" height="15" fill="rgb(225,8,4)" fg:x="4431" fg:w="121"/><text x="21.5724%" y="943.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (4 samples, 0.02%)</title><rect x="21.8854%" y="917" width="0.0192%" height="15" fill="rgb(234,105,35)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (4 samples, 0.02%)</title><rect x="21.8854%" y="901" width="0.0192%" height="15" fill="rgb(236,21,32)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.02%)</title><rect x="21.8854%" y="885" width="0.0192%" height="15" fill="rgb(228,109,6)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="21.8854%" y="869" width="0.0192%" height="15" fill="rgb(229,215,31)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="21.8854%" y="853" width="0.0192%" height="15" fill="rgb(221,52,54)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="21.8854%" y="837" width="0.0192%" height="15" fill="rgb(252,129,43)" fg:x="4548" fg:w="4"/><text x="22.1354%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="21.8902%" y="821" width="0.0144%" height="15" fill="rgb(248,183,27)" fg:x="4549" fg:w="3"/><text x="22.1402%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="21.9383%" y="1045" width="0.0144%" height="15" fill="rgb(250,0,22)" fg:x="4559" fg:w="3"/><text x="22.1883%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="21.9383%" y="1029" width="0.0144%" height="15" fill="rgb(213,166,10)" fg:x="4559" fg:w="3"/><text x="22.1883%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.06%)</title><rect x="21.9527%" y="1045" width="0.0626%" height="15" fill="rgb(207,163,36)" fg:x="4562" fg:w="13"/><text x="22.2027%" y="1055.50"></text></g><g><title>serde_json::value::Value::get (45 samples, 0.22%)</title><rect x="21.9094%" y="1173" width="0.2165%" height="15" fill="rgb(208,122,22)" fg:x="4553" fg:w="45"/><text x="22.1594%" y="1183.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (45 samples, 0.22%)</title><rect x="21.9094%" y="1157" width="0.2165%" height="15" fill="rgb(207,104,49)" fg:x="4553" fg:w="45"/><text x="22.1594%" y="1167.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (45 samples, 0.22%)</title><rect x="21.9094%" y="1141" width="0.2165%" height="15" fill="rgb(248,211,50)" fg:x="4553" fg:w="45"/><text x="22.1594%" y="1151.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (40 samples, 0.19%)</title><rect x="21.9335%" y="1125" width="0.1925%" height="15" fill="rgb(217,13,45)" fg:x="4558" fg:w="40"/><text x="22.1835%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (40 samples, 0.19%)</title><rect x="21.9335%" y="1109" width="0.1925%" height="15" fill="rgb(211,216,49)" fg:x="4558" fg:w="40"/><text x="22.1835%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (40 samples, 0.19%)</title><rect x="21.9335%" y="1093" width="0.1925%" height="15" fill="rgb(221,58,53)" fg:x="4558" fg:w="40"/><text x="22.1835%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (40 samples, 0.19%)</title><rect x="21.9335%" y="1077" width="0.1925%" height="15" fill="rgb(220,112,41)" fg:x="4558" fg:w="40"/><text x="22.1835%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (40 samples, 0.19%)</title><rect x="21.9335%" y="1061" width="0.1925%" height="15" fill="rgb(236,38,28)" fg:x="4558" fg:w="40"/><text x="22.1835%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (23 samples, 0.11%)</title><rect x="22.0153%" y="1045" width="0.1107%" height="15" fill="rgb(227,195,22)" fg:x="4575" fg:w="23"/><text x="22.2653%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (23 samples, 0.11%)</title><rect x="22.0153%" y="1029" width="0.1107%" height="15" fill="rgb(214,55,33)" fg:x="4575" fg:w="23"/><text x="22.2653%" y="1039.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (23 samples, 0.11%)</title><rect x="22.0153%" y="1013" width="0.1107%" height="15" fill="rgb(248,80,13)" fg:x="4575" fg:w="23"/><text x="22.2653%" y="1023.50"></text></g><g><title>__memcmpeq (15 samples, 0.07%)</title><rect x="22.0538%" y="997" width="0.0722%" height="15" fill="rgb(238,52,6)" fg:x="4583" fg:w="15"/><text x="22.3038%" y="1007.50"></text></g><g><title>db::DB::get_write_txn (9 samples, 0.04%)</title><rect x="22.1260%" y="1157" width="0.0433%" height="15" fill="rgb(224,198,47)" fg:x="4598" fg:w="9"/><text x="22.3760%" y="1167.50"></text></g><g><title>heed::env::Env::write_txn (9 samples, 0.04%)</title><rect x="22.1260%" y="1141" width="0.0433%" height="15" fill="rgb(233,171,20)" fg:x="4598" fg:w="9"/><text x="22.3760%" y="1151.50"></text></g><g><title>heed::txn::RwTxn&lt;T&gt;::new (9 samples, 0.04%)</title><rect x="22.1260%" y="1125" width="0.0433%" height="15" fill="rgb(241,30,25)" fg:x="4598" fg:w="9"/><text x="22.3760%" y="1135.50"></text></g><g><title>mdb_txn_begin (8 samples, 0.04%)</title><rect x="22.1308%" y="1109" width="0.0385%" height="15" fill="rgb(207,171,38)" fg:x="4599" fg:w="8"/><text x="22.3808%" y="1119.50"></text></g><g><title>mdb_txn_renew0 (6 samples, 0.03%)</title><rect x="22.1404%" y="1093" width="0.0289%" height="15" fill="rgb(234,70,1)" fg:x="4601" fg:w="6"/><text x="22.3904%" y="1103.50"></text></g><g><title>memcpy (6 samples, 0.03%)</title><rect x="22.1404%" y="1077" width="0.0289%" height="15" fill="rgb(232,178,18)" fg:x="4601" fg:w="6"/><text x="22.3904%" y="1087.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="22.1404%" y="1061" width="0.0289%" height="15" fill="rgb(241,78,40)" fg:x="4601" fg:w="6"/><text x="22.3904%" y="1071.50"></text></g><g><title>mdb_cursor_set (3 samples, 0.01%)</title><rect x="22.1837%" y="1093" width="0.0144%" height="15" fill="rgb(222,35,25)" fg:x="4610" fg:w="3"/><text x="22.4337%" y="1103.50"></text></g><g><title>mdb_page_search (3 samples, 0.01%)</title><rect x="22.1837%" y="1077" width="0.0144%" height="15" fill="rgb(207,92,16)" fg:x="4610" fg:w="3"/><text x="22.4337%" y="1087.50"></text></g><g><title>mdb_page_search_root (3 samples, 0.01%)</title><rect x="22.1837%" y="1061" width="0.0144%" height="15" fill="rgb(216,59,51)" fg:x="4610" fg:w="3"/><text x="22.4337%" y="1071.50"></text></g><g><title>mdb_page_search (8 samples, 0.04%)</title><rect x="22.2030%" y="1077" width="0.0385%" height="15" fill="rgb(213,80,28)" fg:x="4614" fg:w="8"/><text x="22.4530%" y="1087.50"></text></g><g><title>mdb_page_touch (8 samples, 0.04%)</title><rect x="22.2030%" y="1061" width="0.0385%" height="15" fill="rgb(220,93,7)" fg:x="4614" fg:w="8"/><text x="22.4530%" y="1071.50"></text></g><g><title>mdb_page_alloc (7 samples, 0.03%)</title><rect x="22.2078%" y="1045" width="0.0337%" height="15" fill="rgb(225,24,44)" fg:x="4615" fg:w="7"/><text x="22.4578%" y="1055.50"></text></g><g><title>mdb_page_alloc (3 samples, 0.01%)</title><rect x="22.2463%" y="1061" width="0.0144%" height="15" fill="rgb(243,74,40)" fg:x="4623" fg:w="3"/><text x="22.4963%" y="1071.50"></text></g><g><title>mdb_cursor_touch (17 samples, 0.08%)</title><rect x="22.1982%" y="1093" width="0.0818%" height="15" fill="rgb(228,39,7)" fg:x="4613" fg:w="17"/><text x="22.4482%" y="1103.50"></text></g><g><title>mdb_page_touch (8 samples, 0.04%)</title><rect x="22.2415%" y="1077" width="0.0385%" height="15" fill="rgb(227,79,8)" fg:x="4622" fg:w="8"/><text x="22.4915%" y="1087.50"></text></g><g><title>mdb_page_copy (4 samples, 0.02%)</title><rect x="22.2607%" y="1061" width="0.0192%" height="15" fill="rgb(236,58,11)" fg:x="4626" fg:w="4"/><text x="22.5107%" y="1071.50"></text></g><g><title>memcpy (4 samples, 0.02%)</title><rect x="22.2607%" y="1045" width="0.0192%" height="15" fill="rgb(249,63,35)" fg:x="4626" fg:w="4"/><text x="22.5107%" y="1055.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="22.2607%" y="1029" width="0.0192%" height="15" fill="rgb(252,114,16)" fg:x="4626" fg:w="4"/><text x="22.5107%" y="1039.50"></text></g><g><title>mdb_cursor_put (22 samples, 0.11%)</title><rect x="22.1789%" y="1109" width="0.1059%" height="15" fill="rgb(254,151,24)" fg:x="4609" fg:w="22"/><text x="22.4289%" y="1119.50"></text></g><g><title>db::DB::set_block_gas_used_with_txn (25 samples, 0.12%)</title><rect x="22.1693%" y="1157" width="0.1203%" height="15" fill="rgb(253,54,39)" fg:x="4607" fg:w="25"/><text x="22.4193%" y="1167.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::put (25 samples, 0.12%)</title><rect x="22.1693%" y="1141" width="0.1203%" height="15" fill="rgb(243,25,45)" fg:x="4607" fg:w="25"/><text x="22.4193%" y="1151.50"></text></g><g><title>mdb_put (23 samples, 0.11%)</title><rect x="22.1789%" y="1125" width="0.1107%" height="15" fill="rgb(234,134,9)" fg:x="4609" fg:w="23"/><text x="22.4289%" y="1135.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (9 samples, 0.04%)</title><rect x="22.3040%" y="1141" width="0.0433%" height="15" fill="rgb(227,166,31)" fg:x="4635" fg:w="9"/><text x="22.5540%" y="1151.50"></text></g><g><title>mdb_get (9 samples, 0.04%)</title><rect x="22.3040%" y="1125" width="0.0433%" height="15" fill="rgb(245,143,41)" fg:x="4635" fg:w="9"/><text x="22.5540%" y="1135.50"></text></g><g><title>mdb_cursor_set (9 samples, 0.04%)</title><rect x="22.3040%" y="1109" width="0.0433%" height="15" fill="rgb(238,181,32)" fg:x="4635" fg:w="9"/><text x="22.5540%" y="1119.50"></text></g><g><title>mdb_page_search (7 samples, 0.03%)</title><rect x="22.3137%" y="1093" width="0.0337%" height="15" fill="rgb(224,113,18)" fg:x="4637" fg:w="7"/><text x="22.5637%" y="1103.50"></text></g><g><title>mdb_page_search_root (7 samples, 0.03%)</title><rect x="22.3137%" y="1077" width="0.0337%" height="15" fill="rgb(240,229,28)" fg:x="4637" fg:w="7"/><text x="22.5637%" y="1087.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="22.3281%" y="1061" width="0.0192%" height="15" fill="rgb(250,185,3)" fg:x="4640" fg:w="4"/><text x="22.5781%" y="1071.50"></text></g><g><title>heed::env::Env::read_txn (5 samples, 0.02%)</title><rect x="22.3473%" y="1141" width="0.0241%" height="15" fill="rgb(212,59,25)" fg:x="4644" fg:w="5"/><text x="22.5973%" y="1151.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="22.3473%" y="1125" width="0.0241%" height="15" fill="rgb(221,87,20)" fg:x="4644" fg:w="5"/><text x="22.5973%" y="1135.50"></text></g><g><title>mdb_txn_begin (5 samples, 0.02%)</title><rect x="22.3473%" y="1109" width="0.0241%" height="15" fill="rgb(213,74,28)" fg:x="4644" fg:w="5"/><text x="22.5973%" y="1119.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="22.3473%" y="1093" width="0.0241%" height="15" fill="rgb(224,132,34)" fg:x="4644" fg:w="5"/><text x="22.5973%" y="1103.50"></text></g><g><title>el0_svc_common.constprop.0 (6 samples, 0.03%)</title><rect x="22.3714%" y="837" width="0.0289%" height="15" fill="rgb(222,101,24)" fg:x="4649" fg:w="6"/><text x="22.6214%" y="847.50"></text></g><g><title>invoke_syscall (6 samples, 0.03%)</title><rect x="22.3714%" y="821" width="0.0289%" height="15" fill="rgb(254,142,4)" fg:x="4649" fg:w="6"/><text x="22.6214%" y="831.50"></text></g><g><title>__arm64_sys_write (6 samples, 0.03%)</title><rect x="22.3714%" y="805" width="0.0289%" height="15" fill="rgb(230,229,49)" fg:x="4649" fg:w="6"/><text x="22.6214%" y="815.50"></text></g><g><title>ksys_write (6 samples, 0.03%)</title><rect x="22.3714%" y="789" width="0.0289%" height="15" fill="rgb(238,70,47)" fg:x="4649" fg:w="6"/><text x="22.6214%" y="799.50"></text></g><g><title>vfs_write (5 samples, 0.02%)</title><rect x="22.3762%" y="773" width="0.0241%" height="15" fill="rgb(231,160,17)" fg:x="4650" fg:w="5"/><text x="22.6262%" y="783.50"></text></g><g><title>new_sync_write (5 samples, 0.02%)</title><rect x="22.3762%" y="757" width="0.0241%" height="15" fill="rgb(218,68,53)" fg:x="4650" fg:w="5"/><text x="22.6262%" y="767.50"></text></g><g><title>tty_write (5 samples, 0.02%)</title><rect x="22.3762%" y="741" width="0.0241%" height="15" fill="rgb(236,111,10)" fg:x="4650" fg:w="5"/><text x="22.6262%" y="751.50"></text></g><g><title>file_tty_write.constprop.0 (5 samples, 0.02%)</title><rect x="22.3762%" y="725" width="0.0241%" height="15" fill="rgb(224,34,41)" fg:x="4650" fg:w="5"/><text x="22.6262%" y="735.50"></text></g><g><title>do_tty_write (5 samples, 0.02%)</title><rect x="22.3762%" y="709" width="0.0241%" height="15" fill="rgb(241,118,19)" fg:x="4650" fg:w="5"/><text x="22.6262%" y="719.50"></text></g><g><title>n_tty_write (4 samples, 0.02%)</title><rect x="22.3810%" y="693" width="0.0192%" height="15" fill="rgb(238,129,25)" fg:x="4651" fg:w="4"/><text x="22.6310%" y="703.50"></text></g><g><title>process_output_block (3 samples, 0.01%)</title><rect x="22.3858%" y="677" width="0.0144%" height="15" fill="rgb(238,22,31)" fg:x="4652" fg:w="3"/><text x="22.6358%" y="687.50"></text></g><g><title>pty_write (3 samples, 0.01%)</title><rect x="22.3858%" y="661" width="0.0144%" height="15" fill="rgb(222,174,48)" fg:x="4652" fg:w="3"/><text x="22.6358%" y="671.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (3 samples, 0.01%)</title><rect x="22.3858%" y="645" width="0.0144%" height="15" fill="rgb(206,152,40)" fg:x="4652" fg:w="3"/><text x="22.6358%" y="655.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (7 samples, 0.03%)</title><rect x="22.3714%" y="981" width="0.0337%" height="15" fill="rgb(218,99,54)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="991.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (7 samples, 0.03%)</title><rect x="22.3714%" y="965" width="0.0337%" height="15" fill="rgb(220,174,26)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="975.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (7 samples, 0.03%)</title><rect x="22.3714%" y="949" width="0.0337%" height="15" fill="rgb(245,116,9)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (7 samples, 0.03%)</title><rect x="22.3714%" y="933" width="0.0337%" height="15" fill="rgb(209,72,35)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="943.50"></text></g><g><title>write (7 samples, 0.03%)</title><rect x="22.3714%" y="917" width="0.0337%" height="15" fill="rgb(226,126,21)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="927.50"></text></g><g><title>el0t_64_sync (7 samples, 0.03%)</title><rect x="22.3714%" y="901" width="0.0337%" height="15" fill="rgb(227,192,1)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="911.50"></text></g><g><title>el0t_64_sync_handler (7 samples, 0.03%)</title><rect x="22.3714%" y="885" width="0.0337%" height="15" fill="rgb(237,180,29)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="895.50"></text></g><g><title>el0_svc (7 samples, 0.03%)</title><rect x="22.3714%" y="869" width="0.0337%" height="15" fill="rgb(230,197,35)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="879.50"></text></g><g><title>do_el0_svc (7 samples, 0.03%)</title><rect x="22.3714%" y="853" width="0.0337%" height="15" fill="rgb(246,193,31)" fg:x="4649" fg:w="7"/><text x="22.6214%" y="863.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.04%)</title><rect x="22.3714%" y="1045" width="0.0433%" height="15" fill="rgb(241,36,4)" fg:x="4649" fg:w="9"/><text x="22.6214%" y="1055.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 0.04%)</title><rect x="22.3714%" y="1029" width="0.0433%" height="15" fill="rgb(241,130,17)" fg:x="4649" fg:w="9"/><text x="22.6214%" y="1039.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 0.04%)</title><rect x="22.3714%" y="1013" width="0.0433%" height="15" fill="rgb(206,137,32)" fg:x="4649" fg:w="9"/><text x="22.6214%" y="1023.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 0.04%)</title><rect x="22.3714%" y="997" width="0.0433%" height="15" fill="rgb(237,228,51)" fg:x="4649" fg:w="9"/><text x="22.6214%" y="1007.50"></text></g><g><title>std::io::stdio::_print (11 samples, 0.05%)</title><rect x="22.3714%" y="1141" width="0.0529%" height="15" fill="rgb(243,6,42)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1151.50"></text></g><g><title>std::io::stdio::print_to (11 samples, 0.05%)</title><rect x="22.3714%" y="1125" width="0.0529%" height="15" fill="rgb(251,74,28)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1135.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (11 samples, 0.05%)</title><rect x="22.3714%" y="1109" width="0.0529%" height="15" fill="rgb(218,20,49)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1119.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (11 samples, 0.05%)</title><rect x="22.3714%" y="1093" width="0.0529%" height="15" fill="rgb(238,28,14)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1103.50"></text></g><g><title>std::io::Write::write_fmt (11 samples, 0.05%)</title><rect x="22.3714%" y="1077" width="0.0529%" height="15" fill="rgb(229,40,46)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1087.50"></text></g><g><title>core::fmt::write (11 samples, 0.05%)</title><rect x="22.3714%" y="1061" width="0.0529%" height="15" fill="rgb(244,195,20)" fg:x="4649" fg:w="11"/><text x="22.6214%" y="1071.50"></text></g><g><title>db::DB::set_block_hash (29 samples, 0.14%)</title><rect x="22.2896%" y="1157" width="0.1396%" height="15" fill="rgb(253,56,35)" fg:x="4632" fg:w="29"/><text x="22.5396%" y="1167.50"></text></g><g><title>&lt;db::UintEncodeDecode&lt;_,_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (3 samples, 0.01%)</title><rect x="22.4291%" y="1125" width="0.0144%" height="15" fill="rgb(210,149,44)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="22.4291%" y="1109" width="0.0144%" height="15" fill="rgb(240,135,12)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="22.4291%" y="1093" width="0.0144%" height="15" fill="rgb(251,24,50)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="22.4291%" y="1077" width="0.0144%" height="15" fill="rgb(243,200,47)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="22.4291%" y="1061" width="0.0144%" height="15" fill="rgb(224,166,26)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="22.4291%" y="1045" width="0.0144%" height="15" fill="rgb(233,0,47)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.01%)</title><rect x="22.4291%" y="1029" width="0.0144%" height="15" fill="rgb(253,80,5)" fg:x="4661" fg:w="3"/><text x="22.6791%" y="1039.50"></text></g><g><title>mdb_cursor_set (4 samples, 0.02%)</title><rect x="22.4484%" y="1093" width="0.0192%" height="15" fill="rgb(214,133,25)" fg:x="4665" fg:w="4"/><text x="22.6984%" y="1103.50"></text></g><g><title>mdb_page_search (4 samples, 0.02%)</title><rect x="22.4484%" y="1077" width="0.0192%" height="15" fill="rgb(209,27,14)" fg:x="4665" fg:w="4"/><text x="22.6984%" y="1087.50"></text></g><g><title>mdb_page_search_root (4 samples, 0.02%)</title><rect x="22.4484%" y="1061" width="0.0192%" height="15" fill="rgb(219,102,51)" fg:x="4665" fg:w="4"/><text x="22.6984%" y="1071.50"></text></g><g><title>mdb_cursor_put (6 samples, 0.03%)</title><rect x="22.4484%" y="1109" width="0.0289%" height="15" fill="rgb(237,18,16)" fg:x="4665" fg:w="6"/><text x="22.6984%" y="1119.50"></text></g><g><title>db::DB::set_block_mine_tm_with_txn (11 samples, 0.05%)</title><rect x="22.4291%" y="1157" width="0.0529%" height="15" fill="rgb(241,85,17)" fg:x="4661" fg:w="11"/><text x="22.6791%" y="1167.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::put (11 samples, 0.05%)</title><rect x="22.4291%" y="1141" width="0.0529%" height="15" fill="rgb(236,90,42)" fg:x="4661" fg:w="11"/><text x="22.6791%" y="1151.50"></text></g><g><title>mdb_put (7 samples, 0.03%)</title><rect x="22.4484%" y="1125" width="0.0337%" height="15" fill="rgb(249,57,21)" fg:x="4665" fg:w="7"/><text x="22.6984%" y="1135.50"></text></g><g><title>&lt;db::UintEncodeDecode&lt;_,_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (5 samples, 0.02%)</title><rect x="22.4917%" y="1125" width="0.0241%" height="15" fill="rgb(243,12,36)" fg:x="4674" fg:w="5"/><text x="22.7417%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="22.4917%" y="1109" width="0.0241%" height="15" fill="rgb(253,128,47)" fg:x="4674" fg:w="5"/><text x="22.7417%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="22.4917%" y="1093" width="0.0241%" height="15" fill="rgb(207,33,20)" fg:x="4674" fg:w="5"/><text x="22.7417%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="22.4917%" y="1077" width="0.0241%" height="15" fill="rgb(233,215,35)" fg:x="4674" fg:w="5"/><text x="22.7417%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="22.4965%" y="1061" width="0.0192%" height="15" fill="rgb(249,188,52)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="22.4965%" y="1045" width="0.0192%" height="15" fill="rgb(225,12,32)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.02%)</title><rect x="22.4965%" y="1029" width="0.0192%" height="15" fill="rgb(247,98,14)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="22.4965%" y="1013" width="0.0192%" height="15" fill="rgb(247,219,48)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="22.4965%" y="997" width="0.0192%" height="15" fill="rgb(253,60,48)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="22.4965%" y="981" width="0.0192%" height="15" fill="rgb(245,15,52)" fg:x="4675" fg:w="4"/><text x="22.7465%" y="991.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (12 samples, 0.06%)</title><rect x="22.4917%" y="1141" width="0.0577%" height="15" fill="rgb(220,133,28)" fg:x="4674" fg:w="12"/><text x="22.7417%" y="1151.50"></text></g><g><title>mdb_get (6 samples, 0.03%)</title><rect x="22.5206%" y="1125" width="0.0289%" height="15" fill="rgb(217,180,4)" fg:x="4680" fg:w="6"/><text x="22.7706%" y="1135.50"></text></g><g><title>mdb_cursor_set (4 samples, 0.02%)</title><rect x="22.5302%" y="1109" width="0.0192%" height="15" fill="rgb(251,24,1)" fg:x="4682" fg:w="4"/><text x="22.7802%" y="1119.50"></text></g><g><title>mdb_page_search (3 samples, 0.01%)</title><rect x="22.5350%" y="1093" width="0.0144%" height="15" fill="rgb(212,185,49)" fg:x="4683" fg:w="3"/><text x="22.7850%" y="1103.50"></text></g><g><title>mdb_page_search_root (3 samples, 0.01%)</title><rect x="22.5350%" y="1077" width="0.0144%" height="15" fill="rgb(215,175,22)" fg:x="4683" fg:w="3"/><text x="22.7850%" y="1087.50"></text></g><g><title>mdb_node_search (3 samples, 0.01%)</title><rect x="22.5350%" y="1061" width="0.0144%" height="15" fill="rgb(250,205,14)" fg:x="4683" fg:w="3"/><text x="22.7850%" y="1071.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="22.5494%" y="1093" width="0.0192%" height="15" fill="rgb(225,211,22)" fg:x="4686" fg:w="4"/><text x="22.7994%" y="1103.50"></text></g><g><title>__libc_calloc (11 samples, 0.05%)</title><rect x="22.5687%" y="1093" width="0.0529%" height="15" fill="rgb(251,179,42)" fg:x="4690" fg:w="11"/><text x="22.8187%" y="1103.50"></text></g><g><title>[libc.so.6] (11 samples, 0.05%)</title><rect x="22.5687%" y="1077" width="0.0529%" height="15" fill="rgb(208,216,51)" fg:x="4690" fg:w="11"/><text x="22.8187%" y="1087.50"></text></g><g><title>[libc.so.6] (9 samples, 0.04%)</title><rect x="22.5783%" y="1061" width="0.0433%" height="15" fill="rgb(235,36,11)" fg:x="4692" fg:w="9"/><text x="22.8283%" y="1071.50"></text></g><g><title>db::DB::set_block_timestamp (30 samples, 0.14%)</title><rect x="22.4821%" y="1157" width="0.1444%" height="15" fill="rgb(213,189,28)" fg:x="4672" fg:w="30"/><text x="22.7321%" y="1167.50"></text></g><g><title>heed::env::Env::read_txn (16 samples, 0.08%)</title><rect x="22.5494%" y="1141" width="0.0770%" height="15" fill="rgb(227,203,42)" fg:x="4686" fg:w="16"/><text x="22.7994%" y="1151.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (16 samples, 0.08%)</title><rect x="22.5494%" y="1125" width="0.0770%" height="15" fill="rgb(244,72,36)" fg:x="4686" fg:w="16"/><text x="22.7994%" y="1135.50"></text></g><g><title>mdb_txn_begin (16 samples, 0.08%)</title><rect x="22.5494%" y="1109" width="0.0770%" height="15" fill="rgb(213,53,17)" fg:x="4686" fg:w="16"/><text x="22.7994%" y="1119.50"></text></g><g><title>blk_insert_flush (9 samples, 0.04%)</title><rect x="22.6986%" y="821" width="0.0433%" height="15" fill="rgb(207,167,3)" fg:x="4717" fg:w="9"/><text x="22.9486%" y="831.50"></text></g><g><title>blk_mq_submit_bio (12 samples, 0.06%)</title><rect x="22.6890%" y="837" width="0.0577%" height="15" fill="rgb(216,98,30)" fg:x="4715" fg:w="12"/><text x="22.9390%" y="847.50"></text></g><g><title>submit_bio (15 samples, 0.07%)</title><rect x="22.6890%" y="885" width="0.0722%" height="15" fill="rgb(236,123,15)" fg:x="4715" fg:w="15"/><text x="22.9390%" y="895.50"></text></g><g><title>submit_bio_noacct (15 samples, 0.07%)</title><rect x="22.6890%" y="869" width="0.0722%" height="15" fill="rgb(248,81,50)" fg:x="4715" fg:w="15"/><text x="22.9390%" y="879.50"></text></g><g><title>__submit_bio (15 samples, 0.07%)</title><rect x="22.6890%" y="853" width="0.0722%" height="15" fill="rgb(214,120,4)" fg:x="4715" fg:w="15"/><text x="22.9390%" y="863.50"></text></g><g><title>submit_bio_checks (3 samples, 0.01%)</title><rect x="22.7467%" y="837" width="0.0144%" height="15" fill="rgb(208,179,34)" fg:x="4727" fg:w="3"/><text x="22.9967%" y="847.50"></text></g><g><title>blkdev_issue_flush (19 samples, 0.09%)</title><rect x="22.6890%" y="917" width="0.0914%" height="15" fill="rgb(227,140,7)" fg:x="4715" fg:w="19"/><text x="22.9390%" y="927.50"></text></g><g><title>submit_bio_wait (19 samples, 0.09%)</title><rect x="22.6890%" y="901" width="0.0914%" height="15" fill="rgb(214,22,6)" fg:x="4715" fg:w="19"/><text x="22.9390%" y="911.50"></text></g><g><title>wait_for_completion_io_timeout (4 samples, 0.02%)</title><rect x="22.7612%" y="885" width="0.0192%" height="15" fill="rgb(207,137,27)" fg:x="4730" fg:w="4"/><text x="23.0112%" y="895.50"></text></g><g><title>__wait_for_common (4 samples, 0.02%)</title><rect x="22.7612%" y="869" width="0.0192%" height="15" fill="rgb(210,8,46)" fg:x="4730" fg:w="4"/><text x="23.0112%" y="879.50"></text></g><g><title>io_schedule_timeout (3 samples, 0.01%)</title><rect x="22.7660%" y="853" width="0.0144%" height="15" fill="rgb(240,16,54)" fg:x="4731" fg:w="3"/><text x="23.0160%" y="863.50"></text></g><g><title>schedule_timeout (3 samples, 0.01%)</title><rect x="22.7660%" y="837" width="0.0144%" height="15" fill="rgb(211,209,29)" fg:x="4731" fg:w="3"/><text x="23.0160%" y="847.50"></text></g><g><title>__filemap_fdatawait_range (5 samples, 0.02%)</title><rect x="22.7804%" y="901" width="0.0241%" height="15" fill="rgb(226,228,24)" fg:x="4734" fg:w="5"/><text x="23.0304%" y="911.50"></text></g><g><title>scsi_mq_get_budget (3 samples, 0.01%)</title><rect x="22.8430%" y="757" width="0.0144%" height="15" fill="rgb(222,84,9)" fg:x="4747" fg:w="3"/><text x="23.0930%" y="767.50"></text></g><g><title>sbitmap_get (3 samples, 0.01%)</title><rect x="22.8430%" y="741" width="0.0144%" height="15" fill="rgb(234,203,30)" fg:x="4747" fg:w="3"/><text x="23.0930%" y="751.50"></text></g><g><title>virtio_check_driver_offered_feature (4 samples, 0.02%)</title><rect x="22.8622%" y="725" width="0.0192%" height="15" fill="rgb(238,109,14)" fg:x="4751" fg:w="4"/><text x="23.1122%" y="735.50"></text></g><g><title>scsi_dispatch_cmd (22 samples, 0.11%)</title><rect x="22.8622%" y="741" width="0.1059%" height="15" fill="rgb(233,206,34)" fg:x="4751" fg:w="22"/><text x="23.1122%" y="751.50"></text></g><g><title>virtscsi_queuecommand (18 samples, 0.09%)</title><rect x="22.8815%" y="725" width="0.0866%" height="15" fill="rgb(220,167,47)" fg:x="4755" fg:w="18"/><text x="23.1315%" y="735.50"></text></g><g><title>virtscsi_add_cmd (18 samples, 0.09%)</title><rect x="22.8815%" y="709" width="0.0866%" height="15" fill="rgb(238,105,10)" fg:x="4755" fg:w="18"/><text x="23.1315%" y="719.50"></text></g><g><title>vp_notify (3 samples, 0.01%)</title><rect x="22.9537%" y="693" width="0.0144%" height="15" fill="rgb(213,227,17)" fg:x="4770" fg:w="3"/><text x="23.2037%" y="703.50"></text></g><g><title>scsi_alloc_sgtables (5 samples, 0.02%)</title><rect x="22.9873%" y="693" width="0.0241%" height="15" fill="rgb(217,132,38)" fg:x="4777" fg:w="5"/><text x="23.2373%" y="703.50"></text></g><g><title>scsi_prepare_cmd (10 samples, 0.05%)</title><rect x="22.9681%" y="741" width="0.0481%" height="15" fill="rgb(242,146,4)" fg:x="4773" fg:w="10"/><text x="23.2181%" y="751.50"></text></g><g><title>sd_init_command (8 samples, 0.04%)</title><rect x="22.9777%" y="725" width="0.0385%" height="15" fill="rgb(212,61,9)" fg:x="4775" fg:w="8"/><text x="23.2277%" y="735.50"></text></g><g><title>sd_setup_read_write_cmnd (8 samples, 0.04%)</title><rect x="22.9777%" y="709" width="0.0385%" height="15" fill="rgb(247,126,22)" fg:x="4775" fg:w="8"/><text x="23.2277%" y="719.50"></text></g><g><title>blk_mq_try_issue_list_directly (40 samples, 0.19%)</title><rect x="22.8285%" y="789" width="0.1925%" height="15" fill="rgb(220,196,2)" fg:x="4744" fg:w="40"/><text x="23.0785%" y="799.50"></text></g><g><title>__blk_mq_try_issue_directly (38 samples, 0.18%)</title><rect x="22.8382%" y="773" width="0.1829%" height="15" fill="rgb(208,46,4)" fg:x="4746" fg:w="38"/><text x="23.0882%" y="783.50"></text></g><g><title>scsi_queue_rq (34 samples, 0.16%)</title><rect x="22.8574%" y="757" width="0.1636%" height="15" fill="rgb(252,104,46)" fg:x="4750" fg:w="34"/><text x="23.1074%" y="767.50"></text></g><g><title>blk_finish_plug (41 samples, 0.20%)</title><rect x="22.8285%" y="853" width="0.1973%" height="15" fill="rgb(237,152,48)" fg:x="4744" fg:w="41"/><text x="23.0785%" y="863.50"></text></g><g><title>blk_flush_plug_list (41 samples, 0.20%)</title><rect x="22.8285%" y="837" width="0.1973%" height="15" fill="rgb(221,59,37)" fg:x="4744" fg:w="41"/><text x="23.0785%" y="847.50"></text></g><g><title>blk_mq_flush_plug_list (41 samples, 0.20%)</title><rect x="22.8285%" y="821" width="0.1973%" height="15" fill="rgb(209,202,51)" fg:x="4744" fg:w="41"/><text x="23.0785%" y="831.50"></text></g><g><title>blk_mq_sched_insert_requests (41 samples, 0.20%)</title><rect x="22.8285%" y="805" width="0.1973%" height="15" fill="rgb(228,81,30)" fg:x="4744" fg:w="41"/><text x="23.0785%" y="815.50"></text></g><g><title>rmap_walk_file (6 samples, 0.03%)</title><rect x="23.0836%" y="757" width="0.0289%" height="15" fill="rgb(227,42,39)" fg:x="4797" fg:w="6"/><text x="23.3336%" y="767.50"></text></g><g><title>page_mkclean_one (5 samples, 0.02%)</title><rect x="23.0884%" y="741" width="0.0241%" height="15" fill="rgb(221,26,2)" fg:x="4798" fg:w="5"/><text x="23.3384%" y="751.50"></text></g><g><title>page_vma_mapped_walk (4 samples, 0.02%)</title><rect x="23.0932%" y="725" width="0.0192%" height="15" fill="rgb(254,61,31)" fg:x="4799" fg:w="4"/><text x="23.3432%" y="735.50"></text></g><g><title>rmap_walk (7 samples, 0.03%)</title><rect x="23.0836%" y="773" width="0.0337%" height="15" fill="rgb(222,173,38)" fg:x="4797" fg:w="7"/><text x="23.3336%" y="783.50"></text></g><g><title>clear_page_dirty_for_io (12 samples, 0.06%)</title><rect x="23.0643%" y="805" width="0.0577%" height="15" fill="rgb(218,50,12)" fg:x="4793" fg:w="12"/><text x="23.3143%" y="815.50"></text></g><g><title>page_mkclean (8 samples, 0.04%)</title><rect x="23.0836%" y="789" width="0.0385%" height="15" fill="rgb(223,88,40)" fg:x="4797" fg:w="8"/><text x="23.3336%" y="799.50"></text></g><g><title>__test_set_page_writeback (6 samples, 0.03%)</title><rect x="23.1413%" y="789" width="0.0289%" height="15" fill="rgb(237,54,19)" fg:x="4809" fg:w="6"/><text x="23.3913%" y="799.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.02%)</title><rect x="23.1798%" y="725" width="0.0192%" height="15" fill="rgb(251,129,25)" fg:x="4817" fg:w="4"/><text x="23.4298%" y="735.50"></text></g><g><title>bvec_alloc (5 samples, 0.02%)</title><rect x="23.1798%" y="773" width="0.0241%" height="15" fill="rgb(238,97,19)" fg:x="4817" fg:w="5"/><text x="23.4298%" y="783.50"></text></g><g><title>mempool_alloc (5 samples, 0.02%)</title><rect x="23.1798%" y="757" width="0.0241%" height="15" fill="rgb(240,169,18)" fg:x="4817" fg:w="5"/><text x="23.4298%" y="767.50"></text></g><g><title>mempool_alloc_slab (5 samples, 0.02%)</title><rect x="23.1798%" y="741" width="0.0241%" height="15" fill="rgb(230,187,49)" fg:x="4817" fg:w="5"/><text x="23.4298%" y="751.50"></text></g><g><title>bio_alloc_bioset (12 samples, 0.06%)</title><rect x="23.1702%" y="789" width="0.0577%" height="15" fill="rgb(209,44,26)" fg:x="4815" fg:w="12"/><text x="23.4202%" y="799.50"></text></g><g><title>mempool_alloc (5 samples, 0.02%)</title><rect x="23.2039%" y="773" width="0.0241%" height="15" fill="rgb(244,0,6)" fg:x="4822" fg:w="5"/><text x="23.4539%" y="783.50"></text></g><g><title>mempool_alloc_slab (4 samples, 0.02%)</title><rect x="23.2087%" y="757" width="0.0192%" height="15" fill="rgb(248,18,21)" fg:x="4823" fg:w="4"/><text x="23.4587%" y="767.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.01%)</title><rect x="23.2135%" y="741" width="0.0144%" height="15" fill="rgb(245,180,19)" fg:x="4824" fg:w="3"/><text x="23.4635%" y="751.50"></text></g><g><title>bio_associate_blkg (4 samples, 0.02%)</title><rect x="23.2279%" y="789" width="0.0192%" height="15" fill="rgb(252,118,36)" fg:x="4827" fg:w="4"/><text x="23.4779%" y="799.50"></text></g><g><title>bio_associate_blkg_from_css (4 samples, 0.02%)</title><rect x="23.2279%" y="773" width="0.0192%" height="15" fill="rgb(210,224,19)" fg:x="4827" fg:w="4"/><text x="23.4779%" y="783.50"></text></g><g><title>__blk_queue_split (3 samples, 0.01%)</title><rect x="23.2857%" y="725" width="0.0144%" height="15" fill="rgb(218,30,24)" fg:x="4839" fg:w="3"/><text x="23.5357%" y="735.50"></text></g><g><title>blk_mq_submit_bio (14 samples, 0.07%)</title><rect x="23.2713%" y="741" width="0.0674%" height="15" fill="rgb(219,75,50)" fg:x="4836" fg:w="14"/><text x="23.5213%" y="751.50"></text></g><g><title>blk_attempt_plug_merge (5 samples, 0.02%)</title><rect x="23.3146%" y="725" width="0.0241%" height="15" fill="rgb(234,72,50)" fg:x="4845" fg:w="5"/><text x="23.5646%" y="735.50"></text></g><g><title>__submit_bio (20 samples, 0.10%)</title><rect x="23.2616%" y="757" width="0.0962%" height="15" fill="rgb(219,100,48)" fg:x="4834" fg:w="20"/><text x="23.5116%" y="767.50"></text></g><g><title>submit_bio_checks (4 samples, 0.02%)</title><rect x="23.3386%" y="741" width="0.0192%" height="15" fill="rgb(253,5,41)" fg:x="4850" fg:w="4"/><text x="23.5886%" y="751.50"></text></g><g><title>ext4_bio_write_page (50 samples, 0.24%)</title><rect x="23.1221%" y="805" width="0.2406%" height="15" fill="rgb(247,181,11)" fg:x="4805" fg:w="50"/><text x="23.3721%" y="815.50"></text></g><g><title>submit_bio (21 samples, 0.10%)</title><rect x="23.2616%" y="789" width="0.1011%" height="15" fill="rgb(222,223,25)" fg:x="4834" fg:w="21"/><text x="23.5116%" y="799.50"></text></g><g><title>submit_bio_noacct (21 samples, 0.10%)</title><rect x="23.2616%" y="773" width="0.1011%" height="15" fill="rgb(214,198,28)" fg:x="4834" fg:w="21"/><text x="23.5116%" y="783.50"></text></g><g><title>mpage_process_page_bufs (64 samples, 0.31%)</title><rect x="23.0595%" y="837" width="0.3080%" height="15" fill="rgb(230,46,43)" fg:x="4792" fg:w="64"/><text x="23.3095%" y="847.50"></text></g><g><title>mpage_submit_page (64 samples, 0.31%)</title><rect x="23.0595%" y="821" width="0.3080%" height="15" fill="rgb(233,65,53)" fg:x="4792" fg:w="64"/><text x="23.3095%" y="831.50"></text></g><g><title>mpage_prepare_extent_to_map (71 samples, 0.34%)</title><rect x="23.0307%" y="853" width="0.3417%" height="15" fill="rgb(221,121,27)" fg:x="4786" fg:w="71"/><text x="23.2807%" y="863.50"></text></g><g><title>file_write_and_wait_range (126 samples, 0.61%)</title><rect x="22.7804%" y="917" width="0.6063%" height="15" fill="rgb(247,70,47)" fg:x="4734" fg:w="126"/><text x="23.0304%" y="927.50"></text></g><g><title>filemap_fdatawrite_wbc (121 samples, 0.58%)</title><rect x="22.8045%" y="901" width="0.5823%" height="15" fill="rgb(228,85,35)" fg:x="4739" fg:w="121"/><text x="23.0545%" y="911.50"></text></g><g><title>do_writepages (120 samples, 0.58%)</title><rect x="22.8093%" y="885" width="0.5775%" height="15" fill="rgb(209,50,18)" fg:x="4740" fg:w="120"/><text x="23.0593%" y="895.50"></text></g><g><title>ext4_writepages (119 samples, 0.57%)</title><rect x="22.8141%" y="869" width="0.5726%" height="15" fill="rgb(250,19,35)" fg:x="4741" fg:w="119"/><text x="23.0641%" y="879.50"></text></g><g><title>tag_pages_for_writeback (3 samples, 0.01%)</title><rect x="23.3723%" y="853" width="0.0144%" height="15" fill="rgb(253,107,29)" fg:x="4857" fg:w="3"/><text x="23.6223%" y="863.50"></text></g><g><title>do_fsync (147 samples, 0.71%)</title><rect x="22.6842%" y="965" width="0.7074%" height="15" fill="rgb(252,179,29)" fg:x="4714" fg:w="147"/><text x="22.9342%" y="975.50"></text></g><g><title>vfs_fsync_range (146 samples, 0.70%)</title><rect x="22.6890%" y="949" width="0.7026%" height="15" fill="rgb(238,194,6)" fg:x="4715" fg:w="146"/><text x="22.9390%" y="959.50"></text></g><g><title>ext4_sync_file (146 samples, 0.70%)</title><rect x="22.6890%" y="933" width="0.7026%" height="15" fill="rgb(238,164,29)" fg:x="4715" fg:w="146"/><text x="22.9390%" y="943.50"></text></g><g><title>__arm64_sys_fdatasync (148 samples, 0.71%)</title><rect x="22.6842%" y="981" width="0.7122%" height="15" fill="rgb(224,25,9)" fg:x="4714" fg:w="148"/><text x="22.9342%" y="991.50"></text></g><g><title>do_el0_svc (150 samples, 0.72%)</title><rect x="22.6794%" y="1029" width="0.7218%" height="15" fill="rgb(244,153,23)" fg:x="4713" fg:w="150"/><text x="22.9294%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (150 samples, 0.72%)</title><rect x="22.6794%" y="1013" width="0.7218%" height="15" fill="rgb(212,203,14)" fg:x="4713" fg:w="150"/><text x="22.9294%" y="1023.50"></text></g><g><title>invoke_syscall (149 samples, 0.72%)</title><rect x="22.6842%" y="997" width="0.7170%" height="15" fill="rgb(220,164,20)" fg:x="4714" fg:w="149"/><text x="22.9342%" y="1007.50"></text></g><g><title>mdb_env_sync (157 samples, 0.76%)</title><rect x="22.6553%" y="1109" width="0.7555%" height="15" fill="rgb(222,203,48)" fg:x="4708" fg:w="157"/><text x="22.9053%" y="1119.50"></text></g><g><title>fdatasync (157 samples, 0.76%)</title><rect x="22.6553%" y="1093" width="0.7555%" height="15" fill="rgb(215,159,22)" fg:x="4708" fg:w="157"/><text x="22.9053%" y="1103.50"></text></g><g><title>el0t_64_sync (152 samples, 0.73%)</title><rect x="22.6794%" y="1077" width="0.7314%" height="15" fill="rgb(216,183,47)" fg:x="4713" fg:w="152"/><text x="22.9294%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (152 samples, 0.73%)</title><rect x="22.6794%" y="1061" width="0.7314%" height="15" fill="rgb(229,195,25)" fg:x="4713" fg:w="152"/><text x="22.9294%" y="1071.50"></text></g><g><title>el0_svc (152 samples, 0.73%)</title><rect x="22.6794%" y="1045" width="0.7314%" height="15" fill="rgb(224,132,51)" fg:x="4713" fg:w="152"/><text x="22.9294%" y="1055.50"></text></g><g><title>file_modified (3 samples, 0.01%)</title><rect x="23.4301%" y="885" width="0.0144%" height="15" fill="rgb(240,63,7)" fg:x="4869" fg:w="3"/><text x="23.6801%" y="895.50"></text></g><g><title>file_update_time (3 samples, 0.01%)</title><rect x="23.4301%" y="869" width="0.0144%" height="15" fill="rgb(249,182,41)" fg:x="4869" fg:w="3"/><text x="23.6801%" y="879.50"></text></g><g><title>generic_update_time (3 samples, 0.01%)</title><rect x="23.4301%" y="853" width="0.0144%" height="15" fill="rgb(243,47,26)" fg:x="4869" fg:w="3"/><text x="23.6801%" y="863.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.01%)</title><rect x="23.4301%" y="837" width="0.0144%" height="15" fill="rgb(233,48,2)" fg:x="4869" fg:w="3"/><text x="23.6801%" y="847.50"></text></g><g><title>ext4_dirty_inode (3 samples, 0.01%)</title><rect x="23.4301%" y="821" width="0.0144%" height="15" fill="rgb(244,165,34)" fg:x="4869" fg:w="3"/><text x="23.6801%" y="831.50"></text></g><g><title>grab_cache_page_write_begin (3 samples, 0.01%)</title><rect x="23.4637%" y="853" width="0.0144%" height="15" fill="rgb(207,89,7)" fg:x="4876" fg:w="3"/><text x="23.7137%" y="863.50"></text></g><g><title>ext4_da_write_begin (4 samples, 0.02%)</title><rect x="23.4637%" y="869" width="0.0192%" height="15" fill="rgb(244,117,36)" fg:x="4876" fg:w="4"/><text x="23.7137%" y="879.50"></text></g><g><title>generic_perform_write (10 samples, 0.05%)</title><rect x="23.4445%" y="885" width="0.0481%" height="15" fill="rgb(226,144,34)" fg:x="4872" fg:w="10"/><text x="23.6945%" y="895.50"></text></g><g><title>blk_mq_submit_bio (6 samples, 0.03%)</title><rect x="23.4974%" y="773" width="0.0289%" height="15" fill="rgb(213,23,19)" fg:x="4883" fg:w="6"/><text x="23.7474%" y="783.50"></text></g><g><title>blk_insert_flush (6 samples, 0.03%)</title><rect x="23.4974%" y="757" width="0.0289%" height="15" fill="rgb(217,75,12)" fg:x="4883" fg:w="6"/><text x="23.7474%" y="767.50"></text></g><g><title>submit_bio (8 samples, 0.04%)</title><rect x="23.4974%" y="821" width="0.0385%" height="15" fill="rgb(224,159,17)" fg:x="4883" fg:w="8"/><text x="23.7474%" y="831.50"></text></g><g><title>submit_bio_noacct (8 samples, 0.04%)</title><rect x="23.4974%" y="805" width="0.0385%" height="15" fill="rgb(217,118,1)" fg:x="4883" fg:w="8"/><text x="23.7474%" y="815.50"></text></g><g><title>__submit_bio (8 samples, 0.04%)</title><rect x="23.4974%" y="789" width="0.0385%" height="15" fill="rgb(232,180,48)" fg:x="4883" fg:w="8"/><text x="23.7474%" y="799.50"></text></g><g><title>blkdev_issue_flush (10 samples, 0.05%)</title><rect x="23.4926%" y="853" width="0.0481%" height="15" fill="rgb(230,27,33)" fg:x="4882" fg:w="10"/><text x="23.7426%" y="863.50"></text></g><g><title>submit_bio_wait (9 samples, 0.04%)</title><rect x="23.4974%" y="837" width="0.0433%" height="15" fill="rgb(205,31,21)" fg:x="4883" fg:w="9"/><text x="23.7474%" y="847.50"></text></g><g><title>blk_finish_plug (6 samples, 0.03%)</title><rect x="23.5552%" y="789" width="0.0289%" height="15" fill="rgb(253,59,4)" fg:x="4895" fg:w="6"/><text x="23.8052%" y="799.50"></text></g><g><title>blk_flush_plug_list (6 samples, 0.03%)</title><rect x="23.5552%" y="773" width="0.0289%" height="15" fill="rgb(224,201,9)" fg:x="4895" fg:w="6"/><text x="23.8052%" y="783.50"></text></g><g><title>blk_mq_flush_plug_list (5 samples, 0.02%)</title><rect x="23.5600%" y="757" width="0.0241%" height="15" fill="rgb(229,206,30)" fg:x="4896" fg:w="5"/><text x="23.8100%" y="767.50"></text></g><g><title>blk_mq_sched_insert_requests (4 samples, 0.02%)</title><rect x="23.5648%" y="741" width="0.0192%" height="15" fill="rgb(212,67,47)" fg:x="4897" fg:w="4"/><text x="23.8148%" y="751.50"></text></g><g><title>blk_mq_try_issue_list_directly (4 samples, 0.02%)</title><rect x="23.5648%" y="725" width="0.0192%" height="15" fill="rgb(211,96,50)" fg:x="4897" fg:w="4"/><text x="23.8148%" y="735.50"></text></g><g><title>__blk_mq_try_issue_directly (4 samples, 0.02%)</title><rect x="23.5648%" y="709" width="0.0192%" height="15" fill="rgb(252,114,18)" fg:x="4897" fg:w="4"/><text x="23.8148%" y="719.50"></text></g><g><title>scsi_queue_rq (4 samples, 0.02%)</title><rect x="23.5648%" y="693" width="0.0192%" height="15" fill="rgb(223,58,37)" fg:x="4897" fg:w="4"/><text x="23.8148%" y="703.50"></text></g><g><title>blk_mq_submit_bio (4 samples, 0.02%)</title><rect x="23.5937%" y="725" width="0.0192%" height="15" fill="rgb(237,70,4)" fg:x="4903" fg:w="4"/><text x="23.8437%" y="735.50"></text></g><g><title>ext4_io_submit (6 samples, 0.03%)</title><rect x="23.5937%" y="789" width="0.0289%" height="15" fill="rgb(244,85,46)" fg:x="4903" fg:w="6"/><text x="23.8437%" y="799.50"></text></g><g><title>submit_bio (6 samples, 0.03%)</title><rect x="23.5937%" y="773" width="0.0289%" height="15" fill="rgb(223,39,52)" fg:x="4903" fg:w="6"/><text x="23.8437%" y="783.50"></text></g><g><title>submit_bio_noacct (6 samples, 0.03%)</title><rect x="23.5937%" y="757" width="0.0289%" height="15" fill="rgb(218,200,14)" fg:x="4903" fg:w="6"/><text x="23.8437%" y="767.50"></text></g><g><title>__submit_bio (6 samples, 0.03%)</title><rect x="23.5937%" y="741" width="0.0289%" height="15" fill="rgb(208,171,16)" fg:x="4903" fg:w="6"/><text x="23.8437%" y="751.50"></text></g><g><title>mpage_process_page_bufs (9 samples, 0.04%)</title><rect x="23.6274%" y="773" width="0.0433%" height="15" fill="rgb(234,200,18)" fg:x="4910" fg:w="9"/><text x="23.8774%" y="783.50"></text></g><g><title>mpage_submit_page (8 samples, 0.04%)</title><rect x="23.6322%" y="757" width="0.0385%" height="15" fill="rgb(228,45,11)" fg:x="4911" fg:w="8"/><text x="23.8822%" y="767.50"></text></g><g><title>ext4_bio_write_page (6 samples, 0.03%)</title><rect x="23.6418%" y="741" width="0.0289%" height="15" fill="rgb(237,182,11)" fg:x="4913" fg:w="6"/><text x="23.8918%" y="751.50"></text></g><g><title>new_sync_write (51 samples, 0.25%)</title><rect x="23.4301%" y="933" width="0.2454%" height="15" fill="rgb(241,175,49)" fg:x="4869" fg:w="51"/><text x="23.6801%" y="943.50"></text></g><g><title>ext4_file_write_iter (51 samples, 0.25%)</title><rect x="23.4301%" y="917" width="0.2454%" height="15" fill="rgb(247,38,35)" fg:x="4869" fg:w="51"/><text x="23.6801%" y="927.50"></text></g><g><title>ext4_buffered_write_iter (51 samples, 0.25%)</title><rect x="23.4301%" y="901" width="0.2454%" height="15" fill="rgb(228,39,49)" fg:x="4869" fg:w="51"/><text x="23.6801%" y="911.50"></text></g><g><title>vfs_fsync_range (38 samples, 0.18%)</title><rect x="23.4926%" y="885" width="0.1829%" height="15" fill="rgb(226,101,26)" fg:x="4882" fg:w="38"/><text x="23.7426%" y="895.50"></text></g><g><title>ext4_sync_file (38 samples, 0.18%)</title><rect x="23.4926%" y="869" width="0.1829%" height="15" fill="rgb(206,141,19)" fg:x="4882" fg:w="38"/><text x="23.7426%" y="879.50"></text></g><g><title>file_write_and_wait_range (27 samples, 0.13%)</title><rect x="23.5455%" y="853" width="0.1299%" height="15" fill="rgb(211,200,13)" fg:x="4893" fg:w="27"/><text x="23.7955%" y="863.50"></text></g><g><title>filemap_fdatawrite_wbc (25 samples, 0.12%)</title><rect x="23.5552%" y="837" width="0.1203%" height="15" fill="rgb(241,121,6)" fg:x="4895" fg:w="25"/><text x="23.8052%" y="847.50"></text></g><g><title>do_writepages (25 samples, 0.12%)</title><rect x="23.5552%" y="821" width="0.1203%" height="15" fill="rgb(234,221,29)" fg:x="4895" fg:w="25"/><text x="23.8052%" y="831.50"></text></g><g><title>ext4_writepages (25 samples, 0.12%)</title><rect x="23.5552%" y="805" width="0.1203%" height="15" fill="rgb(229,136,5)" fg:x="4895" fg:w="25"/><text x="23.8052%" y="815.50"></text></g><g><title>mpage_prepare_extent_to_map (11 samples, 0.05%)</title><rect x="23.6225%" y="789" width="0.0529%" height="15" fill="rgb(238,36,11)" fg:x="4909" fg:w="11"/><text x="23.8725%" y="799.50"></text></g><g><title>do_el0_svc (56 samples, 0.27%)</title><rect x="23.4156%" y="1029" width="0.2695%" height="15" fill="rgb(251,55,41)" fg:x="4866" fg:w="56"/><text x="23.6656%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (56 samples, 0.27%)</title><rect x="23.4156%" y="1013" width="0.2695%" height="15" fill="rgb(242,34,40)" fg:x="4866" fg:w="56"/><text x="23.6656%" y="1023.50"></text></g><g><title>invoke_syscall (56 samples, 0.27%)</title><rect x="23.4156%" y="997" width="0.2695%" height="15" fill="rgb(215,42,17)" fg:x="4866" fg:w="56"/><text x="23.6656%" y="1007.50"></text></g><g><title>__arm64_sys_pwrite64 (55 samples, 0.26%)</title><rect x="23.4204%" y="981" width="0.2647%" height="15" fill="rgb(207,44,46)" fg:x="4867" fg:w="55"/><text x="23.6704%" y="991.50"></text></g><g><title>ksys_pwrite64 (55 samples, 0.26%)</title><rect x="23.4204%" y="965" width="0.2647%" height="15" fill="rgb(211,206,28)" fg:x="4867" fg:w="55"/><text x="23.6704%" y="975.50"></text></g><g><title>vfs_write (54 samples, 0.26%)</title><rect x="23.4252%" y="949" width="0.2599%" height="15" fill="rgb(237,167,16)" fg:x="4868" fg:w="54"/><text x="23.6752%" y="959.50"></text></g><g><title>mdb_env_write_meta (58 samples, 0.28%)</title><rect x="23.4108%" y="1109" width="0.2791%" height="15" fill="rgb(233,66,6)" fg:x="4865" fg:w="58"/><text x="23.6608%" y="1119.50"></text></g><g><title>pwrite (57 samples, 0.27%)</title><rect x="23.4156%" y="1093" width="0.2743%" height="15" fill="rgb(246,123,29)" fg:x="4866" fg:w="57"/><text x="23.6656%" y="1103.50"></text></g><g><title>el0t_64_sync (57 samples, 0.27%)</title><rect x="23.4156%" y="1077" width="0.2743%" height="15" fill="rgb(209,62,40)" fg:x="4866" fg:w="57"/><text x="23.6656%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (57 samples, 0.27%)</title><rect x="23.4156%" y="1061" width="0.2743%" height="15" fill="rgb(218,4,25)" fg:x="4866" fg:w="57"/><text x="23.6656%" y="1071.50"></text></g><g><title>el0_svc (57 samples, 0.27%)</title><rect x="23.4156%" y="1045" width="0.2743%" height="15" fill="rgb(253,91,49)" fg:x="4866" fg:w="57"/><text x="23.6656%" y="1055.50"></text></g><g><title>mdb_node_move (5 samples, 0.02%)</title><rect x="23.7092%" y="1029" width="0.0241%" height="15" fill="rgb(228,155,29)" fg:x="4927" fg:w="5"/><text x="23.9592%" y="1039.50"></text></g><g><title>mdb_cursor_del0 (7 samples, 0.03%)</title><rect x="23.7043%" y="1061" width="0.0337%" height="15" fill="rgb(243,57,37)" fg:x="4926" fg:w="7"/><text x="23.9543%" y="1071.50"></text></g><g><title>mdb_rebalance (6 samples, 0.03%)</title><rect x="23.7092%" y="1045" width="0.0289%" height="15" fill="rgb(244,167,17)" fg:x="4927" fg:w="6"/><text x="23.9592%" y="1055.50"></text></g><g><title>mdb_cursor_del (10 samples, 0.05%)</title><rect x="23.6947%" y="1093" width="0.0481%" height="15" fill="rgb(207,181,38)" fg:x="4924" fg:w="10"/><text x="23.9447%" y="1103.50"></text></g><g><title>mdb_cursor_del (9 samples, 0.04%)</title><rect x="23.6995%" y="1077" width="0.0433%" height="15" fill="rgb(211,8,23)" fg:x="4925" fg:w="9"/><text x="23.9495%" y="1087.50"></text></g><g><title>mdb_cursor_put (4 samples, 0.02%)</title><rect x="23.7428%" y="1093" width="0.0192%" height="15" fill="rgb(235,11,44)" fg:x="4934" fg:w="4"/><text x="23.9928%" y="1103.50"></text></g><g><title>mdb_freelist_save (18 samples, 0.09%)</title><rect x="23.6899%" y="1109" width="0.0866%" height="15" fill="rgb(248,18,52)" fg:x="4923" fg:w="18"/><text x="23.9399%" y="1119.50"></text></g><g><title>mdb_page_search (3 samples, 0.01%)</title><rect x="23.7621%" y="1093" width="0.0144%" height="15" fill="rgb(208,4,7)" fg:x="4938" fg:w="3"/><text x="24.0121%" y="1103.50"></text></g><g><title>llseek (5 samples, 0.02%)</title><rect x="23.7958%" y="1093" width="0.0241%" height="15" fill="rgb(240,17,39)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1103.50"></text></g><g><title>el0t_64_sync (5 samples, 0.02%)</title><rect x="23.7958%" y="1077" width="0.0241%" height="15" fill="rgb(207,170,3)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (5 samples, 0.02%)</title><rect x="23.7958%" y="1061" width="0.0241%" height="15" fill="rgb(236,100,52)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1071.50"></text></g><g><title>el0_svc (5 samples, 0.02%)</title><rect x="23.7958%" y="1045" width="0.0241%" height="15" fill="rgb(246,78,51)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1055.50"></text></g><g><title>do_el0_svc (5 samples, 0.02%)</title><rect x="23.7958%" y="1029" width="0.0241%" height="15" fill="rgb(211,17,15)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (5 samples, 0.02%)</title><rect x="23.7958%" y="1013" width="0.0241%" height="15" fill="rgb(209,59,46)" fg:x="4945" fg:w="5"/><text x="24.0458%" y="1023.50"></text></g><g><title>invoke_syscall (3 samples, 0.01%)</title><rect x="23.8054%" y="997" width="0.0144%" height="15" fill="rgb(210,92,25)" fg:x="4947" fg:w="3"/><text x="24.0554%" y="1007.50"></text></g><g><title>__arm64_sys_lseek (3 samples, 0.01%)</title><rect x="23.8054%" y="981" width="0.0144%" height="15" fill="rgb(238,174,52)" fg:x="4947" fg:w="3"/><text x="24.0554%" y="991.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.02%)</title><rect x="23.8968%" y="773" width="0.0192%" height="15" fill="rgb(230,73,7)" fg:x="4966" fg:w="4"/><text x="24.1468%" y="783.50"></text></g><g><title>__ext4_journal_start_sb (7 samples, 0.03%)</title><rect x="23.8920%" y="805" width="0.0337%" height="15" fill="rgb(243,124,40)" fg:x="4965" fg:w="7"/><text x="24.1420%" y="815.50"></text></g><g><title>jbd2__journal_start (6 samples, 0.03%)</title><rect x="23.8968%" y="789" width="0.0289%" height="15" fill="rgb(244,170,11)" fg:x="4966" fg:w="6"/><text x="24.1468%" y="799.50"></text></g><g><title>__ext4_get_inode_loc (3 samples, 0.01%)</title><rect x="23.9401%" y="757" width="0.0144%" height="15" fill="rgb(207,114,54)" fg:x="4975" fg:w="3"/><text x="24.1901%" y="767.50"></text></g><g><title>__ext4_mark_inode_dirty (7 samples, 0.03%)</title><rect x="23.9257%" y="805" width="0.0337%" height="15" fill="rgb(205,42,20)" fg:x="4972" fg:w="7"/><text x="24.1757%" y="815.50"></text></g><g><title>ext4_reserve_inode_write (5 samples, 0.02%)</title><rect x="23.9353%" y="789" width="0.0241%" height="15" fill="rgb(230,30,28)" fg:x="4974" fg:w="5"/><text x="24.1853%" y="799.50"></text></g><g><title>ext4_get_inode_loc (4 samples, 0.02%)</title><rect x="23.9401%" y="773" width="0.0192%" height="15" fill="rgb(205,73,54)" fg:x="4975" fg:w="4"/><text x="24.1901%" y="783.50"></text></g><g><title>file_modified (18 samples, 0.09%)</title><rect x="23.8776%" y="885" width="0.0866%" height="15" fill="rgb(254,227,23)" fg:x="4962" fg:w="18"/><text x="24.1276%" y="895.50"></text></g><g><title>file_update_time (17 samples, 0.08%)</title><rect x="23.8824%" y="869" width="0.0818%" height="15" fill="rgb(228,202,34)" fg:x="4963" fg:w="17"/><text x="24.1324%" y="879.50"></text></g><g><title>generic_update_time (16 samples, 0.08%)</title><rect x="23.8872%" y="853" width="0.0770%" height="15" fill="rgb(222,225,37)" fg:x="4964" fg:w="16"/><text x="24.1372%" y="863.50"></text></g><g><title>__mark_inode_dirty (16 samples, 0.08%)</title><rect x="23.8872%" y="837" width="0.0770%" height="15" fill="rgb(221,14,54)" fg:x="4964" fg:w="16"/><text x="24.1372%" y="847.50"></text></g><g><title>ext4_dirty_inode (15 samples, 0.07%)</title><rect x="23.8920%" y="821" width="0.0722%" height="15" fill="rgb(254,102,2)" fg:x="4965" fg:w="15"/><text x="24.1420%" y="831.50"></text></g><g><title>balance_dirty_pages_ratelimited (27 samples, 0.13%)</title><rect x="23.9642%" y="869" width="0.1299%" height="15" fill="rgb(232,104,17)" fg:x="4980" fg:w="27"/><text x="24.2142%" y="879.50"></text></g><g><title>balance_dirty_pages (27 samples, 0.13%)</title><rect x="23.9642%" y="853" width="0.1299%" height="15" fill="rgb(250,220,14)" fg:x="4980" fg:w="27"/><text x="24.2142%" y="863.50"></text></g><g><title>mem_cgroup_wb_stats (27 samples, 0.13%)</title><rect x="23.9642%" y="837" width="0.1299%" height="15" fill="rgb(241,158,9)" fg:x="4980" fg:w="27"/><text x="24.2142%" y="847.50"></text></g><g><title>arch_local_irq_restore (26 samples, 0.13%)</title><rect x="23.9690%" y="821" width="0.1251%" height="15" fill="rgb(246,9,43)" fg:x="4981" fg:w="26"/><text x="24.2190%" y="831.50"></text></g><g><title>__arch_copy_from_user (10 samples, 0.05%)</title><rect x="24.0941%" y="853" width="0.0481%" height="15" fill="rgb(206,73,33)" fg:x="5007" fg:w="10"/><text x="24.3441%" y="863.50"></text></g><g><title>copy_page_from_iter_atomic (11 samples, 0.05%)</title><rect x="24.0941%" y="869" width="0.0529%" height="15" fill="rgb(222,79,8)" fg:x="5007" fg:w="11"/><text x="24.3441%" y="879.50"></text></g><g><title>ext4_block_write_begin (4 samples, 0.02%)</title><rect x="24.1567%" y="853" width="0.0192%" height="15" fill="rgb(234,8,54)" fg:x="5020" fg:w="4"/><text x="24.4067%" y="863.50"></text></g><g><title>xas_load (5 samples, 0.02%)</title><rect x="24.1952%" y="821" width="0.0241%" height="15" fill="rgb(209,134,38)" fg:x="5028" fg:w="5"/><text x="24.4452%" y="831.50"></text></g><g><title>ext4_da_write_begin (15 samples, 0.07%)</title><rect x="24.1519%" y="869" width="0.0722%" height="15" fill="rgb(230,127,29)" fg:x="5019" fg:w="15"/><text x="24.4019%" y="879.50"></text></g><g><title>grab_cache_page_write_begin (10 samples, 0.05%)</title><rect x="24.1759%" y="853" width="0.0481%" height="15" fill="rgb(242,44,41)" fg:x="5024" fg:w="10"/><text x="24.4259%" y="863.50"></text></g><g><title>pagecache_get_page (9 samples, 0.04%)</title><rect x="24.1807%" y="837" width="0.0433%" height="15" fill="rgb(222,56,43)" fg:x="5025" fg:w="9"/><text x="24.4307%" y="847.50"></text></g><g><title>mark_buffer_dirty (14 samples, 0.07%)</title><rect x="24.2337%" y="821" width="0.0674%" height="15" fill="rgb(238,39,47)" fg:x="5036" fg:w="14"/><text x="24.4837%" y="831.50"></text></g><g><title>__set_page_dirty (12 samples, 0.06%)</title><rect x="24.2433%" y="805" width="0.0577%" height="15" fill="rgb(226,79,43)" fg:x="5038" fg:w="12"/><text x="24.4933%" y="815.50"></text></g><g><title>ext4_da_write_end (17 samples, 0.08%)</title><rect x="24.2241%" y="869" width="0.0818%" height="15" fill="rgb(242,105,53)" fg:x="5034" fg:w="17"/><text x="24.4741%" y="879.50"></text></g><g><title>generic_write_end (17 samples, 0.08%)</title><rect x="24.2241%" y="853" width="0.0818%" height="15" fill="rgb(251,132,46)" fg:x="5034" fg:w="17"/><text x="24.4741%" y="863.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (17 samples, 0.08%)</title><rect x="24.2241%" y="837" width="0.0818%" height="15" fill="rgb(231,77,14)" fg:x="5034" fg:w="17"/><text x="24.4741%" y="847.50"></text></g><g><title>ext4_buffered_write_iter (94 samples, 0.45%)</title><rect x="23.8728%" y="901" width="0.4523%" height="15" fill="rgb(240,135,9)" fg:x="4961" fg:w="94"/><text x="24.1228%" y="911.50"></text></g><g><title>generic_perform_write (75 samples, 0.36%)</title><rect x="23.9642%" y="885" width="0.3609%" height="15" fill="rgb(248,109,14)" fg:x="4980" fg:w="75"/><text x="24.2142%" y="895.50"></text></g><g><title>new_sync_write (97 samples, 0.47%)</title><rect x="23.8680%" y="933" width="0.4668%" height="15" fill="rgb(227,146,52)" fg:x="4960" fg:w="97"/><text x="24.1180%" y="943.50"></text></g><g><title>ext4_file_write_iter (96 samples, 0.46%)</title><rect x="23.8728%" y="917" width="0.4620%" height="15" fill="rgb(232,54,3)" fg:x="4961" fg:w="96"/><text x="24.1228%" y="927.50"></text></g><g><title>__arm64_sys_pwrite64 (103 samples, 0.50%)</title><rect x="23.8439%" y="981" width="0.4956%" height="15" fill="rgb(229,201,43)" fg:x="4955" fg:w="103"/><text x="24.0939%" y="991.50"></text></g><g><title>ksys_pwrite64 (103 samples, 0.50%)</title><rect x="23.8439%" y="965" width="0.4956%" height="15" fill="rgb(252,161,33)" fg:x="4955" fg:w="103"/><text x="24.0939%" y="975.50"></text></g><g><title>vfs_write (102 samples, 0.49%)</title><rect x="23.8487%" y="949" width="0.4908%" height="15" fill="rgb(226,146,40)" fg:x="4956" fg:w="102"/><text x="24.0987%" y="959.50"></text></g><g><title>pwrite (108 samples, 0.52%)</title><rect x="23.8246%" y="1093" width="0.5197%" height="15" fill="rgb(219,47,25)" fg:x="4951" fg:w="108"/><text x="24.0746%" y="1103.50"></text></g><g><title>el0t_64_sync (107 samples, 0.51%)</title><rect x="23.8295%" y="1077" width="0.5149%" height="15" fill="rgb(250,135,13)" fg:x="4952" fg:w="107"/><text x="24.0795%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (107 samples, 0.51%)</title><rect x="23.8295%" y="1061" width="0.5149%" height="15" fill="rgb(219,229,18)" fg:x="4952" fg:w="107"/><text x="24.0795%" y="1071.50"></text></g><g><title>el0_svc (107 samples, 0.51%)</title><rect x="23.8295%" y="1045" width="0.5149%" height="15" fill="rgb(217,152,27)" fg:x="4952" fg:w="107"/><text x="24.0795%" y="1055.50"></text></g><g><title>do_el0_svc (107 samples, 0.51%)</title><rect x="23.8295%" y="1029" width="0.5149%" height="15" fill="rgb(225,71,47)" fg:x="4952" fg:w="107"/><text x="24.0795%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (107 samples, 0.51%)</title><rect x="23.8295%" y="1013" width="0.5149%" height="15" fill="rgb(220,139,14)" fg:x="4952" fg:w="107"/><text x="24.0795%" y="1023.50"></text></g><g><title>invoke_syscall (105 samples, 0.51%)</title><rect x="23.8391%" y="997" width="0.5053%" height="15" fill="rgb(247,54,32)" fg:x="4954" fg:w="105"/><text x="24.0891%" y="1007.50"></text></g><g><title>balance_dirty_pages (17 samples, 0.08%)</title><rect x="24.3732%" y="837" width="0.0818%" height="15" fill="rgb(252,131,39)" fg:x="5065" fg:w="17"/><text x="24.6232%" y="847.50"></text></g><g><title>mem_cgroup_wb_stats (17 samples, 0.08%)</title><rect x="24.3732%" y="821" width="0.0818%" height="15" fill="rgb(210,108,39)" fg:x="5065" fg:w="17"/><text x="24.6232%" y="831.50"></text></g><g><title>arch_local_irq_restore (17 samples, 0.08%)</title><rect x="24.3732%" y="805" width="0.0818%" height="15" fill="rgb(205,23,29)" fg:x="5065" fg:w="17"/><text x="24.6232%" y="815.50"></text></g><g><title>balance_dirty_pages_ratelimited (19 samples, 0.09%)</title><rect x="24.3684%" y="853" width="0.0914%" height="15" fill="rgb(246,139,46)" fg:x="5064" fg:w="19"/><text x="24.6184%" y="863.50"></text></g><g><title>copy_page_from_iter_atomic (12 samples, 0.06%)</title><rect x="24.4598%" y="853" width="0.0577%" height="15" fill="rgb(250,81,26)" fg:x="5083" fg:w="12"/><text x="24.7098%" y="863.50"></text></g><g><title>__arch_copy_from_user (12 samples, 0.06%)</title><rect x="24.4598%" y="837" width="0.0577%" height="15" fill="rgb(214,104,7)" fg:x="5083" fg:w="12"/><text x="24.7098%" y="847.50"></text></g><g><title>ext4_da_write_begin (7 samples, 0.03%)</title><rect x="24.5176%" y="853" width="0.0337%" height="15" fill="rgb(233,189,8)" fg:x="5095" fg:w="7"/><text x="24.7676%" y="863.50"></text></g><g><title>grab_cache_page_write_begin (6 samples, 0.03%)</title><rect x="24.5224%" y="837" width="0.0289%" height="15" fill="rgb(228,141,17)" fg:x="5096" fg:w="6"/><text x="24.7724%" y="847.50"></text></g><g><title>pagecache_get_page (6 samples, 0.03%)</title><rect x="24.5224%" y="821" width="0.0289%" height="15" fill="rgb(247,157,1)" fg:x="5096" fg:w="6"/><text x="24.7724%" y="831.50"></text></g><g><title>do_iter_write (44 samples, 0.21%)</title><rect x="24.3588%" y="933" width="0.2117%" height="15" fill="rgb(249,225,5)" fg:x="5062" fg:w="44"/><text x="24.6088%" y="943.50"></text></g><g><title>do_iter_readv_writev (44 samples, 0.21%)</title><rect x="24.3588%" y="917" width="0.2117%" height="15" fill="rgb(242,55,13)" fg:x="5062" fg:w="44"/><text x="24.6088%" y="927.50"></text></g><g><title>ext4_file_write_iter (44 samples, 0.21%)</title><rect x="24.3588%" y="901" width="0.2117%" height="15" fill="rgb(230,49,50)" fg:x="5062" fg:w="44"/><text x="24.6088%" y="911.50"></text></g><g><title>ext4_buffered_write_iter (44 samples, 0.21%)</title><rect x="24.3588%" y="885" width="0.2117%" height="15" fill="rgb(241,111,38)" fg:x="5062" fg:w="44"/><text x="24.6088%" y="895.50"></text></g><g><title>generic_perform_write (42 samples, 0.20%)</title><rect x="24.3684%" y="869" width="0.2021%" height="15" fill="rgb(252,155,4)" fg:x="5064" fg:w="42"/><text x="24.6184%" y="879.50"></text></g><g><title>ext4_da_write_end (4 samples, 0.02%)</title><rect x="24.5513%" y="853" width="0.0192%" height="15" fill="rgb(212,69,32)" fg:x="5102" fg:w="4"/><text x="24.8013%" y="863.50"></text></g><g><title>generic_write_end (4 samples, 0.02%)</title><rect x="24.5513%" y="837" width="0.0192%" height="15" fill="rgb(243,107,47)" fg:x="5102" fg:w="4"/><text x="24.8013%" y="847.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (4 samples, 0.02%)</title><rect x="24.5513%" y="821" width="0.0192%" height="15" fill="rgb(247,130,12)" fg:x="5102" fg:w="4"/><text x="24.8013%" y="831.50"></text></g><g><title>mark_buffer_dirty (3 samples, 0.01%)</title><rect x="24.5561%" y="805" width="0.0144%" height="15" fill="rgb(233,74,16)" fg:x="5103" fg:w="3"/><text x="24.8061%" y="815.50"></text></g><g><title>do_writev (46 samples, 0.22%)</title><rect x="24.3540%" y="965" width="0.2214%" height="15" fill="rgb(208,58,18)" fg:x="5061" fg:w="46"/><text x="24.6040%" y="975.50"></text></g><g><title>vfs_writev (46 samples, 0.22%)</title><rect x="24.3540%" y="949" width="0.2214%" height="15" fill="rgb(242,225,1)" fg:x="5061" fg:w="46"/><text x="24.6040%" y="959.50"></text></g><g><title>heed::txn::RwTxn&lt;T&gt;::commit (406 samples, 1.95%)</title><rect x="22.6264%" y="1157" width="1.9537%" height="15" fill="rgb(249,39,40)" fg:x="4702" fg:w="406"/><text x="22.8764%" y="1167.50">h..</text></g><g><title>heed::txn::RoTxn&lt;T&gt;::commit (406 samples, 1.95%)</title><rect x="22.6264%" y="1141" width="1.9537%" height="15" fill="rgb(207,72,44)" fg:x="4702" fg:w="406"/><text x="22.8764%" y="1151.50">h..</text></g><g><title>mdb_txn_commit (406 samples, 1.95%)</title><rect x="22.6264%" y="1125" width="1.9537%" height="15" fill="rgb(215,193,12)" fg:x="4702" fg:w="406"/><text x="22.8764%" y="1135.50">m..</text></g><g><title>mdb_page_flush (167 samples, 0.80%)</title><rect x="23.7765%" y="1109" width="0.8036%" height="15" fill="rgb(248,41,39)" fg:x="4941" fg:w="167"/><text x="24.0265%" y="1119.50"></text></g><g><title>writev (49 samples, 0.24%)</title><rect x="24.3444%" y="1093" width="0.2358%" height="15" fill="rgb(253,85,4)" fg:x="5059" fg:w="49"/><text x="24.5944%" y="1103.50"></text></g><g><title>el0t_64_sync (47 samples, 0.23%)</title><rect x="24.3540%" y="1077" width="0.2262%" height="15" fill="rgb(243,70,31)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1087.50"></text></g><g><title>el0t_64_sync_handler (47 samples, 0.23%)</title><rect x="24.3540%" y="1061" width="0.2262%" height="15" fill="rgb(253,195,26)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1071.50"></text></g><g><title>el0_svc (47 samples, 0.23%)</title><rect x="24.3540%" y="1045" width="0.2262%" height="15" fill="rgb(243,42,11)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1055.50"></text></g><g><title>do_el0_svc (47 samples, 0.23%)</title><rect x="24.3540%" y="1029" width="0.2262%" height="15" fill="rgb(239,66,17)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1039.50"></text></g><g><title>el0_svc_common.constprop.0 (47 samples, 0.23%)</title><rect x="24.3540%" y="1013" width="0.2262%" height="15" fill="rgb(217,132,21)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1023.50"></text></g><g><title>invoke_syscall (47 samples, 0.23%)</title><rect x="24.3540%" y="997" width="0.2262%" height="15" fill="rgb(252,202,21)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="1007.50"></text></g><g><title>__arm64_sys_writev (47 samples, 0.23%)</title><rect x="24.3540%" y="981" width="0.2262%" height="15" fill="rgb(233,98,36)" fg:x="5061" fg:w="47"/><text x="24.6040%" y="991.50"></text></g><g><title>__check_object_size (6 samples, 0.03%)</title><rect x="24.6523%" y="709" width="0.0289%" height="15" fill="rgb(216,153,54)" fg:x="5123" fg:w="6"/><text x="24.9023%" y="719.50"></text></g><g><title>__check_object_size.part.0 (6 samples, 0.03%)</title><rect x="24.6523%" y="693" width="0.0289%" height="15" fill="rgb(250,99,7)" fg:x="5123" fg:w="6"/><text x="24.9023%" y="703.50"></text></g><g><title>__check_heap_object (3 samples, 0.01%)</title><rect x="24.6668%" y="677" width="0.0144%" height="15" fill="rgb(207,56,50)" fg:x="5126" fg:w="3"/><text x="24.9168%" y="687.50"></text></g><g><title>pty_write (15 samples, 0.07%)</title><rect x="24.7101%" y="677" width="0.0722%" height="15" fill="rgb(244,61,34)" fg:x="5135" fg:w="15"/><text x="24.9601%" y="687.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (15 samples, 0.07%)</title><rect x="24.7101%" y="661" width="0.0722%" height="15" fill="rgb(241,50,38)" fg:x="5135" fg:w="15"/><text x="24.9601%" y="671.50"></text></g><g><title>queue_work_on (12 samples, 0.06%)</title><rect x="24.7245%" y="645" width="0.0577%" height="15" fill="rgb(212,166,30)" fg:x="5138" fg:w="12"/><text x="24.9745%" y="655.50"></text></g><g><title>n_tty_write (21 samples, 0.10%)</title><rect x="24.6908%" y="709" width="0.1011%" height="15" fill="rgb(249,127,32)" fg:x="5131" fg:w="21"/><text x="24.9408%" y="719.50"></text></g><g><title>process_output_block (17 samples, 0.08%)</title><rect x="24.7101%" y="693" width="0.0818%" height="15" fill="rgb(209,103,0)" fg:x="5135" fg:w="17"/><text x="24.9601%" y="703.50"></text></g><g><title>do_tty_write (31 samples, 0.15%)</title><rect x="24.6475%" y="725" width="0.1492%" height="15" fill="rgb(238,209,51)" fg:x="5122" fg:w="31"/><text x="24.8975%" y="735.50"></text></g><g><title>new_sync_write (38 samples, 0.18%)</title><rect x="24.6331%" y="773" width="0.1829%" height="15" fill="rgb(237,56,23)" fg:x="5119" fg:w="38"/><text x="24.8831%" y="783.50"></text></g><g><title>tty_write (37 samples, 0.18%)</title><rect x="24.6379%" y="757" width="0.1780%" height="15" fill="rgb(215,153,46)" fg:x="5120" fg:w="37"/><text x="24.8879%" y="767.50"></text></g><g><title>file_tty_write.constprop.0 (37 samples, 0.18%)</title><rect x="24.6379%" y="741" width="0.1780%" height="15" fill="rgb(224,49,31)" fg:x="5120" fg:w="37"/><text x="24.8879%" y="751.50"></text></g><g><title>__arm64_sys_write (43 samples, 0.21%)</title><rect x="24.6186%" y="821" width="0.2069%" height="15" fill="rgb(250,18,42)" fg:x="5116" fg:w="43"/><text x="24.8686%" y="831.50"></text></g><g><title>ksys_write (42 samples, 0.20%)</title><rect x="24.6235%" y="805" width="0.2021%" height="15" fill="rgb(215,176,39)" fg:x="5117" fg:w="42"/><text x="24.8735%" y="815.50"></text></g><g><title>vfs_write (41 samples, 0.20%)</title><rect x="24.6283%" y="789" width="0.1973%" height="15" fill="rgb(223,77,29)" fg:x="5118" fg:w="41"/><text x="24.8783%" y="799.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (49 samples, 0.24%)</title><rect x="24.5946%" y="997" width="0.2358%" height="15" fill="rgb(234,94,52)" fg:x="5111" fg:w="49"/><text x="24.8446%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (48 samples, 0.23%)</title><rect x="24.5994%" y="981" width="0.2310%" height="15" fill="rgb(220,154,50)" fg:x="5112" fg:w="48"/><text x="24.8494%" y="991.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (48 samples, 0.23%)</title><rect x="24.5994%" y="965" width="0.2310%" height="15" fill="rgb(212,11,10)" fg:x="5112" fg:w="48"/><text x="24.8494%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (48 samples, 0.23%)</title><rect x="24.5994%" y="949" width="0.2310%" height="15" fill="rgb(205,166,19)" fg:x="5112" fg:w="48"/><text x="24.8494%" y="959.50"></text></g><g><title>write (48 samples, 0.23%)</title><rect x="24.5994%" y="933" width="0.2310%" height="15" fill="rgb(244,198,16)" fg:x="5112" fg:w="48"/><text x="24.8494%" y="943.50"></text></g><g><title>el0t_64_sync (47 samples, 0.23%)</title><rect x="24.6042%" y="917" width="0.2262%" height="15" fill="rgb(219,69,12)" fg:x="5113" fg:w="47"/><text x="24.8542%" y="927.50"></text></g><g><title>el0t_64_sync_handler (47 samples, 0.23%)</title><rect x="24.6042%" y="901" width="0.2262%" height="15" fill="rgb(245,30,7)" fg:x="5113" fg:w="47"/><text x="24.8542%" y="911.50"></text></g><g><title>el0_svc (47 samples, 0.23%)</title><rect x="24.6042%" y="885" width="0.2262%" height="15" fill="rgb(218,221,48)" fg:x="5113" fg:w="47"/><text x="24.8542%" y="895.50"></text></g><g><title>do_el0_svc (47 samples, 0.23%)</title><rect x="24.6042%" y="869" width="0.2262%" height="15" fill="rgb(216,66,15)" fg:x="5113" fg:w="47"/><text x="24.8542%" y="879.50"></text></g><g><title>el0_svc_common.constprop.0 (47 samples, 0.23%)</title><rect x="24.6042%" y="853" width="0.2262%" height="15" fill="rgb(226,122,50)" fg:x="5113" fg:w="47"/><text x="24.8542%" y="863.50"></text></g><g><title>invoke_syscall (44 samples, 0.21%)</title><rect x="24.6186%" y="837" width="0.2117%" height="15" fill="rgb(239,156,16)" fg:x="5116" fg:w="44"/><text x="24.8686%" y="847.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (50 samples, 0.24%)</title><rect x="24.5946%" y="1061" width="0.2406%" height="15" fill="rgb(224,27,38)" fg:x="5111" fg:w="50"/><text x="24.8446%" y="1071.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (50 samples, 0.24%)</title><rect x="24.5946%" y="1045" width="0.2406%" height="15" fill="rgb(224,39,27)" fg:x="5111" fg:w="50"/><text x="24.8446%" y="1055.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (50 samples, 0.24%)</title><rect x="24.5946%" y="1029" width="0.2406%" height="15" fill="rgb(215,92,29)" fg:x="5111" fg:w="50"/><text x="24.8446%" y="1039.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (50 samples, 0.24%)</title><rect x="24.5946%" y="1013" width="0.2406%" height="15" fill="rgb(207,159,16)" fg:x="5111" fg:w="50"/><text x="24.8446%" y="1023.50"></text></g><g><title>std::io::stdio::_print (55 samples, 0.26%)</title><rect x="24.5898%" y="1157" width="0.2647%" height="15" fill="rgb(238,163,47)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1167.50"></text></g><g><title>std::io::stdio::print_to (55 samples, 0.26%)</title><rect x="24.5898%" y="1141" width="0.2647%" height="15" fill="rgb(219,91,49)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1151.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (55 samples, 0.26%)</title><rect x="24.5898%" y="1125" width="0.2647%" height="15" fill="rgb(227,167,31)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1135.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (55 samples, 0.26%)</title><rect x="24.5898%" y="1109" width="0.2647%" height="15" fill="rgb(234,80,54)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1119.50"></text></g><g><title>std::io::Write::write_fmt (55 samples, 0.26%)</title><rect x="24.5898%" y="1093" width="0.2647%" height="15" fill="rgb(212,114,2)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1103.50"></text></g><g><title>core::fmt::write (55 samples, 0.26%)</title><rect x="24.5898%" y="1077" width="0.2647%" height="15" fill="rgb(234,50,24)" fg:x="5110" fg:w="55"/><text x="24.8398%" y="1087.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.02%)</title><rect x="24.8352%" y="1061" width="0.0192%" height="15" fill="rgb(221,68,8)" fg:x="5161" fg:w="4"/><text x="25.0852%" y="1071.50"></text></g><g><title>ruint::string::&lt;impl core::fmt::Display for ruint::Uint&lt;_,_&gt;&gt;::fmt (3 samples, 0.01%)</title><rect x="24.8400%" y="1045" width="0.0144%" height="15" fill="rgb(254,180,31)" fg:x="5162" fg:w="3"/><text x="25.0900%" y="1055.50"></text></g><g><title>core::fmt::write (3 samples, 0.01%)</title><rect x="24.8400%" y="1029" width="0.0144%" height="15" fill="rgb(247,130,50)" fg:x="5162" fg:w="3"/><text x="25.0900%" y="1039.50"></text></g><g><title>server::finalise_block (568 samples, 2.73%)</title><rect x="22.1260%" y="1173" width="2.7333%" height="15" fill="rgb(211,109,4)" fg:x="4598" fg:w="568"/><text x="22.3760%" y="1183.50">se..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="24.8977%" y="1029" width="0.0433%" height="15" fill="rgb(238,50,21)" fg:x="5174" fg:w="9"/><text x="25.1477%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="24.8977%" y="1013" width="0.0433%" height="15" fill="rgb(225,57,45)" fg:x="5174" fg:w="9"/><text x="25.1477%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.04%)</title><rect x="24.9026%" y="997" width="0.0385%" height="15" fill="rgb(209,196,50)" fg:x="5175" fg:w="8"/><text x="25.1526%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.04%)</title><rect x="24.9026%" y="981" width="0.0385%" height="15" fill="rgb(242,140,13)" fg:x="5175" fg:w="8"/><text x="25.1526%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="24.9074%" y="965" width="0.0337%" height="15" fill="rgb(217,111,7)" fg:x="5176" fg:w="7"/><text x="25.1574%" y="975.50"></text></g><g><title>malloc (6 samples, 0.03%)</title><rect x="24.9122%" y="949" width="0.0289%" height="15" fill="rgb(253,193,51)" fg:x="5177" fg:w="6"/><text x="25.1622%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.05%)</title><rect x="24.8977%" y="1109" width="0.0529%" height="15" fill="rgb(252,70,29)" fg:x="5174" fg:w="11"/><text x="25.1477%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.05%)</title><rect x="24.8977%" y="1093" width="0.0529%" height="15" fill="rgb(232,127,12)" fg:x="5174" fg:w="11"/><text x="25.1477%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.05%)</title><rect x="24.8977%" y="1077" width="0.0529%" height="15" fill="rgb(211,180,21)" fg:x="5174" fg:w="11"/><text x="25.1477%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.05%)</title><rect x="24.8977%" y="1061" width="0.0529%" height="15" fill="rgb(229,72,13)" fg:x="5174" fg:w="11"/><text x="25.1477%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.05%)</title><rect x="24.8977%" y="1045" width="0.0529%" height="15" fill="rgb(240,211,49)" fg:x="5174" fg:w="11"/><text x="25.1477%" y="1055.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.03%)</title><rect x="24.9507%" y="1109" width="0.0337%" height="15" fill="rgb(219,149,40)" fg:x="5185" fg:w="7"/><text x="25.2007%" y="1119.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (23 samples, 0.11%)</title><rect x="24.8785%" y="1157" width="0.1107%" height="15" fill="rgb(210,127,46)" fg:x="5170" fg:w="23"/><text x="25.1285%" y="1167.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (21 samples, 0.10%)</title><rect x="24.8881%" y="1141" width="0.1011%" height="15" fill="rgb(220,106,7)" fg:x="5172" fg:w="21"/><text x="25.1381%" y="1151.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (21 samples, 0.10%)</title><rect x="24.8881%" y="1125" width="0.1011%" height="15" fill="rgb(249,31,22)" fg:x="5172" fg:w="21"/><text x="25.1381%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.09%)</title><rect x="24.9892%" y="1077" width="0.0914%" height="15" fill="rgb(253,1,49)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.09%)</title><rect x="24.9892%" y="1061" width="0.0914%" height="15" fill="rgb(227,144,33)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.09%)</title><rect x="24.9892%" y="1045" width="0.0914%" height="15" fill="rgb(249,163,44)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.09%)</title><rect x="24.9892%" y="1029" width="0.0914%" height="15" fill="rgb(234,15,39)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.09%)</title><rect x="24.9892%" y="1013" width="0.0914%" height="15" fill="rgb(207,66,16)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.09%)</title><rect x="24.9892%" y="997" width="0.0914%" height="15" fill="rgb(233,112,24)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.09%)</title><rect x="24.9892%" y="981" width="0.0914%" height="15" fill="rgb(230,90,22)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="991.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.09%)</title><rect x="24.9892%" y="965" width="0.0914%" height="15" fill="rgb(229,61,13)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="975.50"></text></g><g><title>realloc (19 samples, 0.09%)</title><rect x="24.9892%" y="949" width="0.0914%" height="15" fill="rgb(225,57,24)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="959.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="24.9892%" y="933" width="0.0914%" height="15" fill="rgb(208,169,48)" fg:x="5193" fg:w="19"/><text x="25.2392%" y="943.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="25.0132%" y="917" width="0.0674%" height="15" fill="rgb(244,218,51)" fg:x="5198" fg:w="14"/><text x="25.2632%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="25.0662%" y="901" width="0.0144%" height="15" fill="rgb(214,148,10)" fg:x="5209" fg:w="3"/><text x="25.3162%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (21 samples, 0.10%)</title><rect x="24.9892%" y="1157" width="0.1011%" height="15" fill="rgb(225,174,27)" fg:x="5193" fg:w="21"/><text x="25.2392%" y="1167.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.10%)</title><rect x="24.9892%" y="1141" width="0.1011%" height="15" fill="rgb(230,96,26)" fg:x="5193" fg:w="21"/><text x="25.2392%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.10%)</title><rect x="24.9892%" y="1125" width="0.1011%" height="15" fill="rgb(232,10,30)" fg:x="5193" fg:w="21"/><text x="25.2392%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.10%)</title><rect x="24.9892%" y="1109" width="0.1011%" height="15" fill="rgb(222,8,50)" fg:x="5193" fg:w="21"/><text x="25.2392%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.10%)</title><rect x="24.9892%" y="1093" width="0.1011%" height="15" fill="rgb(213,81,27)" fg:x="5193" fg:w="21"/><text x="25.2392%" y="1103.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (3 samples, 0.01%)</title><rect x="25.0999%" y="1157" width="0.0144%" height="15" fill="rgb(245,50,10)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.01%)</title><rect x="25.0999%" y="1141" width="0.0144%" height="15" fill="rgb(216,100,18)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1151.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.01%)</title><rect x="25.0999%" y="1125" width="0.0144%" height="15" fill="rgb(236,147,54)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.01%)</title><rect x="25.0999%" y="1109" width="0.0144%" height="15" fill="rgb(205,143,26)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.01%)</title><rect x="25.0999%" y="1093" width="0.0144%" height="15" fill="rgb(236,26,9)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="25.0999%" y="1077" width="0.0144%" height="15" fill="rgb(221,165,53)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="25.0999%" y="1061" width="0.0144%" height="15" fill="rgb(214,110,17)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="25.0999%" y="1045" width="0.0144%" height="15" fill="rgb(237,197,12)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="25.0999%" y="1029" width="0.0144%" height="15" fill="rgb(205,84,17)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="25.0999%" y="1013" width="0.0144%" height="15" fill="rgb(237,18,45)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="25.0999%" y="997" width="0.0144%" height="15" fill="rgb(221,87,14)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="25.0999%" y="981" width="0.0144%" height="15" fill="rgb(238,186,15)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="25.0999%" y="965" width="0.0144%" height="15" fill="rgb(208,115,11)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="975.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="25.0999%" y="949" width="0.0144%" height="15" fill="rgb(254,175,0)" fg:x="5216" fg:w="3"/><text x="25.3499%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.06%)</title><rect x="25.1239%" y="949" width="0.0577%" height="15" fill="rgb(227,24,42)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="959.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.06%)</title><rect x="25.1239%" y="933" width="0.0577%" height="15" fill="rgb(223,211,37)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.06%)</title><rect x="25.1239%" y="917" width="0.0577%" height="15" fill="rgb(235,49,27)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.06%)</title><rect x="25.1239%" y="901" width="0.0577%" height="15" fill="rgb(254,97,51)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.06%)</title><rect x="25.1239%" y="885" width="0.0577%" height="15" fill="rgb(249,51,40)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.06%)</title><rect x="25.1239%" y="869" width="0.0577%" height="15" fill="rgb(210,128,45)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.06%)</title><rect x="25.1239%" y="853" width="0.0577%" height="15" fill="rgb(224,137,50)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.06%)</title><rect x="25.1239%" y="837" width="0.0577%" height="15" fill="rgb(242,15,9)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.06%)</title><rect x="25.1239%" y="821" width="0.0577%" height="15" fill="rgb(233,187,41)" fg:x="5221" fg:w="12"/><text x="25.3739%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.05%)</title><rect x="25.1287%" y="805" width="0.0529%" height="15" fill="rgb(227,2,29)" fg:x="5222" fg:w="11"/><text x="25.3787%" y="815.50"></text></g><g><title>malloc (10 samples, 0.05%)</title><rect x="25.1335%" y="789" width="0.0481%" height="15" fill="rgb(222,70,3)" fg:x="5223" fg:w="10"/><text x="25.3835%" y="799.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="25.1335%" y="773" width="0.0481%" height="15" fill="rgb(213,11,42)" fg:x="5223" fg:w="10"/><text x="25.3835%" y="783.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="25.1624%" y="757" width="0.0192%" height="15" fill="rgb(225,150,9)" fg:x="5229" fg:w="4"/><text x="25.4124%" y="767.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (48 samples, 0.23%)</title><rect x="25.2009%" y="805" width="0.2310%" height="15" fill="rgb(230,162,45)" fg:x="5237" fg:w="48"/><text x="25.4509%" y="815.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (48 samples, 0.23%)</title><rect x="25.2009%" y="789" width="0.2310%" height="15" fill="rgb(222,14,52)" fg:x="5237" fg:w="48"/><text x="25.4509%" y="799.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (48 samples, 0.23%)</title><rect x="25.2009%" y="773" width="0.2310%" height="15" fill="rgb(254,198,14)" fg:x="5237" fg:w="48"/><text x="25.4509%" y="783.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (48 samples, 0.23%)</title><rect x="25.2009%" y="757" width="0.2310%" height="15" fill="rgb(220,217,30)" fg:x="5237" fg:w="48"/><text x="25.4509%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.03%)</title><rect x="25.4030%" y="741" width="0.0289%" height="15" fill="rgb(215,146,41)" fg:x="5279" fg:w="6"/><text x="25.6530%" y="751.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize (51 samples, 0.25%)</title><rect x="25.1913%" y="901" width="0.2454%" height="15" fill="rgb(217,27,36)" fg:x="5235" fg:w="51"/><text x="25.4413%" y="911.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (51 samples, 0.25%)</title><rect x="25.1913%" y="885" width="0.2454%" height="15" fill="rgb(219,218,39)" fg:x="5235" fg:w="51"/><text x="25.4413%" y="895.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (51 samples, 0.25%)</title><rect x="25.1913%" y="869" width="0.2454%" height="15" fill="rgb(219,4,42)" fg:x="5235" fg:w="51"/><text x="25.4413%" y="879.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (51 samples, 0.25%)</title><rect x="25.1913%" y="853" width="0.2454%" height="15" fill="rgb(249,119,36)" fg:x="5235" fg:w="51"/><text x="25.4413%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (49 samples, 0.24%)</title><rect x="25.2009%" y="837" width="0.2358%" height="15" fill="rgb(209,23,33)" fg:x="5237" fg:w="49"/><text x="25.4509%" y="847.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (49 samples, 0.24%)</title><rect x="25.2009%" y="821" width="0.2358%" height="15" fill="rgb(211,10,0)" fg:x="5237" fg:w="49"/><text x="25.4509%" y="831.50"></text></g><g><title>alloy_primitives::bits::address::Address::to_checksum_buffer (56 samples, 0.27%)</title><rect x="25.1817%" y="949" width="0.2695%" height="15" fill="rgb(208,99,37)" fg:x="5233" fg:w="56"/><text x="25.4317%" y="959.50"></text></g><g><title>alloy_primitives::bits::address::AddressChecksumBuffer::format (56 samples, 0.27%)</title><rect x="25.1817%" y="933" width="0.2695%" height="15" fill="rgb(213,132,31)" fg:x="5233" fg:w="56"/><text x="25.4317%" y="943.50"></text></g><g><title>alloy_primitives::bits::address::Address::to_checksum_inner (56 samples, 0.27%)</title><rect x="25.1817%" y="917" width="0.2695%" height="15" fill="rgb(243,129,40)" fg:x="5233" fg:w="56"/><text x="25.4317%" y="927.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (70 samples, 0.34%)</title><rect x="25.1239%" y="981" width="0.3368%" height="15" fill="rgb(210,66,33)" fg:x="5221" fg:w="70"/><text x="25.3739%" y="991.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::fmt::Display&gt;::fmt (70 samples, 0.34%)</title><rect x="25.1239%" y="965" width="0.3368%" height="15" fill="rgb(209,189,4)" fg:x="5221" fg:w="70"/><text x="25.3739%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.05%)</title><rect x="25.4608%" y="853" width="0.0481%" height="15" fill="rgb(214,107,37)" fg:x="5291" fg:w="10"/><text x="25.7108%" y="863.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.04%)</title><rect x="25.4656%" y="837" width="0.0433%" height="15" fill="rgb(245,88,54)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.04%)</title><rect x="25.4656%" y="821" width="0.0433%" height="15" fill="rgb(205,146,20)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.04%)</title><rect x="25.4656%" y="805" width="0.0433%" height="15" fill="rgb(220,161,25)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.04%)</title><rect x="25.4656%" y="789" width="0.0433%" height="15" fill="rgb(215,152,15)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="25.4656%" y="773" width="0.0433%" height="15" fill="rgb(233,192,44)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="25.4656%" y="757" width="0.0433%" height="15" fill="rgb(240,170,46)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="25.4656%" y="741" width="0.0433%" height="15" fill="rgb(207,104,33)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.04%)</title><rect x="25.4656%" y="725" width="0.0433%" height="15" fill="rgb(219,21,39)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="25.4656%" y="709" width="0.0433%" height="15" fill="rgb(214,133,29)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="719.50"></text></g><g><title>malloc (9 samples, 0.04%)</title><rect x="25.4656%" y="693" width="0.0433%" height="15" fill="rgb(226,93,6)" fg:x="5292" fg:w="9"/><text x="25.7156%" y="703.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="25.4752%" y="677" width="0.0337%" height="15" fill="rgb(252,222,34)" fg:x="5294" fg:w="7"/><text x="25.7252%" y="687.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.05%)</title><rect x="25.4608%" y="981" width="0.0529%" height="15" fill="rgb(252,92,48)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (11 samples, 0.05%)</title><rect x="25.4608%" y="965" width="0.0529%" height="15" fill="rgb(245,223,24)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="975.50"></text></g><g><title>alloc::fmt::format::{{closure}} (11 samples, 0.05%)</title><rect x="25.4608%" y="949" width="0.0529%" height="15" fill="rgb(205,176,3)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="959.50"></text></g><g><title>alloc::fmt::format::format_inner (11 samples, 0.05%)</title><rect x="25.4608%" y="933" width="0.0529%" height="15" fill="rgb(235,151,15)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="943.50"></text></g><g><title>core::fmt::Write::write_fmt (11 samples, 0.05%)</title><rect x="25.4608%" y="917" width="0.0529%" height="15" fill="rgb(237,209,11)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (11 samples, 0.05%)</title><rect x="25.4608%" y="901" width="0.0529%" height="15" fill="rgb(243,227,24)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="911.50"></text></g><g><title>core::fmt::write (11 samples, 0.05%)</title><rect x="25.4608%" y="885" width="0.0529%" height="15" fill="rgb(239,193,16)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="895.50"></text></g><g><title>core::fmt::rt::Argument::fmt (11 samples, 0.05%)</title><rect x="25.4608%" y="869" width="0.0529%" height="15" fill="rgb(231,27,9)" fg:x="5291" fg:w="11"/><text x="25.7108%" y="879.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (4 samples, 0.02%)</title><rect x="25.5233%" y="741" width="0.0192%" height="15" fill="rgb(219,169,10)" fg:x="5304" fg:w="4"/><text x="25.7733%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.01%)</title><rect x="25.5281%" y="725" width="0.0144%" height="15" fill="rgb(244,229,43)" fg:x="5305" fg:w="3"/><text x="25.7781%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.01%)</title><rect x="25.5281%" y="709" width="0.0144%" height="15" fill="rgb(254,38,20)" fg:x="5305" fg:w="3"/><text x="25.7781%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="25.5281%" y="693" width="0.0144%" height="15" fill="rgb(250,47,30)" fg:x="5305" fg:w="3"/><text x="25.7781%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="25.5281%" y="677" width="0.0144%" height="15" fill="rgb(224,124,36)" fg:x="5305" fg:w="3"/><text x="25.7781%" y="687.50"></text></g><g><title>malloc (28 samples, 0.13%)</title><rect x="25.5955%" y="469" width="0.1347%" height="15" fill="rgb(246,68,51)" fg:x="5319" fg:w="28"/><text x="25.8455%" y="479.50"></text></g><g><title>[libc.so.6] (24 samples, 0.12%)</title><rect x="25.6147%" y="453" width="0.1155%" height="15" fill="rgb(253,43,49)" fg:x="5323" fg:w="24"/><text x="25.8647%" y="463.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="25.6965%" y="437" width="0.0337%" height="15" fill="rgb(219,54,36)" fg:x="5340" fg:w="7"/><text x="25.9465%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.16%)</title><rect x="25.5714%" y="549" width="0.1636%" height="15" fill="rgb(227,133,34)" fg:x="5314" fg:w="34"/><text x="25.8214%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.16%)</title><rect x="25.5714%" y="533" width="0.1636%" height="15" fill="rgb(247,227,15)" fg:x="5314" fg:w="34"/><text x="25.8214%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.16%)</title><rect x="25.5762%" y="517" width="0.1588%" height="15" fill="rgb(229,96,14)" fg:x="5315" fg:w="33"/><text x="25.8262%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.15%)</title><rect x="25.5811%" y="501" width="0.1540%" height="15" fill="rgb(220,79,17)" fg:x="5316" fg:w="32"/><text x="25.8311%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.15%)</title><rect x="25.5859%" y="485" width="0.1492%" height="15" fill="rgb(205,131,53)" fg:x="5317" fg:w="31"/><text x="25.8359%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (37 samples, 0.18%)</title><rect x="25.5714%" y="629" width="0.1780%" height="15" fill="rgb(209,50,29)" fg:x="5314" fg:w="37"/><text x="25.8214%" y="639.50"></text></g><g><title>alloc::string::String::push_str (37 samples, 0.18%)</title><rect x="25.5714%" y="613" width="0.1780%" height="15" fill="rgb(245,86,46)" fg:x="5314" fg:w="37"/><text x="25.8214%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.18%)</title><rect x="25.5714%" y="597" width="0.1780%" height="15" fill="rgb(235,66,46)" fg:x="5314" fg:w="37"/><text x="25.8214%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 0.18%)</title><rect x="25.5714%" y="581" width="0.1780%" height="15" fill="rgb(232,148,31)" fg:x="5314" fg:w="37"/><text x="25.8214%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.18%)</title><rect x="25.5714%" y="565" width="0.1780%" height="15" fill="rgb(217,149,8)" fg:x="5314" fg:w="37"/><text x="25.8214%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="25.7350%" y="549" width="0.0144%" height="15" fill="rgb(209,183,11)" fg:x="5348" fg:w="3"/><text x="25.9850%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (50 samples, 0.24%)</title><rect x="25.5185%" y="917" width="0.2406%" height="15" fill="rgb(208,55,20)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (50 samples, 0.24%)</title><rect x="25.5185%" y="901" width="0.2406%" height="15" fill="rgb(218,39,14)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (50 samples, 0.24%)</title><rect x="25.5185%" y="885" width="0.2406%" height="15" fill="rgb(216,169,33)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.24%)</title><rect x="25.5185%" y="869" width="0.2406%" height="15" fill="rgb(233,80,24)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.24%)</title><rect x="25.5185%" y="853" width="0.2406%" height="15" fill="rgb(213,179,31)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (50 samples, 0.24%)</title><rect x="25.5185%" y="837" width="0.2406%" height="15" fill="rgb(209,19,5)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="847.50"></text></g><g><title>server::types::get_serializeable_execution_result::{{closure}}::{{closure}} (50 samples, 0.24%)</title><rect x="25.5185%" y="821" width="0.2406%" height="15" fill="rgb(219,18,35)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="831.50"></text></g><g><title>alloc::fmt::format (50 samples, 0.24%)</title><rect x="25.5185%" y="805" width="0.2406%" height="15" fill="rgb(209,169,16)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (50 samples, 0.24%)</title><rect x="25.5185%" y="789" width="0.2406%" height="15" fill="rgb(245,90,51)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="799.50"></text></g><g><title>alloc::fmt::format::{{closure}} (50 samples, 0.24%)</title><rect x="25.5185%" y="773" width="0.2406%" height="15" fill="rgb(220,99,45)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (50 samples, 0.24%)</title><rect x="25.5185%" y="757" width="0.2406%" height="15" fill="rgb(249,89,25)" fg:x="5303" fg:w="50"/><text x="25.7685%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (45 samples, 0.22%)</title><rect x="25.5426%" y="741" width="0.2165%" height="15" fill="rgb(239,193,0)" fg:x="5308" fg:w="45"/><text x="25.7926%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (45 samples, 0.22%)</title><rect x="25.5426%" y="725" width="0.2165%" height="15" fill="rgb(231,126,1)" fg:x="5308" fg:w="45"/><text x="25.7926%" y="735.50"></text></g><g><title>core::fmt::write (45 samples, 0.22%)</title><rect x="25.5426%" y="709" width="0.2165%" height="15" fill="rgb(243,166,3)" fg:x="5308" fg:w="45"/><text x="25.7926%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (41 samples, 0.20%)</title><rect x="25.5618%" y="693" width="0.1973%" height="15" fill="rgb(223,22,34)" fg:x="5312" fg:w="41"/><text x="25.8118%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (41 samples, 0.20%)</title><rect x="25.5618%" y="677" width="0.1973%" height="15" fill="rgb(251,52,51)" fg:x="5312" fg:w="41"/><text x="25.8118%" y="687.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::fmt::Debug&gt;::fmt (39 samples, 0.19%)</title><rect x="25.5714%" y="661" width="0.1877%" height="15" fill="rgb(221,165,28)" fg:x="5314" fg:w="39"/><text x="25.8214%" y="671.50"></text></g><g><title>alloy_primitives::bits::fixed::FixedBytes&lt;_&gt;::fmt_hex (39 samples, 0.19%)</title><rect x="25.5714%" y="645" width="0.1877%" height="15" fill="rgb(218,121,47)" fg:x="5314" fg:w="39"/><text x="25.8214%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (64 samples, 0.31%)</title><rect x="25.5137%" y="981" width="0.3080%" height="15" fill="rgb(209,120,9)" fg:x="5302" fg:w="64"/><text x="25.7637%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (64 samples, 0.31%)</title><rect x="25.5137%" y="965" width="0.3080%" height="15" fill="rgb(236,68,12)" fg:x="5302" fg:w="64"/><text x="25.7637%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (64 samples, 0.31%)</title><rect x="25.5137%" y="949" width="0.3080%" height="15" fill="rgb(225,194,26)" fg:x="5302" fg:w="64"/><text x="25.7637%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (63 samples, 0.30%)</title><rect x="25.5185%" y="933" width="0.3032%" height="15" fill="rgb(231,84,39)" fg:x="5303" fg:w="63"/><text x="25.7685%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.06%)</title><rect x="25.7591%" y="917" width="0.0626%" height="15" fill="rgb(210,11,45)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.06%)</title><rect x="25.7591%" y="901" width="0.0626%" height="15" fill="rgb(224,54,52)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.06%)</title><rect x="25.7591%" y="885" width="0.0626%" height="15" fill="rgb(238,102,14)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.06%)</title><rect x="25.7591%" y="869" width="0.0626%" height="15" fill="rgb(243,160,52)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.06%)</title><rect x="25.7591%" y="853" width="0.0626%" height="15" fill="rgb(216,114,19)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.06%)</title><rect x="25.7591%" y="837" width="0.0626%" height="15" fill="rgb(244,166,37)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="847.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.06%)</title><rect x="25.7591%" y="821" width="0.0626%" height="15" fill="rgb(246,29,44)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="831.50"></text></g><g><title>malloc (13 samples, 0.06%)</title><rect x="25.7591%" y="805" width="0.0626%" height="15" fill="rgb(215,56,53)" fg:x="5353" fg:w="13"/><text x="26.0091%" y="815.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="25.7639%" y="789" width="0.0577%" height="15" fill="rgb(217,60,2)" fg:x="5354" fg:w="12"/><text x="26.0139%" y="799.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="25.8072%" y="773" width="0.0144%" height="15" fill="rgb(207,26,24)" fg:x="5363" fg:w="3"/><text x="26.0572%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.03%)</title><rect x="25.8217%" y="981" width="0.0289%" height="15" fill="rgb(252,210,15)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="25.8217%" y="965" width="0.0289%" height="15" fill="rgb(253,209,26)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="25.8217%" y="949" width="0.0289%" height="15" fill="rgb(238,170,14)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="25.8217%" y="933" width="0.0289%" height="15" fill="rgb(216,178,15)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="25.8217%" y="917" width="0.0289%" height="15" fill="rgb(250,197,2)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="25.8217%" y="901" width="0.0289%" height="15" fill="rgb(212,70,42)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="911.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="25.8217%" y="885" width="0.0289%" height="15" fill="rgb(227,213,9)" fg:x="5366" fg:w="6"/><text x="26.0717%" y="895.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="25.8361%" y="869" width="0.0144%" height="15" fill="rgb(245,99,25)" fg:x="5369" fg:w="3"/><text x="26.0861%" y="879.50"></text></g><g><title>alloc::string::String::reserve (18 samples, 0.09%)</title><rect x="25.8553%" y="885" width="0.0866%" height="15" fill="rgb(250,82,29)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.09%)</title><rect x="25.8553%" y="869" width="0.0866%" height="15" fill="rgb(241,226,54)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.09%)</title><rect x="25.8553%" y="853" width="0.0866%" height="15" fill="rgb(221,99,41)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.09%)</title><rect x="25.8553%" y="837" width="0.0866%" height="15" fill="rgb(213,90,21)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.09%)</title><rect x="25.8553%" y="821" width="0.0866%" height="15" fill="rgb(205,208,24)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.09%)</title><rect x="25.8553%" y="805" width="0.0866%" height="15" fill="rgb(246,31,12)" fg:x="5373" fg:w="18"/><text x="26.1053%" y="815.50"></text></g><g><title>malloc (17 samples, 0.08%)</title><rect x="25.8602%" y="789" width="0.0818%" height="15" fill="rgb(213,154,6)" fg:x="5374" fg:w="17"/><text x="26.1102%" y="799.50"></text></g><g><title>[libc.so.6] (16 samples, 0.08%)</title><rect x="25.8650%" y="773" width="0.0770%" height="15" fill="rgb(222,163,29)" fg:x="5375" fg:w="16"/><text x="26.1150%" y="783.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="25.9131%" y="757" width="0.0289%" height="15" fill="rgb(227,201,8)" fg:x="5385" fg:w="6"/><text x="26.1631%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.05%)</title><rect x="25.9708%" y="837" width="0.0481%" height="15" fill="rgb(233,9,32)" fg:x="5397" fg:w="10"/><text x="26.2208%" y="847.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (10 samples, 0.05%)</title><rect x="25.9708%" y="821" width="0.0481%" height="15" fill="rgb(217,54,24)" fg:x="5397" fg:w="10"/><text x="26.2208%" y="831.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.08%)</title><rect x="25.9468%" y="853" width="0.0770%" height="15" fill="rgb(235,192,0)" fg:x="5392" fg:w="16"/><text x="26.1968%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="26.0238%" y="805" width="0.0241%" height="15" fill="rgb(235,45,9)" fg:x="5408" fg:w="5"/><text x="26.2738%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (197 samples, 0.95%)</title><rect x="25.1143%" y="1157" width="0.9480%" height="15" fill="rgb(246,42,40)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (197 samples, 0.95%)</title><rect x="25.1143%" y="1141" width="0.9480%" height="15" fill="rgb(248,111,24)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (197 samples, 0.95%)</title><rect x="25.1143%" y="1125" width="0.9480%" height="15" fill="rgb(249,65,22)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (197 samples, 0.95%)</title><rect x="25.1143%" y="1109" width="0.9480%" height="15" fill="rgb(238,111,51)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (197 samples, 0.95%)</title><rect x="25.1143%" y="1093" width="0.9480%" height="15" fill="rgb(250,118,22)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (197 samples, 0.95%)</title><rect x="25.1143%" y="1077" width="0.9480%" height="15" fill="rgb(234,84,26)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (197 samples, 0.95%)</title><rect x="25.1143%" y="1061" width="0.9480%" height="15" fill="rgb(243,172,12)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (197 samples, 0.95%)</title><rect x="25.1143%" y="1045" width="0.9480%" height="15" fill="rgb(236,150,49)" fg:x="5219" fg:w="197"/><text x="25.3643%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (195 samples, 0.94%)</title><rect x="25.1239%" y="1029" width="0.9384%" height="15" fill="rgb(225,197,26)" fg:x="5221" fg:w="195"/><text x="25.3739%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (195 samples, 0.94%)</title><rect x="25.1239%" y="1013" width="0.9384%" height="15" fill="rgb(214,17,42)" fg:x="5221" fg:w="195"/><text x="25.3739%" y="1023.50"></text></g><g><title>server::types::get_serializeable_execution_result::{{closure}} (195 samples, 0.94%)</title><rect x="25.1239%" y="997" width="0.9384%" height="15" fill="rgb(224,165,40)" fg:x="5221" fg:w="195"/><text x="25.3739%" y="1007.50"></text></g><g><title>hex::encode (44 samples, 0.21%)</title><rect x="25.8505%" y="981" width="0.2117%" height="15" fill="rgb(246,100,4)" fg:x="5372" fg:w="44"/><text x="26.1005%" y="991.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (44 samples, 0.21%)</title><rect x="25.8505%" y="965" width="0.2117%" height="15" fill="rgb(222,103,0)" fg:x="5372" fg:w="44"/><text x="26.1005%" y="975.50"></text></g><g><title>hex::encode_to_iter (44 samples, 0.21%)</title><rect x="25.8505%" y="949" width="0.2117%" height="15" fill="rgb(227,189,26)" fg:x="5372" fg:w="44"/><text x="26.1005%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.21%)</title><rect x="25.8505%" y="933" width="0.2117%" height="15" fill="rgb(214,202,17)" fg:x="5372" fg:w="44"/><text x="26.1005%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (44 samples, 0.21%)</title><rect x="25.8505%" y="917" width="0.2117%" height="15" fill="rgb(229,111,3)" fg:x="5372" fg:w="44"/><text x="26.1005%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (43 samples, 0.21%)</title><rect x="25.8553%" y="901" width="0.2069%" height="15" fill="rgb(229,172,15)" fg:x="5373" fg:w="43"/><text x="26.1053%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.12%)</title><rect x="25.9420%" y="885" width="0.1203%" height="15" fill="rgb(230,224,35)" fg:x="5391" fg:w="25"/><text x="26.1920%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.12%)</title><rect x="25.9420%" y="869" width="0.1203%" height="15" fill="rgb(251,141,6)" fg:x="5391" fg:w="25"/><text x="26.1920%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.04%)</title><rect x="26.0238%" y="853" width="0.0385%" height="15" fill="rgb(225,208,6)" fg:x="5408" fg:w="8"/><text x="26.2738%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (8 samples, 0.04%)</title><rect x="26.0238%" y="837" width="0.0385%" height="15" fill="rgb(246,181,16)" fg:x="5408" fg:w="8"/><text x="26.2738%" y="847.50"></text></g><g><title>alloc::string::String::push (8 samples, 0.04%)</title><rect x="26.0238%" y="821" width="0.0385%" height="15" fill="rgb(227,129,36)" fg:x="5408" fg:w="8"/><text x="26.2738%" y="831.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (3 samples, 0.01%)</title><rect x="26.0478%" y="805" width="0.0144%" height="15" fill="rgb(248,117,24)" fg:x="5413" fg:w="3"/><text x="26.2978%" y="815.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.01%)</title><rect x="26.0478%" y="789" width="0.0144%" height="15" fill="rgb(214,185,35)" fg:x="5413" fg:w="3"/><text x="26.2978%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloy_primitives::bits::fixed::FixedBytes&lt;32_usize&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="26.0671%" y="1077" width="0.0241%" height="15" fill="rgb(236,150,34)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloy_primitives::bits::fixed::FixedBytes&lt;32_usize&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="26.0671%" y="1061" width="0.0241%" height="15" fill="rgb(243,228,27)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="26.0671%" y="1045" width="0.0241%" height="15" fill="rgb(245,77,44)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="26.0671%" y="1029" width="0.0241%" height="15" fill="rgb(235,214,42)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="26.0671%" y="1013" width="0.0241%" height="15" fill="rgb(221,74,3)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1023.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="26.0671%" y="997" width="0.0241%" height="15" fill="rgb(206,121,29)" fg:x="5417" fg:w="5"/><text x="26.3171%" y="1007.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="26.0719%" y="981" width="0.0192%" height="15" fill="rgb(249,131,53)" fg:x="5418" fg:w="4"/><text x="26.3219%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="26.0671%" y="1141" width="0.0577%" height="15" fill="rgb(236,170,29)" fg:x="5417" fg:w="12"/><text x="26.3171%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloy_primitives::log::Log]&gt; (12 samples, 0.06%)</title><rect x="26.0671%" y="1125" width="0.0577%" height="15" fill="rgb(247,96,15)" fg:x="5417" fg:w="12"/><text x="26.3171%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::log::Log&gt; (12 samples, 0.06%)</title><rect x="26.0671%" y="1109" width="0.0577%" height="15" fill="rgb(211,210,7)" fg:x="5417" fg:w="12"/><text x="26.3171%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::log::LogData&gt; (12 samples, 0.06%)</title><rect x="26.0671%" y="1093" width="0.0577%" height="15" fill="rgb(240,88,50)" fg:x="5417" fg:w="12"/><text x="26.3171%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (7 samples, 0.03%)</title><rect x="26.0911%" y="1077" width="0.0337%" height="15" fill="rgb(209,229,26)" fg:x="5422" fg:w="7"/><text x="26.3411%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7 samples, 0.03%)</title><rect x="26.0911%" y="1061" width="0.0337%" height="15" fill="rgb(210,68,23)" fg:x="5422" fg:w="7"/><text x="26.3411%" y="1071.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="26.0911%" y="1045" width="0.0337%" height="15" fill="rgb(229,180,13)" fg:x="5422" fg:w="7"/><text x="26.3411%" y="1055.50"></text></g><g><title>bytes::bytes::promotable_even_drop (7 samples, 0.03%)</title><rect x="26.0911%" y="1029" width="0.0337%" height="15" fill="rgb(236,53,44)" fg:x="5422" fg:w="7"/><text x="26.3411%" y="1039.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="26.1008%" y="1013" width="0.0241%" height="15" fill="rgb(244,214,29)" fg:x="5424" fg:w="5"/><text x="26.3508%" y="1023.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="26.1056%" y="997" width="0.0192%" height="15" fill="rgb(220,75,29)" fg:x="5425" fg:w="4"/><text x="26.3556%" y="1007.50"></text></g><g><title>server::types::get_serializeable_execution_result (266 samples, 1.28%)</title><rect x="24.8689%" y="1173" width="1.2800%" height="15" fill="rgb(214,183,37)" fg:x="5168" fg:w="266"/><text x="25.1189%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloy_primitives::log::Log&gt;&gt; (17 samples, 0.08%)</title><rect x="26.0671%" y="1157" width="0.0818%" height="15" fill="rgb(239,117,29)" fg:x="5417" fg:w="17"/><text x="26.3171%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloy_primitives::log::Log&gt;&gt; (5 samples, 0.02%)</title><rect x="26.1248%" y="1141" width="0.0241%" height="15" fill="rgb(237,171,35)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="26.1248%" y="1125" width="0.0241%" height="15" fill="rgb(229,178,53)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="26.1248%" y="1109" width="0.0241%" height="15" fill="rgb(210,102,19)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="26.1248%" y="1093" width="0.0241%" height="15" fill="rgb(235,127,22)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1103.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="26.1248%" y="1077" width="0.0241%" height="15" fill="rgb(244,31,31)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1087.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="26.1248%" y="1061" width="0.0241%" height="15" fill="rgb(231,43,21)" fg:x="5429" fg:w="5"/><text x="26.3748%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (4,612 samples, 22.19%)</title><rect x="3.9603%" y="1253" width="22.1933%" height="15" fill="rgb(217,131,35)" fg:x="823" fg:w="4612"/><text x="4.2103%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,612 samples, 22.19%)</title><rect x="3.9603%" y="1237" width="22.1933%" height="15" fill="rgb(221,149,4)" fg:x="823" fg:w="4612"/><text x="4.2103%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,612 samples, 22.19%)</title><rect x="3.9603%" y="1221" width="22.1933%" height="15" fill="rgb(232,170,28)" fg:x="823" fg:w="4612"/><text x="4.2103%" y="1231.50">std::panicking::try::do_call</text></g><g><title>rouille::Server&lt;F&gt;::process::{{closure}}::{{closure}} (4,612 samples, 22.19%)</title><rect x="3.9603%" y="1205" width="22.1933%" height="15" fill="rgb(238,56,10)" fg:x="823" fg:w="4612"/><text x="4.2103%" y="1215.50">rouille::Server&lt;F&gt;::process::{{clos..</text></g><g><title>server::start_server::{{closure}} (4,611 samples, 22.19%)</title><rect x="3.9652%" y="1189" width="22.1885%" height="15" fill="rgb(235,196,14)" fg:x="824" fg:w="4611"/><text x="4.2152%" y="1199.50">server::start_server::{{closure}}</text></g><g><title>tiny_http::common::Header::from_bytes (3 samples, 0.01%)</title><rect x="26.1537%" y="1253" width="0.0144%" height="15" fill="rgb(216,45,48)" fg:x="5435" fg:w="3"/><text x="26.4037%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;ascii::ascii_string::AsciiString&gt; (3 samples, 0.01%)</title><rect x="26.1729%" y="1157" width="0.0144%" height="15" fill="rgb(238,213,17)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ascii::ascii_char::AsciiChar&gt;&gt; (3 samples, 0.01%)</title><rect x="26.1729%" y="1141" width="0.0144%" height="15" fill="rgb(212,13,2)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ascii::ascii_char::AsciiChar&gt;&gt; (3 samples, 0.01%)</title><rect x="26.1729%" y="1125" width="0.0144%" height="15" fill="rgb(240,114,20)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="26.1729%" y="1109" width="0.0144%" height="15" fill="rgb(228,41,40)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="26.1729%" y="1093" width="0.0144%" height="15" fill="rgb(244,132,35)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="26.1729%" y="1077" width="0.0144%" height="15" fill="rgb(253,189,4)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1087.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="26.1729%" y="1061" width="0.0144%" height="15" fill="rgb(224,37,19)" fg:x="5439" fg:w="3"/><text x="26.4229%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tiny_http::request::Request&gt; (4 samples, 0.02%)</title><rect x="26.1729%" y="1237" width="0.0192%" height="15" fill="rgb(235,223,18)" fg:x="5439" fg:w="4"/><text x="26.4229%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tiny_http::common::Header&gt;&gt; (4 samples, 0.02%)</title><rect x="26.1729%" y="1221" width="0.0192%" height="15" fill="rgb(235,163,25)" fg:x="5439" fg:w="4"/><text x="26.4229%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="26.1729%" y="1205" width="0.0192%" height="15" fill="rgb(217,145,28)" fg:x="5439" fg:w="4"/><text x="26.4229%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tiny_http::common::Header]&gt; (4 samples, 0.02%)</title><rect x="26.1729%" y="1189" width="0.0192%" height="15" fill="rgb(223,223,32)" fg:x="5439" fg:w="4"/><text x="26.4229%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tiny_http::common::Header&gt; (4 samples, 0.02%)</title><rect x="26.1729%" y="1173" width="0.0192%" height="15" fill="rgb(227,189,39)" fg:x="5439" fg:w="4"/><text x="26.4229%" y="1183.50"></text></g><g><title>sk_page_frag_refill (3 samples, 0.01%)</title><rect x="26.2211%" y="869" width="0.0144%" height="15" fill="rgb(248,10,22)" fg:x="5449" fg:w="3"/><text x="26.4711%" y="879.50"></text></g><g><title>skb_page_frag_refill (3 samples, 0.01%)</title><rect x="26.2211%" y="853" width="0.0144%" height="15" fill="rgb(248,46,39)" fg:x="5449" fg:w="3"/><text x="26.4711%" y="863.50"></text></g><g><title>alloc_pages (3 samples, 0.01%)</title><rect x="26.2211%" y="837" width="0.0144%" height="15" fill="rgb(248,113,48)" fg:x="5449" fg:w="3"/><text x="26.4711%" y="847.50"></text></g><g><title>__alloc_pages (3 samples, 0.01%)</title><rect x="26.2211%" y="821" width="0.0144%" height="15" fill="rgb(245,16,25)" fg:x="5449" fg:w="3"/><text x="26.4711%" y="831.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="26.2211%" y="805" width="0.0144%" height="15" fill="rgb(249,152,16)" fg:x="5449" fg:w="3"/><text x="26.4711%" y="815.50"></text></g><g><title>skb_do_copy_data_nocache.part.0 (3 samples, 0.01%)</title><rect x="26.2403%" y="869" width="0.0144%" height="15" fill="rgb(250,16,1)" fg:x="5453" fg:w="3"/><text x="26.4903%" y="879.50"></text></g><g><title>__check_object_size (3 samples, 0.01%)</title><rect x="26.2403%" y="853" width="0.0144%" height="15" fill="rgb(249,138,3)" fg:x="5453" fg:w="3"/><text x="26.4903%" y="863.50"></text></g><g><title>tcp_data_ready (3 samples, 0.01%)</title><rect x="26.3221%" y="453" width="0.0144%" height="15" fill="rgb(227,71,41)" fg:x="5470" fg:w="3"/><text x="26.5721%" y="463.50"></text></g><g><title>ip_local_deliver (16 samples, 0.08%)</title><rect x="26.2644%" y="549" width="0.0770%" height="15" fill="rgb(209,184,23)" fg:x="5458" fg:w="16"/><text x="26.5144%" y="559.50"></text></g><g><title>ip_local_deliver_finish (16 samples, 0.08%)</title><rect x="26.2644%" y="533" width="0.0770%" height="15" fill="rgb(223,215,31)" fg:x="5458" fg:w="16"/><text x="26.5144%" y="543.50"></text></g><g><title>ip_protocol_deliver_rcu (16 samples, 0.08%)</title><rect x="26.2644%" y="517" width="0.0770%" height="15" fill="rgb(210,146,28)" fg:x="5458" fg:w="16"/><text x="26.5144%" y="527.50"></text></g><g><title>tcp_v4_rcv (15 samples, 0.07%)</title><rect x="26.2692%" y="501" width="0.0722%" height="15" fill="rgb(209,183,41)" fg:x="5459" fg:w="15"/><text x="26.5192%" y="511.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.05%)</title><rect x="26.2884%" y="485" width="0.0529%" height="15" fill="rgb(209,224,45)" fg:x="5463" fg:w="11"/><text x="26.5384%" y="495.50"></text></g><g><title>tcp_rcv_established (10 samples, 0.05%)</title><rect x="26.2932%" y="469" width="0.0481%" height="15" fill="rgb(224,209,51)" fg:x="5464" fg:w="10"/><text x="26.5432%" y="479.50"></text></g><g><title>__local_bh_enable_ip (17 samples, 0.08%)</title><rect x="26.2644%" y="709" width="0.0818%" height="15" fill="rgb(223,17,39)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="719.50"></text></g><g><title>do_softirq (17 samples, 0.08%)</title><rect x="26.2644%" y="693" width="0.0818%" height="15" fill="rgb(234,204,37)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="703.50"></text></g><g><title>__softirqentry_text_start (17 samples, 0.08%)</title><rect x="26.2644%" y="677" width="0.0818%" height="15" fill="rgb(236,120,5)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="687.50"></text></g><g><title>net_rx_action (17 samples, 0.08%)</title><rect x="26.2644%" y="661" width="0.0818%" height="15" fill="rgb(248,97,27)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="671.50"></text></g><g><title>__napi_poll (17 samples, 0.08%)</title><rect x="26.2644%" y="645" width="0.0818%" height="15" fill="rgb(240,66,17)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="655.50"></text></g><g><title>process_backlog (17 samples, 0.08%)</title><rect x="26.2644%" y="629" width="0.0818%" height="15" fill="rgb(210,79,3)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="639.50"></text></g><g><title>__netif_receive_skb (17 samples, 0.08%)</title><rect x="26.2644%" y="613" width="0.0818%" height="15" fill="rgb(214,176,27)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="623.50"></text></g><g><title>__netif_receive_skb_one_core (17 samples, 0.08%)</title><rect x="26.2644%" y="597" width="0.0818%" height="15" fill="rgb(235,185,3)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="607.50"></text></g><g><title>ip_rcv (17 samples, 0.08%)</title><rect x="26.2644%" y="581" width="0.0818%" height="15" fill="rgb(227,24,12)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="591.50"></text></g><g><title>ip_rcv_finish (17 samples, 0.08%)</title><rect x="26.2644%" y="565" width="0.0818%" height="15" fill="rgb(252,169,48)" fg:x="5458" fg:w="17"/><text x="26.5144%" y="575.50"></text></g><g><title>__ip_finish_output (19 samples, 0.09%)</title><rect x="26.2644%" y="741" width="0.0914%" height="15" fill="rgb(212,65,1)" fg:x="5458" fg:w="19"/><text x="26.5144%" y="751.50"></text></g><g><title>ip_finish_output2 (19 samples, 0.09%)</title><rect x="26.2644%" y="725" width="0.0914%" height="15" fill="rgb(242,39,24)" fg:x="5458" fg:w="19"/><text x="26.5144%" y="735.50"></text></g><g><title>ip_finish_output (22 samples, 0.11%)</title><rect x="26.2596%" y="757" width="0.1059%" height="15" fill="rgb(249,32,23)" fg:x="5457" fg:w="22"/><text x="26.5096%" y="767.50"></text></g><g><title>tcp_sendmsg_locked (33 samples, 0.16%)</title><rect x="26.2114%" y="885" width="0.1588%" height="15" fill="rgb(251,195,23)" fg:x="5447" fg:w="33"/><text x="26.4614%" y="895.50"></text></g><g><title>tcp_push (24 samples, 0.12%)</title><rect x="26.2548%" y="869" width="0.1155%" height="15" fill="rgb(236,174,8)" fg:x="5456" fg:w="24"/><text x="26.5048%" y="879.50"></text></g><g><title>__tcp_push_pending_frames (24 samples, 0.12%)</title><rect x="26.2548%" y="853" width="0.1155%" height="15" fill="rgb(220,197,8)" fg:x="5456" fg:w="24"/><text x="26.5048%" y="863.50"></text></g><g><title>tcp_write_xmit (24 samples, 0.12%)</title><rect x="26.2548%" y="837" width="0.1155%" height="15" fill="rgb(240,108,37)" fg:x="5456" fg:w="24"/><text x="26.5048%" y="847.50"></text></g><g><title>__tcp_transmit_skb (24 samples, 0.12%)</title><rect x="26.2548%" y="821" width="0.1155%" height="15" fill="rgb(232,176,24)" fg:x="5456" fg:w="24"/><text x="26.5048%" y="831.50"></text></g><g><title>ip_queue_xmit (23 samples, 0.11%)</title><rect x="26.2596%" y="805" width="0.1107%" height="15" fill="rgb(243,35,29)" fg:x="5457" fg:w="23"/><text x="26.5096%" y="815.50"></text></g><g><title>__ip_queue_xmit (23 samples, 0.11%)</title><rect x="26.2596%" y="789" width="0.1107%" height="15" fill="rgb(210,37,18)" fg:x="5457" fg:w="23"/><text x="26.5096%" y="799.50"></text></g><g><title>ip_output (23 samples, 0.11%)</title><rect x="26.2596%" y="773" width="0.1107%" height="15" fill="rgb(224,184,40)" fg:x="5457" fg:w="23"/><text x="26.5096%" y="783.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::flush (36 samples, 0.17%)</title><rect x="26.2018%" y="1221" width="0.1732%" height="15" fill="rgb(236,39,29)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1231.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialWriter&lt;W&gt; as std::io::Write&gt;::flush (36 samples, 0.17%)</title><rect x="26.2018%" y="1205" width="0.1732%" height="15" fill="rgb(232,48,39)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1215.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (36 samples, 0.17%)</title><rect x="26.2018%" y="1189" width="0.1732%" height="15" fill="rgb(236,34,42)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1199.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (36 samples, 0.17%)</title><rect x="26.2018%" y="1173" width="0.1732%" height="15" fill="rgb(243,106,37)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1183.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Write&gt;::write (36 samples, 0.17%)</title><rect x="26.2018%" y="1157" width="0.1732%" height="15" fill="rgb(218,96,6)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1167.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Write&gt;::write (36 samples, 0.17%)</title><rect x="26.2018%" y="1141" width="0.1732%" height="15" fill="rgb(235,130,12)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1151.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Write&gt;::write (36 samples, 0.17%)</title><rect x="26.2018%" y="1125" width="0.1732%" height="15" fill="rgb(231,95,0)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1135.50"></text></g><g><title>std::net::udp::UdpSocket::send (36 samples, 0.17%)</title><rect x="26.2018%" y="1109" width="0.1732%" height="15" fill="rgb(228,12,23)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1119.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (36 samples, 0.17%)</title><rect x="26.2018%" y="1093" width="0.1732%" height="15" fill="rgb(216,12,1)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1103.50"></text></g><g><title>send (36 samples, 0.17%)</title><rect x="26.2018%" y="1077" width="0.1732%" height="15" fill="rgb(219,59,3)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1087.50"></text></g><g><title>el0t_64_sync (36 samples, 0.17%)</title><rect x="26.2018%" y="1061" width="0.1732%" height="15" fill="rgb(215,208,46)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1071.50"></text></g><g><title>el0t_64_sync_handler (36 samples, 0.17%)</title><rect x="26.2018%" y="1045" width="0.1732%" height="15" fill="rgb(254,224,29)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1055.50"></text></g><g><title>el0_svc (36 samples, 0.17%)</title><rect x="26.2018%" y="1029" width="0.1732%" height="15" fill="rgb(232,14,29)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1039.50"></text></g><g><title>do_el0_svc (36 samples, 0.17%)</title><rect x="26.2018%" y="1013" width="0.1732%" height="15" fill="rgb(208,45,52)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1023.50"></text></g><g><title>el0_svc_common.constprop.0 (36 samples, 0.17%)</title><rect x="26.2018%" y="997" width="0.1732%" height="15" fill="rgb(234,191,28)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="1007.50"></text></g><g><title>invoke_syscall (36 samples, 0.17%)</title><rect x="26.2018%" y="981" width="0.1732%" height="15" fill="rgb(244,67,43)" fg:x="5445" fg:w="36"/><text x="26.4518%" y="991.50"></text></g><g><title>__arm64_sys_sendto (35 samples, 0.17%)</title><rect x="26.2066%" y="965" width="0.1684%" height="15" fill="rgb(236,189,24)" fg:x="5446" fg:w="35"/><text x="26.4566%" y="975.50"></text></g><g><title>__sys_sendto (35 samples, 0.17%)</title><rect x="26.2066%" y="949" width="0.1684%" height="15" fill="rgb(239,214,33)" fg:x="5446" fg:w="35"/><text x="26.4566%" y="959.50"></text></g><g><title>sock_sendmsg (34 samples, 0.16%)</title><rect x="26.2114%" y="933" width="0.1636%" height="15" fill="rgb(226,176,41)" fg:x="5447" fg:w="34"/><text x="26.4614%" y="943.50"></text></g><g><title>inet_sendmsg (34 samples, 0.16%)</title><rect x="26.2114%" y="917" width="0.1636%" height="15" fill="rgb(248,47,8)" fg:x="5447" fg:w="34"/><text x="26.4614%" y="927.50"></text></g><g><title>tcp_sendmsg (34 samples, 0.16%)</title><rect x="26.2114%" y="901" width="0.1636%" height="15" fill="rgb(218,81,44)" fg:x="5447" fg:w="34"/><text x="26.4614%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.17%)</title><rect x="26.4039%" y="1077" width="0.1732%" height="15" fill="rgb(213,98,6)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.17%)</title><rect x="26.4039%" y="1061" width="0.1732%" height="15" fill="rgb(222,85,22)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.17%)</title><rect x="26.4039%" y="1045" width="0.1732%" height="15" fill="rgb(239,46,39)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (36 samples, 0.17%)</title><rect x="26.4039%" y="1029" width="0.1732%" height="15" fill="rgb(237,12,29)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.17%)</title><rect x="26.4039%" y="1013" width="0.1732%" height="15" fill="rgb(214,77,8)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.17%)</title><rect x="26.4039%" y="997" width="0.1732%" height="15" fill="rgb(217,168,37)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.17%)</title><rect x="26.4039%" y="981" width="0.1732%" height="15" fill="rgb(221,217,23)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.17%)</title><rect x="26.4039%" y="965" width="0.1732%" height="15" fill="rgb(243,229,36)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.17%)</title><rect x="26.4039%" y="949" width="0.1732%" height="15" fill="rgb(251,163,40)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.17%)</title><rect x="26.4039%" y="933" width="0.1732%" height="15" fill="rgb(237,222,12)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="943.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.17%)</title><rect x="26.4039%" y="917" width="0.1732%" height="15" fill="rgb(248,132,6)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="927.50"></text></g><g><title>realloc (36 samples, 0.17%)</title><rect x="26.4039%" y="901" width="0.1732%" height="15" fill="rgb(227,167,50)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="911.50"></text></g><g><title>[libc.so.6] (36 samples, 0.17%)</title><rect x="26.4039%" y="885" width="0.1732%" height="15" fill="rgb(242,84,37)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="895.50"></text></g><g><title>[libc.so.6] (36 samples, 0.17%)</title><rect x="26.4039%" y="869" width="0.1732%" height="15" fill="rgb(212,4,50)" fg:x="5487" fg:w="36"/><text x="26.6539%" y="879.50"></text></g><g><title>[libc.so.6] (23 samples, 0.11%)</title><rect x="26.4665%" y="853" width="0.1107%" height="15" fill="rgb(230,228,32)" fg:x="5500" fg:w="23"/><text x="26.7165%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="26.5627%" y="837" width="0.0144%" height="15" fill="rgb(248,217,23)" fg:x="5520" fg:w="3"/><text x="26.8127%" y="847.50"></text></g><g><title>release_sock (4 samples, 0.02%)</title><rect x="26.5916%" y="693" width="0.0192%" height="15" fill="rgb(238,197,32)" fg:x="5526" fg:w="4"/><text x="26.8416%" y="703.50"></text></g><g><title>__release_sock (3 samples, 0.01%)</title><rect x="26.5964%" y="677" width="0.0144%" height="15" fill="rgb(236,106,1)" fg:x="5527" fg:w="3"/><text x="26.8464%" y="687.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.01%)</title><rect x="26.5964%" y="661" width="0.0144%" height="15" fill="rgb(219,228,13)" fg:x="5527" fg:w="3"/><text x="26.8464%" y="671.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.01%)</title><rect x="26.5964%" y="645" width="0.0144%" height="15" fill="rgb(238,30,35)" fg:x="5527" fg:w="3"/><text x="26.8464%" y="655.50"></text></g><g><title>tcp_ack (3 samples, 0.01%)</title><rect x="26.5964%" y="629" width="0.0144%" height="15" fill="rgb(236,70,23)" fg:x="5527" fg:w="3"/><text x="26.8464%" y="639.50"></text></g><g><title>sk_page_frag_refill (4 samples, 0.02%)</title><rect x="26.6157%" y="677" width="0.0192%" height="15" fill="rgb(249,104,48)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="687.50"></text></g><g><title>skb_page_frag_refill (4 samples, 0.02%)</title><rect x="26.6157%" y="661" width="0.0192%" height="15" fill="rgb(254,117,50)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="671.50"></text></g><g><title>alloc_pages (4 samples, 0.02%)</title><rect x="26.6157%" y="645" width="0.0192%" height="15" fill="rgb(223,152,4)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="655.50"></text></g><g><title>__alloc_pages (4 samples, 0.02%)</title><rect x="26.6157%" y="629" width="0.0192%" height="15" fill="rgb(245,6,2)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="639.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="26.6157%" y="613" width="0.0192%" height="15" fill="rgb(249,150,24)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="623.50"></text></g><g><title>__pi_clear_page (4 samples, 0.02%)</title><rect x="26.6157%" y="597" width="0.0192%" height="15" fill="rgb(228,185,42)" fg:x="5531" fg:w="4"/><text x="26.8657%" y="607.50"></text></g><g><title>skb_do_copy_data_nocache.part.0 (3 samples, 0.01%)</title><rect x="26.6349%" y="677" width="0.0144%" height="15" fill="rgb(226,39,33)" fg:x="5535" fg:w="3"/><text x="26.8849%" y="687.50"></text></g><g><title>_copy_from_iter (3 samples, 0.01%)</title><rect x="26.6349%" y="661" width="0.0144%" height="15" fill="rgb(221,166,19)" fg:x="5535" fg:w="3"/><text x="26.8849%" y="671.50"></text></g><g><title>__arch_copy_from_user (3 samples, 0.01%)</title><rect x="26.6349%" y="645" width="0.0144%" height="15" fill="rgb(209,109,2)" fg:x="5535" fg:w="3"/><text x="26.8849%" y="655.50"></text></g><g><title>tcp_push (3 samples, 0.01%)</title><rect x="26.6493%" y="677" width="0.0144%" height="15" fill="rgb(252,216,26)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="687.50"></text></g><g><title>__tcp_push_pending_frames (3 samples, 0.01%)</title><rect x="26.6493%" y="661" width="0.0144%" height="15" fill="rgb(227,173,36)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="671.50"></text></g><g><title>tcp_write_xmit (3 samples, 0.01%)</title><rect x="26.6493%" y="645" width="0.0144%" height="15" fill="rgb(209,90,7)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="655.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.01%)</title><rect x="26.6493%" y="629" width="0.0144%" height="15" fill="rgb(250,194,11)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="639.50"></text></g><g><title>ip_queue_xmit (3 samples, 0.01%)</title><rect x="26.6493%" y="613" width="0.0144%" height="15" fill="rgb(220,72,50)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="623.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.01%)</title><rect x="26.6493%" y="597" width="0.0144%" height="15" fill="rgb(222,106,48)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="607.50"></text></g><g><title>ip_output (3 samples, 0.01%)</title><rect x="26.6493%" y="581" width="0.0144%" height="15" fill="rgb(216,220,45)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="591.50"></text></g><g><title>ip_finish_output (3 samples, 0.01%)</title><rect x="26.6493%" y="565" width="0.0144%" height="15" fill="rgb(234,112,18)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="575.50"></text></g><g><title>__ip_finish_output (3 samples, 0.01%)</title><rect x="26.6493%" y="549" width="0.0144%" height="15" fill="rgb(206,179,9)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="559.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.01%)</title><rect x="26.6493%" y="533" width="0.0144%" height="15" fill="rgb(215,115,40)" fg:x="5538" fg:w="3"/><text x="26.8993%" y="543.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.5868%" y="965" width="0.0866%" height="15" fill="rgb(222,69,34)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="975.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.5868%" y="949" width="0.0866%" height="15" fill="rgb(209,161,10)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="959.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.5868%" y="933" width="0.0866%" height="15" fill="rgb(217,6,38)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="943.50"></text></g><g><title>std::net::udp::UdpSocket::send (18 samples, 0.09%)</title><rect x="26.5868%" y="917" width="0.0866%" height="15" fill="rgb(229,229,48)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="927.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (18 samples, 0.09%)</title><rect x="26.5868%" y="901" width="0.0866%" height="15" fill="rgb(225,21,28)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="911.50"></text></g><g><title>send (18 samples, 0.09%)</title><rect x="26.5868%" y="885" width="0.0866%" height="15" fill="rgb(206,33,13)" fg:x="5525" fg:w="18"/><text x="26.8368%" y="895.50"></text></g><g><title>el0t_64_sync (17 samples, 0.08%)</title><rect x="26.5916%" y="869" width="0.0818%" height="15" fill="rgb(242,178,17)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="879.50"></text></g><g><title>el0t_64_sync_handler (17 samples, 0.08%)</title><rect x="26.5916%" y="853" width="0.0818%" height="15" fill="rgb(220,162,5)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="863.50"></text></g><g><title>el0_svc (17 samples, 0.08%)</title><rect x="26.5916%" y="837" width="0.0818%" height="15" fill="rgb(210,33,43)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="847.50"></text></g><g><title>do_el0_svc (17 samples, 0.08%)</title><rect x="26.5916%" y="821" width="0.0818%" height="15" fill="rgb(216,116,54)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="831.50"></text></g><g><title>el0_svc_common.constprop.0 (17 samples, 0.08%)</title><rect x="26.5916%" y="805" width="0.0818%" height="15" fill="rgb(249,92,24)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="815.50"></text></g><g><title>invoke_syscall (17 samples, 0.08%)</title><rect x="26.5916%" y="789" width="0.0818%" height="15" fill="rgb(231,189,14)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="799.50"></text></g><g><title>__arm64_sys_sendto (17 samples, 0.08%)</title><rect x="26.5916%" y="773" width="0.0818%" height="15" fill="rgb(230,8,41)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="783.50"></text></g><g><title>__sys_sendto (17 samples, 0.08%)</title><rect x="26.5916%" y="757" width="0.0818%" height="15" fill="rgb(249,7,27)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="767.50"></text></g><g><title>sock_sendmsg (17 samples, 0.08%)</title><rect x="26.5916%" y="741" width="0.0818%" height="15" fill="rgb(232,86,5)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="751.50"></text></g><g><title>inet_sendmsg (17 samples, 0.08%)</title><rect x="26.5916%" y="725" width="0.0818%" height="15" fill="rgb(224,175,18)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="735.50"></text></g><g><title>tcp_sendmsg (17 samples, 0.08%)</title><rect x="26.5916%" y="709" width="0.0818%" height="15" fill="rgb(220,129,12)" fg:x="5526" fg:w="17"/><text x="26.8416%" y="719.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 0.06%)</title><rect x="26.6108%" y="693" width="0.0626%" height="15" fill="rgb(210,19,36)" fg:x="5530" fg:w="13"/><text x="26.8608%" y="703.50"></text></g><g><title>__napi_poll (5 samples, 0.02%)</title><rect x="26.7071%" y="437" width="0.0241%" height="15" fill="rgb(219,96,14)" fg:x="5550" fg:w="5"/><text x="26.9571%" y="447.50"></text></g><g><title>process_backlog (5 samples, 0.02%)</title><rect x="26.7071%" y="421" width="0.0241%" height="15" fill="rgb(249,106,1)" fg:x="5550" fg:w="5"/><text x="26.9571%" y="431.50"></text></g><g><title>__netif_receive_skb (5 samples, 0.02%)</title><rect x="26.7071%" y="405" width="0.0241%" height="15" fill="rgb(249,155,20)" fg:x="5550" fg:w="5"/><text x="26.9571%" y="415.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.02%)</title><rect x="26.7071%" y="389" width="0.0241%" height="15" fill="rgb(244,168,9)" fg:x="5550" fg:w="5"/><text x="26.9571%" y="399.50"></text></g><g><title>ip_rcv (4 samples, 0.02%)</title><rect x="26.7119%" y="373" width="0.0192%" height="15" fill="rgb(216,23,50)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="383.50"></text></g><g><title>ip_rcv_finish (4 samples, 0.02%)</title><rect x="26.7119%" y="357" width="0.0192%" height="15" fill="rgb(224,219,20)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="367.50"></text></g><g><title>ip_local_deliver (4 samples, 0.02%)</title><rect x="26.7119%" y="341" width="0.0192%" height="15" fill="rgb(222,156,15)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="351.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.02%)</title><rect x="26.7119%" y="325" width="0.0192%" height="15" fill="rgb(231,97,17)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.02%)</title><rect x="26.7119%" y="309" width="0.0192%" height="15" fill="rgb(218,70,48)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="319.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.02%)</title><rect x="26.7119%" y="293" width="0.0192%" height="15" fill="rgb(212,196,52)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="303.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.02%)</title><rect x="26.7119%" y="277" width="0.0192%" height="15" fill="rgb(243,203,18)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="287.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.02%)</title><rect x="26.7119%" y="261" width="0.0192%" height="15" fill="rgb(252,125,41)" fg:x="5551" fg:w="4"/><text x="26.9619%" y="271.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.03%)</title><rect x="26.7023%" y="501" width="0.0337%" height="15" fill="rgb(223,180,33)" fg:x="5549" fg:w="7"/><text x="26.9523%" y="511.50"></text></g><g><title>do_softirq (7 samples, 0.03%)</title><rect x="26.7023%" y="485" width="0.0337%" height="15" fill="rgb(254,159,46)" fg:x="5549" fg:w="7"/><text x="26.9523%" y="495.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.03%)</title><rect x="26.7023%" y="469" width="0.0337%" height="15" fill="rgb(254,38,10)" fg:x="5549" fg:w="7"/><text x="26.9523%" y="479.50"></text></g><g><title>net_rx_action (6 samples, 0.03%)</title><rect x="26.7071%" y="453" width="0.0289%" height="15" fill="rgb(208,217,32)" fg:x="5550" fg:w="6"/><text x="26.9571%" y="463.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.05%)</title><rect x="26.6878%" y="613" width="0.0529%" height="15" fill="rgb(221,120,13)" fg:x="5546" fg:w="11"/><text x="26.9378%" y="623.50"></text></g><g><title>ip_queue_xmit (11 samples, 0.05%)</title><rect x="26.6878%" y="597" width="0.0529%" height="15" fill="rgb(246,54,52)" fg:x="5546" fg:w="11"/><text x="26.9378%" y="607.50"></text></g><g><title>__ip_queue_xmit (10 samples, 0.05%)</title><rect x="26.6927%" y="581" width="0.0481%" height="15" fill="rgb(242,34,25)" fg:x="5547" fg:w="10"/><text x="26.9427%" y="591.50"></text></g><g><title>ip_output (10 samples, 0.05%)</title><rect x="26.6927%" y="565" width="0.0481%" height="15" fill="rgb(247,209,9)" fg:x="5547" fg:w="10"/><text x="26.9427%" y="575.50"></text></g><g><title>ip_finish_output (9 samples, 0.04%)</title><rect x="26.6975%" y="549" width="0.0433%" height="15" fill="rgb(228,71,26)" fg:x="5548" fg:w="9"/><text x="26.9475%" y="559.50"></text></g><g><title>__ip_finish_output (9 samples, 0.04%)</title><rect x="26.6975%" y="533" width="0.0433%" height="15" fill="rgb(222,145,49)" fg:x="5548" fg:w="9"/><text x="26.9475%" y="543.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.04%)</title><rect x="26.6975%" y="517" width="0.0433%" height="15" fill="rgb(218,121,17)" fg:x="5548" fg:w="9"/><text x="26.9475%" y="527.50"></text></g><g><title>inet_sendmsg (13 samples, 0.06%)</title><rect x="26.6830%" y="709" width="0.0626%" height="15" fill="rgb(244,50,7)" fg:x="5545" fg:w="13"/><text x="26.9330%" y="719.50"></text></g><g><title>tcp_sendmsg (13 samples, 0.06%)</title><rect x="26.6830%" y="693" width="0.0626%" height="15" fill="rgb(246,229,37)" fg:x="5545" fg:w="13"/><text x="26.9330%" y="703.50"></text></g><g><title>tcp_sendmsg_locked (13 samples, 0.06%)</title><rect x="26.6830%" y="677" width="0.0626%" height="15" fill="rgb(225,18,5)" fg:x="5545" fg:w="13"/><text x="26.9330%" y="687.50"></text></g><g><title>tcp_push (12 samples, 0.06%)</title><rect x="26.6878%" y="661" width="0.0577%" height="15" fill="rgb(213,204,8)" fg:x="5546" fg:w="12"/><text x="26.9378%" y="671.50"></text></g><g><title>__tcp_push_pending_frames (12 samples, 0.06%)</title><rect x="26.6878%" y="645" width="0.0577%" height="15" fill="rgb(238,103,6)" fg:x="5546" fg:w="12"/><text x="26.9378%" y="655.50"></text></g><g><title>tcp_write_xmit (12 samples, 0.06%)</title><rect x="26.6878%" y="629" width="0.0577%" height="15" fill="rgb(222,25,35)" fg:x="5546" fg:w="12"/><text x="26.9378%" y="639.50"></text></g><g><title>sock_sendmsg (15 samples, 0.07%)</title><rect x="26.6830%" y="725" width="0.0722%" height="15" fill="rgb(213,203,35)" fg:x="5545" fg:w="15"/><text x="26.9330%" y="735.50"></text></g><g><title>__arm64_sys_sendto (16 samples, 0.08%)</title><rect x="26.6830%" y="757" width="0.0770%" height="15" fill="rgb(221,79,53)" fg:x="5545" fg:w="16"/><text x="26.9330%" y="767.50"></text></g><g><title>__sys_sendto (16 samples, 0.08%)</title><rect x="26.6830%" y="741" width="0.0770%" height="15" fill="rgb(243,200,35)" fg:x="5545" fg:w="16"/><text x="26.9330%" y="751.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (37 samples, 0.18%)</title><rect x="26.5868%" y="997" width="0.1780%" height="15" fill="rgb(248,60,25)" fg:x="5525" fg:w="37"/><text x="26.8368%" y="1007.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (37 samples, 0.18%)</title><rect x="26.5868%" y="981" width="0.1780%" height="15" fill="rgb(227,53,46)" fg:x="5525" fg:w="37"/><text x="26.8368%" y="991.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (19 samples, 0.09%)</title><rect x="26.6734%" y="965" width="0.0914%" height="15" fill="rgb(216,120,32)" fg:x="5543" fg:w="19"/><text x="26.9234%" y="975.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.6782%" y="949" width="0.0866%" height="15" fill="rgb(220,134,1)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="959.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.6782%" y="933" width="0.0866%" height="15" fill="rgb(237,168,5)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="943.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Write&gt;::write (18 samples, 0.09%)</title><rect x="26.6782%" y="917" width="0.0866%" height="15" fill="rgb(231,100,33)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="927.50"></text></g><g><title>std::net::udp::UdpSocket::send (18 samples, 0.09%)</title><rect x="26.6782%" y="901" width="0.0866%" height="15" fill="rgb(236,177,47)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="911.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (18 samples, 0.09%)</title><rect x="26.6782%" y="885" width="0.0866%" height="15" fill="rgb(235,7,49)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="895.50"></text></g><g><title>send (18 samples, 0.09%)</title><rect x="26.6782%" y="869" width="0.0866%" height="15" fill="rgb(232,119,22)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="879.50"></text></g><g><title>el0t_64_sync (18 samples, 0.09%)</title><rect x="26.6782%" y="853" width="0.0866%" height="15" fill="rgb(254,73,53)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="863.50"></text></g><g><title>el0t_64_sync_handler (18 samples, 0.09%)</title><rect x="26.6782%" y="837" width="0.0866%" height="15" fill="rgb(251,35,20)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="847.50"></text></g><g><title>el0_svc (18 samples, 0.09%)</title><rect x="26.6782%" y="821" width="0.0866%" height="15" fill="rgb(241,119,20)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="831.50"></text></g><g><title>do_el0_svc (18 samples, 0.09%)</title><rect x="26.6782%" y="805" width="0.0866%" height="15" fill="rgb(207,102,14)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="815.50"></text></g><g><title>el0_svc_common.constprop.0 (18 samples, 0.09%)</title><rect x="26.6782%" y="789" width="0.0866%" height="15" fill="rgb(248,201,50)" fg:x="5544" fg:w="18"/><text x="26.9282%" y="799.50"></text></g><g><title>invoke_syscall (17 samples, 0.08%)</title><rect x="26.6830%" y="773" width="0.0818%" height="15" fill="rgb(222,185,44)" fg:x="5545" fg:w="17"/><text x="26.9330%" y="783.50"></text></g><g><title>chunked_transfer::encoder::Encoder&lt;W&gt;::send (40 samples, 0.19%)</title><rect x="26.5772%" y="1077" width="0.1925%" height="15" fill="rgb(218,107,18)" fg:x="5523" fg:w="40"/><text x="26.8272%" y="1087.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (38 samples, 0.18%)</title><rect x="26.5868%" y="1061" width="0.1829%" height="15" fill="rgb(237,177,39)" fg:x="5525" fg:w="38"/><text x="26.8368%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write_all (38 samples, 0.18%)</title><rect x="26.5868%" y="1045" width="0.1829%" height="15" fill="rgb(246,69,6)" fg:x="5525" fg:w="38"/><text x="26.8368%" y="1055.50"></text></g><g><title>std::io::Write::write_all (38 samples, 0.18%)</title><rect x="26.5868%" y="1029" width="0.1829%" height="15" fill="rgb(234,208,37)" fg:x="5525" fg:w="38"/><text x="26.8368%" y="1039.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialWriter&lt;W&gt; as std::io::Write&gt;::write (38 samples, 0.18%)</title><rect x="26.5868%" y="1013" width="0.1829%" height="15" fill="rgb(225,4,6)" fg:x="5525" fg:w="38"/><text x="26.8368%" y="1023.50"></text></g><g><title>std::io::Write::write_all (78 samples, 0.38%)</title><rect x="26.4039%" y="1109" width="0.3753%" height="15" fill="rgb(233,45,0)" fg:x="5487" fg:w="78"/><text x="26.6539%" y="1119.50"></text></g><g><title>&lt;chunked_transfer::encoder::Encoder&lt;W&gt; as std::io::Write&gt;::write (78 samples, 0.38%)</title><rect x="26.4039%" y="1093" width="0.3753%" height="15" fill="rgb(226,136,5)" fg:x="5487" fg:w="78"/><text x="26.6539%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read_buf (9 samples, 0.04%)</title><rect x="26.7793%" y="1109" width="0.0433%" height="15" fill="rgb(211,91,47)" fg:x="5565" fg:w="9"/><text x="27.0293%" y="1119.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_buf (9 samples, 0.04%)</title><rect x="26.7793%" y="1093" width="0.0433%" height="15" fill="rgb(242,88,51)" fg:x="5565" fg:w="9"/><text x="27.0293%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_buf (8 samples, 0.04%)</title><rect x="26.7841%" y="1077" width="0.0385%" height="15" fill="rgb(230,91,28)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1087.50"></text></g><g><title>core::io::borrowed_buf::BorrowedCursor::append (8 samples, 0.04%)</title><rect x="26.7841%" y="1061" width="0.0385%" height="15" fill="rgb(254,186,29)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write_slice (8 samples, 0.04%)</title><rect x="26.7841%" y="1045" width="0.0385%" height="15" fill="rgb(238,6,4)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (8 samples, 0.04%)</title><rect x="26.7841%" y="1029" width="0.0385%" height="15" fill="rgb(221,151,16)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.04%)</title><rect x="26.7841%" y="1013" width="0.0385%" height="15" fill="rgb(251,143,52)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1023.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="26.7841%" y="997" width="0.0385%" height="15" fill="rgb(206,90,15)" fg:x="5566" fg:w="8"/><text x="27.0341%" y="1007.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.01%)</title><rect x="26.8611%" y="549" width="0.0144%" height="15" fill="rgb(218,35,8)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="559.50"></text></g><g><title>do_softirq (3 samples, 0.01%)</title><rect x="26.8611%" y="533" width="0.0144%" height="15" fill="rgb(239,215,6)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="543.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="26.8611%" y="517" width="0.0144%" height="15" fill="rgb(245,116,39)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="527.50"></text></g><g><title>net_rx_action (3 samples, 0.01%)</title><rect x="26.8611%" y="501" width="0.0144%" height="15" fill="rgb(242,65,28)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="511.50"></text></g><g><title>__napi_poll (3 samples, 0.01%)</title><rect x="26.8611%" y="485" width="0.0144%" height="15" fill="rgb(252,132,53)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="495.50"></text></g><g><title>process_backlog (3 samples, 0.01%)</title><rect x="26.8611%" y="469" width="0.0144%" height="15" fill="rgb(224,159,50)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="479.50"></text></g><g><title>__netif_receive_skb (3 samples, 0.01%)</title><rect x="26.8611%" y="453" width="0.0144%" height="15" fill="rgb(224,93,4)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="463.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.01%)</title><rect x="26.8611%" y="437" width="0.0144%" height="15" fill="rgb(208,81,34)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="447.50"></text></g><g><title>ip_rcv (3 samples, 0.01%)</title><rect x="26.8611%" y="421" width="0.0144%" height="15" fill="rgb(233,92,54)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="431.50"></text></g><g><title>ip_rcv_finish (3 samples, 0.01%)</title><rect x="26.8611%" y="405" width="0.0144%" height="15" fill="rgb(237,21,14)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="415.50"></text></g><g><title>ip_local_deliver (3 samples, 0.01%)</title><rect x="26.8611%" y="389" width="0.0144%" height="15" fill="rgb(249,128,51)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="399.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.01%)</title><rect x="26.8611%" y="373" width="0.0144%" height="15" fill="rgb(223,129,24)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="383.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.01%)</title><rect x="26.8611%" y="357" width="0.0144%" height="15" fill="rgb(231,168,25)" fg:x="5582" fg:w="3"/><text x="27.1111%" y="367.50"></text></g><g><title>__ip_finish_output (6 samples, 0.03%)</title><rect x="26.8611%" y="581" width="0.0289%" height="15" fill="rgb(224,39,20)" fg:x="5582" fg:w="6"/><text x="27.1111%" y="591.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.03%)</title><rect x="26.8611%" y="565" width="0.0289%" height="15" fill="rgb(225,152,53)" fg:x="5582" fg:w="6"/><text x="27.1111%" y="575.50"></text></g><g><title>neigh_hh_output (3 samples, 0.01%)</title><rect x="26.8755%" y="549" width="0.0144%" height="15" fill="rgb(252,17,24)" fg:x="5585" fg:w="3"/><text x="27.1255%" y="559.50"></text></g><g><title>dev_queue_xmit (3 samples, 0.01%)</title><rect x="26.8755%" y="533" width="0.0144%" height="15" fill="rgb(250,114,30)" fg:x="5585" fg:w="3"/><text x="27.1255%" y="543.50"></text></g><g><title>std::io::copy::copy (102 samples, 0.49%)</title><rect x="26.4039%" y="1205" width="0.4908%" height="15" fill="rgb(229,5,4)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1215.50"></text></g><g><title>std::sys::unix::kernel_copy::copy_spec (102 samples, 0.49%)</title><rect x="26.4039%" y="1189" width="0.4908%" height="15" fill="rgb(225,176,49)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1199.50"></text></g><g><title>&lt;std::sys::unix::kernel_copy::Copier&lt;R,W&gt; as std::sys::unix::kernel_copy::SpecCopy&gt;::copy (102 samples, 0.49%)</title><rect x="26.4039%" y="1173" width="0.4908%" height="15" fill="rgb(224,221,49)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1183.50"></text></g><g><title>std::io::copy::generic_copy (102 samples, 0.49%)</title><rect x="26.4039%" y="1157" width="0.4908%" height="15" fill="rgb(253,169,27)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1167.50"></text></g><g><title>&lt;W as std::io::copy::BufferedWriterSpec&gt;::copy_from (102 samples, 0.49%)</title><rect x="26.4039%" y="1141" width="0.4908%" height="15" fill="rgb(211,206,16)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1151.50"></text></g><g><title>std::io::copy::stack_buffer_copy (102 samples, 0.49%)</title><rect x="26.4039%" y="1125" width="0.4908%" height="15" fill="rgb(244,87,35)" fg:x="5487" fg:w="102"/><text x="26.6539%" y="1135.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 samples, 0.07%)</title><rect x="26.8226%" y="1109" width="0.0722%" height="15" fill="rgb(246,28,10)" fg:x="5574" fg:w="15"/><text x="27.0726%" y="1119.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write_all (15 samples, 0.07%)</title><rect x="26.8226%" y="1093" width="0.0722%" height="15" fill="rgb(229,12,44)" fg:x="5574" fg:w="15"/><text x="27.0726%" y="1103.50"></text></g><g><title>std::io::Write::write_all (15 samples, 0.07%)</title><rect x="26.8226%" y="1077" width="0.0722%" height="15" fill="rgb(210,145,37)" fg:x="5574" fg:w="15"/><text x="27.0726%" y="1087.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialWriter&lt;W&gt; as std::io::Write&gt;::write (14 samples, 0.07%)</title><rect x="26.8274%" y="1061" width="0.0674%" height="15" fill="rgb(227,112,52)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="1071.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (14 samples, 0.07%)</title><rect x="26.8274%" y="1045" width="0.0674%" height="15" fill="rgb(238,155,34)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="1055.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (14 samples, 0.07%)</title><rect x="26.8274%" y="1029" width="0.0674%" height="15" fill="rgb(239,226,36)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="1039.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (14 samples, 0.07%)</title><rect x="26.8274%" y="1013" width="0.0674%" height="15" fill="rgb(230,16,23)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="1023.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Write&gt;::write (14 samples, 0.07%)</title><rect x="26.8274%" y="997" width="0.0674%" height="15" fill="rgb(236,171,36)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="1007.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Write&gt;::write (14 samples, 0.07%)</title><rect x="26.8274%" y="981" width="0.0674%" height="15" fill="rgb(221,22,14)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="991.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Write&gt;::write (14 samples, 0.07%)</title><rect x="26.8274%" y="965" width="0.0674%" height="15" fill="rgb(242,43,11)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="975.50"></text></g><g><title>std::net::udp::UdpSocket::send (14 samples, 0.07%)</title><rect x="26.8274%" y="949" width="0.0674%" height="15" fill="rgb(232,69,23)" fg:x="5575" fg:w="14"/><text x="27.0774%" y="959.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (13 samples, 0.06%)</title><rect x="26.8322%" y="933" width="0.0626%" height="15" fill="rgb(216,180,54)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="943.50"></text></g><g><title>send (13 samples, 0.06%)</title><rect x="26.8322%" y="917" width="0.0626%" height="15" fill="rgb(216,5,24)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="927.50"></text></g><g><title>el0t_64_sync (13 samples, 0.06%)</title><rect x="26.8322%" y="901" width="0.0626%" height="15" fill="rgb(225,89,9)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="911.50"></text></g><g><title>el0t_64_sync_handler (13 samples, 0.06%)</title><rect x="26.8322%" y="885" width="0.0626%" height="15" fill="rgb(243,75,33)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="895.50"></text></g><g><title>el0_svc (13 samples, 0.06%)</title><rect x="26.8322%" y="869" width="0.0626%" height="15" fill="rgb(247,141,45)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="879.50"></text></g><g><title>do_el0_svc (13 samples, 0.06%)</title><rect x="26.8322%" y="853" width="0.0626%" height="15" fill="rgb(232,177,36)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="863.50"></text></g><g><title>el0_svc_common.constprop.0 (13 samples, 0.06%)</title><rect x="26.8322%" y="837" width="0.0626%" height="15" fill="rgb(219,125,36)" fg:x="5576" fg:w="13"/><text x="27.0822%" y="847.50"></text></g><g><title>invoke_syscall (12 samples, 0.06%)</title><rect x="26.8370%" y="821" width="0.0577%" height="15" fill="rgb(227,94,9)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="831.50"></text></g><g><title>__arm64_sys_sendto (12 samples, 0.06%)</title><rect x="26.8370%" y="805" width="0.0577%" height="15" fill="rgb(240,34,52)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="815.50"></text></g><g><title>__sys_sendto (12 samples, 0.06%)</title><rect x="26.8370%" y="789" width="0.0577%" height="15" fill="rgb(216,45,12)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="799.50"></text></g><g><title>sock_sendmsg (12 samples, 0.06%)</title><rect x="26.8370%" y="773" width="0.0577%" height="15" fill="rgb(246,21,19)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="783.50"></text></g><g><title>inet_sendmsg (12 samples, 0.06%)</title><rect x="26.8370%" y="757" width="0.0577%" height="15" fill="rgb(213,98,42)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="767.50"></text></g><g><title>tcp_sendmsg (12 samples, 0.06%)</title><rect x="26.8370%" y="741" width="0.0577%" height="15" fill="rgb(250,136,47)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="751.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.06%)</title><rect x="26.8370%" y="725" width="0.0577%" height="15" fill="rgb(251,124,27)" fg:x="5577" fg:w="12"/><text x="27.0870%" y="735.50"></text></g><g><title>tcp_push (8 samples, 0.04%)</title><rect x="26.8563%" y="709" width="0.0385%" height="15" fill="rgb(229,180,14)" fg:x="5581" fg:w="8"/><text x="27.1063%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (7 samples, 0.03%)</title><rect x="26.8611%" y="693" width="0.0337%" height="15" fill="rgb(245,216,25)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="703.50"></text></g><g><title>tcp_write_xmit (7 samples, 0.03%)</title><rect x="26.8611%" y="677" width="0.0337%" height="15" fill="rgb(251,43,5)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="687.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 0.03%)</title><rect x="26.8611%" y="661" width="0.0337%" height="15" fill="rgb(250,128,24)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="671.50"></text></g><g><title>ip_queue_xmit (7 samples, 0.03%)</title><rect x="26.8611%" y="645" width="0.0337%" height="15" fill="rgb(217,117,27)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="655.50"></text></g><g><title>__ip_queue_xmit (7 samples, 0.03%)</title><rect x="26.8611%" y="629" width="0.0337%" height="15" fill="rgb(245,147,4)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="639.50"></text></g><g><title>ip_output (7 samples, 0.03%)</title><rect x="26.8611%" y="613" width="0.0337%" height="15" fill="rgb(242,201,35)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="623.50"></text></g><g><title>ip_finish_output (7 samples, 0.03%)</title><rect x="26.8611%" y="597" width="0.0337%" height="15" fill="rgb(218,181,1)" fg:x="5582" fg:w="7"/><text x="27.1111%" y="607.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="26.9284%" y="1109" width="0.0192%" height="15" fill="rgb(222,6,29)" fg:x="5596" fg:w="4"/><text x="27.1784%" y="1119.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.02%)</title><rect x="26.9284%" y="1093" width="0.0192%" height="15" fill="rgb(208,186,3)" fg:x="5596" fg:w="4"/><text x="27.1784%" y="1103.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialWriter&lt;W&gt; as std::io::Write&gt;::write (4 samples, 0.02%)</title><rect x="26.9284%" y="1077" width="0.0192%" height="15" fill="rgb(216,36,26)" fg:x="5596" fg:w="4"/><text x="27.1784%" y="1087.50"></text></g><g><title>rouille::Executor::execute::{{closure}} (4,918 samples, 23.67%)</title><rect x="3.2963%" y="1285" width="23.6658%" height="15" fill="rgb(248,201,23)" fg:x="685" fg:w="4918"/><text x="3.5463%" y="1295.50">rouille::Executor::execute::{{closure}}</text></g><g><title>rouille::Server&lt;F&gt;::process::{{closure}} (4,914 samples, 23.65%)</title><rect x="3.3155%" y="1269" width="23.6466%" height="15" fill="rgb(251,170,31)" fg:x="689" fg:w="4914"/><text x="3.5655%" y="1279.50">rouille::Server&lt;F&gt;::process::{{closure..</text></g><g><title>tiny_http::request::Request::respond (164 samples, 0.79%)</title><rect x="26.1729%" y="1253" width="0.7892%" height="15" fill="rgb(207,110,25)" fg:x="5439" fg:w="164"/><text x="26.4229%" y="1263.50"></text></g><g><title>tiny_http::request::Request::respond_impl (160 samples, 0.77%)</title><rect x="26.1922%" y="1237" width="0.7699%" height="15" fill="rgb(250,54,15)" fg:x="5443" fg:w="160"/><text x="26.4422%" y="1247.50"></text></g><g><title>tiny_http::response::Response&lt;R&gt;::raw_print (122 samples, 0.59%)</title><rect x="26.3751%" y="1221" width="0.5871%" height="15" fill="rgb(227,68,33)" fg:x="5481" fg:w="122"/><text x="26.6251%" y="1231.50"></text></g><g><title>tiny_http::response::write_message_header (10 samples, 0.05%)</title><rect x="26.9140%" y="1205" width="0.0481%" height="15" fill="rgb(238,34,41)" fg:x="5593" fg:w="10"/><text x="27.1640%" y="1215.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_fmt (9 samples, 0.04%)</title><rect x="26.9188%" y="1189" width="0.0433%" height="15" fill="rgb(220,11,15)" fg:x="5594" fg:w="9"/><text x="27.1688%" y="1199.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_fmt (9 samples, 0.04%)</title><rect x="26.9188%" y="1173" width="0.0433%" height="15" fill="rgb(246,111,35)" fg:x="5594" fg:w="9"/><text x="27.1688%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write_fmt (9 samples, 0.04%)</title><rect x="26.9188%" y="1157" width="0.0433%" height="15" fill="rgb(209,88,53)" fg:x="5594" fg:w="9"/><text x="27.1688%" y="1167.50"></text></g><g><title>std::io::Write::write_fmt (9 samples, 0.04%)</title><rect x="26.9188%" y="1141" width="0.0433%" height="15" fill="rgb(231,185,47)" fg:x="5594" fg:w="9"/><text x="27.1688%" y="1151.50"></text></g><g><title>core::fmt::write (8 samples, 0.04%)</title><rect x="26.9236%" y="1125" width="0.0385%" height="15" fill="rgb(233,154,1)" fg:x="5595" fg:w="8"/><text x="27.1736%" y="1135.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.01%)</title><rect x="26.9477%" y="1109" width="0.0144%" height="15" fill="rgb(225,15,46)" fg:x="5600" fg:w="3"/><text x="27.1977%" y="1119.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (3 samples, 0.01%)</title><rect x="26.9669%" y="1221" width="0.0144%" height="15" fill="rgb(211,135,41)" fg:x="5604" fg:w="3"/><text x="27.2169%" y="1231.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (3 samples, 0.01%)</title><rect x="26.9669%" y="1205" width="0.0144%" height="15" fill="rgb(208,54,0)" fg:x="5604" fg:w="3"/><text x="27.2169%" y="1215.50"></text></g><g><title>&lt;core::str::iter::SplitN&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="26.9814%" y="1189" width="0.0241%" height="15" fill="rgb(244,136,14)" fg:x="5607" fg:w="5"/><text x="27.2314%" y="1199.50"></text></g><g><title>core::str::iter::SplitNInternal&lt;P&gt;::next (5 samples, 0.02%)</title><rect x="26.9814%" y="1173" width="0.0241%" height="15" fill="rgb(241,56,14)" fg:x="5607" fg:w="5"/><text x="27.2314%" y="1183.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (4 samples, 0.02%)</title><rect x="26.9862%" y="1157" width="0.0192%" height="15" fill="rgb(205,80,24)" fg:x="5608" fg:w="4"/><text x="27.2362%" y="1167.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.01%)</title><rect x="26.9910%" y="1141" width="0.0144%" height="15" fill="rgb(220,57,4)" fg:x="5609" fg:w="3"/><text x="27.2410%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.01%)</title><rect x="26.9910%" y="1125" width="0.0144%" height="15" fill="rgb(226,193,50)" fg:x="5609" fg:w="3"/><text x="27.2410%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.02%)</title><rect x="27.0054%" y="1189" width="0.0192%" height="15" fill="rgb(231,168,22)" fg:x="5612" fg:w="4"/><text x="27.2554%" y="1199.50"></text></g><g><title>&lt;tiny_http::common::Header as core::str::traits::FromStr&gt;::from_str::{{closure}} (4 samples, 0.02%)</title><rect x="27.0054%" y="1173" width="0.0192%" height="15" fill="rgb(254,215,14)" fg:x="5612" fg:w="4"/><text x="27.2554%" y="1183.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.01%)</title><rect x="27.0102%" y="1157" width="0.0144%" height="15" fill="rgb(211,115,16)" fg:x="5613" fg:w="3"/><text x="27.2602%" y="1167.50"></text></g><g><title>&lt;tiny_http::common::HeaderField as core::str::traits::FromStr&gt;::from_str (3 samples, 0.01%)</title><rect x="27.0102%" y="1141" width="0.0144%" height="15" fill="rgb(236,210,16)" fg:x="5613" fg:w="3"/><text x="27.2602%" y="1151.50"></text></g><g><title>ascii::ascii_string::AsciiString::from_ascii (3 samples, 0.01%)</title><rect x="27.0102%" y="1125" width="0.0144%" height="15" fill="rgb(221,94,12)" fg:x="5613" fg:w="3"/><text x="27.2602%" y="1135.50"></text></g><g><title>&lt;tiny_http::common::Header as core::str::traits::FromStr&gt;::from_str (10 samples, 0.05%)</title><rect x="26.9814%" y="1205" width="0.0481%" height="15" fill="rgb(235,218,49)" fg:x="5607" fg:w="10"/><text x="27.2314%" y="1215.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialWriterBuilder&lt;W&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="27.0295%" y="1205" width="0.0241%" height="15" fill="rgb(217,114,14)" fg:x="5617" fg:w="5"/><text x="27.2795%" y="1215.50"></text></g><g><title>std::sync::mpsc::channel (5 samples, 0.02%)</title><rect x="27.0295%" y="1189" width="0.0241%" height="15" fill="rgb(216,145,22)" fg:x="5617" fg:w="5"/><text x="27.2795%" y="1199.50"></text></g><g><title>std::sync::mpmc::channel (5 samples, 0.02%)</title><rect x="27.0295%" y="1173" width="0.0241%" height="15" fill="rgb(217,112,39)" fg:x="5617" fg:w="5"/><text x="27.2795%" y="1183.50"></text></g><g><title>std::sync::mpmc::counter::new (4 samples, 0.02%)</title><rect x="27.0343%" y="1157" width="0.0192%" height="15" fill="rgb(225,85,32)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="27.0343%" y="1141" width="0.0192%" height="15" fill="rgb(245,209,47)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="27.0343%" y="1125" width="0.0192%" height="15" fill="rgb(218,220,15)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="27.0343%" y="1109" width="0.0192%" height="15" fill="rgb(222,202,31)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="27.0343%" y="1093" width="0.0192%" height="15" fill="rgb(243,203,4)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="27.0343%" y="1077" width="0.0192%" height="15" fill="rgb(237,92,17)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1087.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="27.0343%" y="1061" width="0.0192%" height="15" fill="rgb(231,119,7)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="27.0343%" y="1045" width="0.0192%" height="15" fill="rgb(237,82,41)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (4 samples, 0.02%)</title><rect x="27.0343%" y="1029" width="0.0192%" height="15" fill="rgb(226,81,48)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1039.50"></text></g><g><title>posix_memalign (4 samples, 0.02%)</title><rect x="27.0343%" y="1013" width="0.0192%" height="15" fill="rgb(234,70,51)" fg:x="5618" fg:w="4"/><text x="27.2843%" y="1023.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="27.0391%" y="997" width="0.0144%" height="15" fill="rgb(251,86,4)" fg:x="5619" fg:w="3"/><text x="27.2891%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="27.0536%" y="1205" width="0.0144%" height="15" fill="rgb(244,144,28)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="27.0536%" y="1189" width="0.0144%" height="15" fill="rgb(232,161,39)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="27.0536%" y="1173" width="0.0144%" height="15" fill="rgb(247,34,51)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="27.0536%" y="1157" width="0.0144%" height="15" fill="rgb(225,132,2)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="27.0536%" y="1141" width="0.0144%" height="15" fill="rgb(209,159,44)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="27.0536%" y="1125" width="0.0144%" height="15" fill="rgb(251,214,1)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="27.0536%" y="1109" width="0.0144%" height="15" fill="rgb(247,84,47)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1119.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="27.0536%" y="1093" width="0.0144%" height="15" fill="rgb(240,111,43)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="27.0536%" y="1077" width="0.0144%" height="15" fill="rgb(215,214,35)" fg:x="5622" fg:w="3"/><text x="27.3036%" y="1087.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (4 samples, 0.02%)</title><rect x="27.0728%" y="1205" width="0.0192%" height="15" fill="rgb(248,207,23)" fg:x="5626" fg:w="4"/><text x="27.3228%" y="1215.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (4 samples, 0.02%)</title><rect x="27.0728%" y="1189" width="0.0192%" height="15" fill="rgb(214,186,4)" fg:x="5626" fg:w="4"/><text x="27.3228%" y="1199.50"></text></g><g><title>sk_wait_data (10 samples, 0.05%)</title><rect x="27.2894%" y="693" width="0.0481%" height="15" fill="rgb(220,133,22)" fg:x="5671" fg:w="10"/><text x="27.5394%" y="703.50"></text></g><g><title>wait_woken (7 samples, 0.03%)</title><rect x="27.3038%" y="677" width="0.0337%" height="15" fill="rgb(239,134,19)" fg:x="5674" fg:w="7"/><text x="27.5538%" y="687.50"></text></g><g><title>schedule_timeout (7 samples, 0.03%)</title><rect x="27.3038%" y="661" width="0.0337%" height="15" fill="rgb(250,140,9)" fg:x="5674" fg:w="7"/><text x="27.5538%" y="671.50"></text></g><g><title>schedule (7 samples, 0.03%)</title><rect x="27.3038%" y="645" width="0.0337%" height="15" fill="rgb(225,59,14)" fg:x="5674" fg:w="7"/><text x="27.5538%" y="655.50"></text></g><g><title>__schedule (7 samples, 0.03%)</title><rect x="27.3038%" y="629" width="0.0337%" height="15" fill="rgb(214,152,51)" fg:x="5674" fg:w="7"/><text x="27.5538%" y="639.50"></text></g><g><title>arch_local_irq_enable (6 samples, 0.03%)</title><rect x="27.3086%" y="613" width="0.0289%" height="15" fill="rgb(251,227,43)" fg:x="5675" fg:w="6"/><text x="27.5586%" y="623.50"></text></g><g><title>skb_copy_datagram_iter (6 samples, 0.03%)</title><rect x="27.3375%" y="693" width="0.0289%" height="15" fill="rgb(241,96,17)" fg:x="5681" fg:w="6"/><text x="27.5875%" y="703.50"></text></g><g><title>__skb_datagram_iter (6 samples, 0.03%)</title><rect x="27.3375%" y="677" width="0.0289%" height="15" fill="rgb(234,198,43)" fg:x="5681" fg:w="6"/><text x="27.5875%" y="687.50"></text></g><g><title>simple_copy_to_iter (5 samples, 0.02%)</title><rect x="27.3423%" y="661" width="0.0241%" height="15" fill="rgb(220,108,29)" fg:x="5682" fg:w="5"/><text x="27.5923%" y="671.50"></text></g><g><title>_copy_to_iter (5 samples, 0.02%)</title><rect x="27.3423%" y="645" width="0.0241%" height="15" fill="rgb(226,163,33)" fg:x="5682" fg:w="5"/><text x="27.5923%" y="655.50"></text></g><g><title>__arch_copy_to_user (5 samples, 0.02%)</title><rect x="27.3423%" y="629" width="0.0241%" height="15" fill="rgb(205,194,45)" fg:x="5682" fg:w="5"/><text x="27.5923%" y="639.50"></text></g><g><title>tcp_cleanup_rbuf (5 samples, 0.02%)</title><rect x="27.3712%" y="693" width="0.0241%" height="15" fill="rgb(206,143,44)" fg:x="5688" fg:w="5"/><text x="27.6212%" y="703.50"></text></g><g><title>tcp_send_ack (4 samples, 0.02%)</title><rect x="27.3760%" y="677" width="0.0192%" height="15" fill="rgb(236,136,36)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="687.50"></text></g><g><title>__tcp_send_ack.part.0 (4 samples, 0.02%)</title><rect x="27.3760%" y="661" width="0.0192%" height="15" fill="rgb(249,172,42)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="671.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.02%)</title><rect x="27.3760%" y="645" width="0.0192%" height="15" fill="rgb(216,139,23)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="655.50"></text></g><g><title>ip_queue_xmit (4 samples, 0.02%)</title><rect x="27.3760%" y="629" width="0.0192%" height="15" fill="rgb(207,166,20)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="639.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.02%)</title><rect x="27.3760%" y="613" width="0.0192%" height="15" fill="rgb(210,209,22)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="623.50"></text></g><g><title>ip_output (4 samples, 0.02%)</title><rect x="27.3760%" y="597" width="0.0192%" height="15" fill="rgb(232,118,20)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="607.50"></text></g><g><title>ip_finish_output (4 samples, 0.02%)</title><rect x="27.3760%" y="581" width="0.0192%" height="15" fill="rgb(238,113,42)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="591.50"></text></g><g><title>__ip_finish_output (4 samples, 0.02%)</title><rect x="27.3760%" y="565" width="0.0192%" height="15" fill="rgb(231,42,5)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="575.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.02%)</title><rect x="27.3760%" y="549" width="0.0192%" height="15" fill="rgb(243,166,24)" fg:x="5689" fg:w="4"/><text x="27.6260%" y="559.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.01%)</title><rect x="27.3808%" y="533" width="0.0144%" height="15" fill="rgb(237,226,12)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="543.50"></text></g><g><title>do_softirq (3 samples, 0.01%)</title><rect x="27.3808%" y="517" width="0.0144%" height="15" fill="rgb(229,133,24)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="527.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="27.3808%" y="501" width="0.0144%" height="15" fill="rgb(238,33,43)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="511.50"></text></g><g><title>net_rx_action (3 samples, 0.01%)</title><rect x="27.3808%" y="485" width="0.0144%" height="15" fill="rgb(227,59,38)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="495.50"></text></g><g><title>__napi_poll (3 samples, 0.01%)</title><rect x="27.3808%" y="469" width="0.0144%" height="15" fill="rgb(230,97,0)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="479.50"></text></g><g><title>process_backlog (3 samples, 0.01%)</title><rect x="27.3808%" y="453" width="0.0144%" height="15" fill="rgb(250,173,50)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="463.50"></text></g><g><title>__netif_receive_skb (3 samples, 0.01%)</title><rect x="27.3808%" y="437" width="0.0144%" height="15" fill="rgb(240,15,50)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="447.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.01%)</title><rect x="27.3808%" y="421" width="0.0144%" height="15" fill="rgb(221,93,22)" fg:x="5690" fg:w="3"/><text x="27.6308%" y="431.50"></text></g><g><title>inet_recvmsg (34 samples, 0.16%)</title><rect x="27.2364%" y="741" width="0.1636%" height="15" fill="rgb(245,180,53)" fg:x="5660" fg:w="34"/><text x="27.4864%" y="751.50"></text></g><g><title>tcp_recvmsg (34 samples, 0.16%)</title><rect x="27.2364%" y="725" width="0.1636%" height="15" fill="rgb(231,88,51)" fg:x="5660" fg:w="34"/><text x="27.4864%" y="735.50"></text></g><g><title>tcp_recvmsg_locked (29 samples, 0.14%)</title><rect x="27.2605%" y="709" width="0.1396%" height="15" fill="rgb(240,58,21)" fg:x="5665" fg:w="29"/><text x="27.5105%" y="719.50"></text></g><g><title>security_socket_recvmsg (3 samples, 0.01%)</title><rect x="27.4000%" y="741" width="0.0144%" height="15" fill="rgb(237,21,10)" fg:x="5694" fg:w="3"/><text x="27.6500%" y="751.50"></text></g><g><title>apparmor_socket_recvmsg (3 samples, 0.01%)</title><rect x="27.4000%" y="725" width="0.0144%" height="15" fill="rgb(218,43,11)" fg:x="5694" fg:w="3"/><text x="27.6500%" y="735.50"></text></g><g><title>aa_sk_perm (3 samples, 0.01%)</title><rect x="27.4000%" y="709" width="0.0144%" height="15" fill="rgb(218,221,29)" fg:x="5694" fg:w="3"/><text x="27.6500%" y="719.50"></text></g><g><title>__sys_recvfrom (40 samples, 0.19%)</title><rect x="27.2268%" y="757" width="0.1925%" height="15" fill="rgb(214,118,42)" fg:x="5658" fg:w="40"/><text x="27.4768%" y="767.50"></text></g><g><title>__arm64_sys_recvfrom (41 samples, 0.20%)</title><rect x="27.2268%" y="773" width="0.1973%" height="15" fill="rgb(251,200,26)" fg:x="5658" fg:w="41"/><text x="27.4768%" y="783.50"></text></g><g><title>do_el0_svc (48 samples, 0.23%)</title><rect x="27.2075%" y="821" width="0.2310%" height="15" fill="rgb(237,101,39)" fg:x="5654" fg:w="48"/><text x="27.4575%" y="831.50"></text></g><g><title>el0_svc_common.constprop.0 (48 samples, 0.23%)</title><rect x="27.2075%" y="805" width="0.2310%" height="15" fill="rgb(251,117,11)" fg:x="5654" fg:w="48"/><text x="27.4575%" y="815.50"></text></g><g><title>invoke_syscall (44 samples, 0.21%)</title><rect x="27.2268%" y="789" width="0.2117%" height="15" fill="rgb(216,223,23)" fg:x="5658" fg:w="44"/><text x="27.4768%" y="799.50"></text></g><g><title>recv (59 samples, 0.28%)</title><rect x="27.1739%" y="885" width="0.2839%" height="15" fill="rgb(251,54,12)" fg:x="5647" fg:w="59"/><text x="27.4239%" y="895.50"></text></g><g><title>el0t_64_sync (52 samples, 0.25%)</title><rect x="27.2075%" y="869" width="0.2502%" height="15" fill="rgb(254,176,54)" fg:x="5654" fg:w="52"/><text x="27.4575%" y="879.50"></text></g><g><title>el0t_64_sync_handler (52 samples, 0.25%)</title><rect x="27.2075%" y="853" width="0.2502%" height="15" fill="rgb(210,32,8)" fg:x="5654" fg:w="52"/><text x="27.4575%" y="863.50"></text></g><g><title>el0_svc (52 samples, 0.25%)</title><rect x="27.2075%" y="837" width="0.2502%" height="15" fill="rgb(235,52,38)" fg:x="5654" fg:w="52"/><text x="27.4575%" y="847.50"></text></g><g><title>do_notify_resume (4 samples, 0.02%)</title><rect x="27.4385%" y="821" width="0.0192%" height="15" fill="rgb(231,4,44)" fg:x="5702" fg:w="4"/><text x="27.6885%" y="831.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (62 samples, 0.30%)</title><rect x="27.1690%" y="1093" width="0.2983%" height="15" fill="rgb(249,2,32)" fg:x="5646" fg:w="62"/><text x="27.4190%" y="1103.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (62 samples, 0.30%)</title><rect x="27.1690%" y="1077" width="0.2983%" height="15" fill="rgb(224,65,26)" fg:x="5646" fg:w="62"/><text x="27.4190%" y="1087.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (61 samples, 0.29%)</title><rect x="27.1739%" y="1061" width="0.2935%" height="15" fill="rgb(250,73,40)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="1071.50"></text></g><g><title>std::io::Read::read_buf (61 samples, 0.29%)</title><rect x="27.1739%" y="1045" width="0.2935%" height="15" fill="rgb(253,177,16)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="1055.50"></text></g><g><title>std::io::default_read_buf (61 samples, 0.29%)</title><rect x="27.1739%" y="1029" width="0.2935%" height="15" fill="rgb(217,32,34)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="1039.50"></text></g><g><title>std::io::Read::read_buf::{{closure}} (61 samples, 0.29%)</title><rect x="27.1739%" y="1013" width="0.2935%" height="15" fill="rgb(212,7,10)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="1023.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream as std::io::Read&gt;::read (61 samples, 0.29%)</title><rect x="27.1739%" y="997" width="0.2935%" height="15" fill="rgb(245,89,8)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="1007.50"></text></g><g><title>&lt;tiny_http::util::refined_tcp_stream::Stream as std::io::Read&gt;::read (61 samples, 0.29%)</title><rect x="27.1739%" y="981" width="0.2935%" height="15" fill="rgb(237,16,53)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="991.50"></text></g><g><title>&lt;tiny_http::connection::Connection as std::io::Read&gt;::read (61 samples, 0.29%)</title><rect x="27.1739%" y="965" width="0.2935%" height="15" fill="rgb(250,204,30)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="975.50"></text></g><g><title>std::net::udp::UdpSocket::recv (61 samples, 0.29%)</title><rect x="27.1739%" y="949" width="0.2935%" height="15" fill="rgb(208,77,27)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="959.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (61 samples, 0.29%)</title><rect x="27.1739%" y="933" width="0.2935%" height="15" fill="rgb(250,204,28)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="943.50"></text></g><g><title>std::sys::unix::net::Socket::read (61 samples, 0.29%)</title><rect x="27.1739%" y="917" width="0.2935%" height="15" fill="rgb(244,63,21)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (61 samples, 0.29%)</title><rect x="27.1739%" y="901" width="0.2935%" height="15" fill="rgb(236,85,44)" fg:x="5647" fg:w="61"/><text x="27.4239%" y="911.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (67 samples, 0.32%)</title><rect x="27.1594%" y="1109" width="0.3224%" height="15" fill="rgb(215,98,4)" fg:x="5644" fg:w="67"/><text x="27.4094%" y="1119.50"></text></g><g><title>free (7 samples, 0.03%)</title><rect x="27.5011%" y="965" width="0.0337%" height="15" fill="rgb(235,38,11)" fg:x="5715" fg:w="7"/><text x="27.7511%" y="975.50"></text></g><g><title>core::mem::drop (10 samples, 0.05%)</title><rect x="27.4915%" y="1029" width="0.0481%" height="15" fill="rgb(254,186,25)" fg:x="5713" fg:w="10"/><text x="27.7415%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sync::mpmc::counter::Counter&lt;std::sync::mpmc::list::Channel&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="27.4915%" y="1013" width="0.0481%" height="15" fill="rgb(225,55,31)" fg:x="5713" fg:w="10"/><text x="27.7415%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::counter::Counter&lt;std::sync::mpmc::list::Channel&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="27.4915%" y="997" width="0.0481%" height="15" fill="rgb(211,15,21)" fg:x="5713" fg:w="10"/><text x="27.7415%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::list::Channel&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="27.4915%" y="981" width="0.0481%" height="15" fill="rgb(215,187,41)" fg:x="5713" fg:w="10"/><text x="27.7415%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tiny_http::util::sequential::SequentialReaderInner&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt; (15 samples, 0.07%)</title><rect x="27.4818%" y="1109" width="0.0722%" height="15" fill="rgb(248,69,32)" fg:x="5711" fg:w="15"/><text x="27.7318%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpsc::Receiver&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt; (15 samples, 0.07%)</title><rect x="27.4818%" y="1093" width="0.0722%" height="15" fill="rgb(252,102,52)" fg:x="5711" fg:w="15"/><text x="27.7318%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpmc::Receiver&lt;std::io::buffered::bufreader::BufReader&lt;tiny_http::util::refined_tcp_stream::RefinedTcpStream&gt;&gt;&gt; (15 samples, 0.07%)</title><rect x="27.4818%" y="1077" width="0.0722%" height="15" fill="rgb(253,140,32)" fg:x="5711" fg:w="15"/><text x="27.7318%" y="1087.50"></text></g><g><title>&lt;std::sync::mpmc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.07%)</title><rect x="27.4818%" y="1061" width="0.0722%" height="15" fill="rgb(216,56,42)" fg:x="5711" fg:w="15"/><text x="27.7318%" y="1071.50"></text></g><g><title>std::sync::mpmc::counter::Receiver&lt;C&gt;::release (14 samples, 0.07%)</title><rect x="27.4866%" y="1045" width="0.0674%" height="15" fill="rgb(216,184,14)" fg:x="5712" fg:w="14"/><text x="27.7366%" y="1055.50"></text></g><g><title>arch_local_irq_enable (3 samples, 0.01%)</title><rect x="27.5973%" y="709" width="0.0144%" height="15" fill="rgb(237,187,27)" fg:x="5735" fg:w="3"/><text x="27.8473%" y="719.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.03%)</title><rect x="27.5877%" y="757" width="0.0289%" height="15" fill="rgb(219,65,3)" fg:x="5733" fg:w="6"/><text x="27.8377%" y="767.50"></text></g><g><title>schedule (4 samples, 0.02%)</title><rect x="27.5973%" y="741" width="0.0192%" height="15" fill="rgb(245,83,25)" fg:x="5735" fg:w="4"/><text x="27.8473%" y="751.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="27.5973%" y="725" width="0.0192%" height="15" fill="rgb(214,205,45)" fg:x="5735" fg:w="4"/><text x="27.8473%" y="735.50"></text></g><g><title>do_futex (8 samples, 0.04%)</title><rect x="27.5877%" y="789" width="0.0385%" height="15" fill="rgb(241,20,18)" fg:x="5733" fg:w="8"/><text x="27.8377%" y="799.50"></text></g><g><title>futex_wait (8 samples, 0.04%)</title><rect x="27.5877%" y="773" width="0.0385%" height="15" fill="rgb(232,163,23)" fg:x="5733" fg:w="8"/><text x="27.8377%" y="783.50"></text></g><g><title>std::sync::mpmc::context::Context::with (17 samples, 0.08%)</title><rect x="27.5540%" y="1061" width="0.0818%" height="15" fill="rgb(214,5,46)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.08%)</title><rect x="27.5540%" y="1045" width="0.0818%" height="15" fill="rgb(229,78,17)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="1055.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (17 samples, 0.08%)</title><rect x="27.5540%" y="1029" width="0.0818%" height="15" fill="rgb(248,89,10)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="1039.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (17 samples, 0.08%)</title><rect x="27.5540%" y="1013" width="0.0818%" height="15" fill="rgb(248,54,15)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="1023.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv::{{closure}} (17 samples, 0.08%)</title><rect x="27.5540%" y="997" width="0.0818%" height="15" fill="rgb(223,116,6)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="1007.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (17 samples, 0.08%)</title><rect x="27.5540%" y="981" width="0.0818%" height="15" fill="rgb(205,125,38)" fg:x="5726" fg:w="17"/><text x="27.8040%" y="991.50"></text></g><g><title>std::thread::park (15 samples, 0.07%)</title><rect x="27.5636%" y="965" width="0.0722%" height="15" fill="rgb(251,78,38)" fg:x="5728" fg:w="15"/><text x="27.8136%" y="975.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (15 samples, 0.07%)</title><rect x="27.5636%" y="949" width="0.0722%" height="15" fill="rgb(253,78,28)" fg:x="5728" fg:w="15"/><text x="27.8136%" y="959.50"></text></g><g><title>std::sys::unix::futex::futex_wait (14 samples, 0.07%)</title><rect x="27.5685%" y="933" width="0.0674%" height="15" fill="rgb(209,120,3)" fg:x="5729" fg:w="14"/><text x="27.8185%" y="943.50"></text></g><g><title>syscall (12 samples, 0.06%)</title><rect x="27.5781%" y="917" width="0.0577%" height="15" fill="rgb(238,229,9)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="927.50"></text></g><g><title>el0t_64_sync (12 samples, 0.06%)</title><rect x="27.5781%" y="901" width="0.0577%" height="15" fill="rgb(253,159,18)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="911.50"></text></g><g><title>el0t_64_sync_handler (12 samples, 0.06%)</title><rect x="27.5781%" y="885" width="0.0577%" height="15" fill="rgb(244,42,34)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="895.50"></text></g><g><title>el0_svc (12 samples, 0.06%)</title><rect x="27.5781%" y="869" width="0.0577%" height="15" fill="rgb(224,8,7)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="879.50"></text></g><g><title>do_el0_svc (12 samples, 0.06%)</title><rect x="27.5781%" y="853" width="0.0577%" height="15" fill="rgb(210,201,45)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="863.50"></text></g><g><title>el0_svc_common.constprop.0 (12 samples, 0.06%)</title><rect x="27.5781%" y="837" width="0.0577%" height="15" fill="rgb(252,185,21)" fg:x="5731" fg:w="12"/><text x="27.8281%" y="847.50"></text></g><g><title>invoke_syscall (11 samples, 0.05%)</title><rect x="27.5829%" y="821" width="0.0529%" height="15" fill="rgb(223,131,1)" fg:x="5732" fg:w="11"/><text x="27.8329%" y="831.50"></text></g><g><title>__arm64_sys_futex (10 samples, 0.05%)</title><rect x="27.5877%" y="805" width="0.0481%" height="15" fill="rgb(245,141,16)" fg:x="5733" fg:w="10"/><text x="27.8377%" y="815.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.53%)</title><rect x="27.1113%" y="1189" width="0.5293%" height="15" fill="rgb(229,55,45)" fg:x="5634" fg:w="110"/><text x="27.3613%" y="1199.50"></text></g><g><title>&lt;R as std::io::SpecReadByte&gt;::spec_read_byte (110 samples, 0.53%)</title><rect x="27.1113%" y="1173" width="0.5293%" height="15" fill="rgb(208,92,15)" fg:x="5634" fg:w="110"/><text x="27.3613%" y="1183.50"></text></g><g><title>std::io::inlined_slow_read_byte (110 samples, 0.53%)</title><rect x="27.1113%" y="1157" width="0.5293%" height="15" fill="rgb(234,185,47)" fg:x="5634" fg:w="110"/><text x="27.3613%" y="1167.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (106 samples, 0.51%)</title><rect x="27.1306%" y="1141" width="0.5101%" height="15" fill="rgb(253,104,50)" fg:x="5638" fg:w="106"/><text x="27.3806%" y="1151.50"></text></g><g><title>&lt;tiny_http::util::sequential::SequentialReader&lt;R&gt; as std::io::Read&gt;::read (106 samples, 0.51%)</title><rect x="27.1306%" y="1125" width="0.5101%" height="15" fill="rgb(205,70,7)" fg:x="5638" fg:w="106"/><text x="27.3806%" y="1135.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (18 samples, 0.09%)</title><rect x="27.5540%" y="1109" width="0.0866%" height="15" fill="rgb(240,178,43)" fg:x="5726" fg:w="18"/><text x="27.8040%" y="1119.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (18 samples, 0.09%)</title><rect x="27.5540%" y="1093" width="0.0866%" height="15" fill="rgb(214,112,2)" fg:x="5726" fg:w="18"/><text x="27.8040%" y="1103.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::recv (18 samples, 0.09%)</title><rect x="27.5540%" y="1077" width="0.0866%" height="15" fill="rgb(206,46,17)" fg:x="5726" fg:w="18"/><text x="27.8040%" y="1087.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="27.6599%" y="1077" width="0.0144%" height="15" fill="rgb(225,220,16)" fg:x="5748" fg:w="3"/><text x="27.9099%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="27.6599%" y="1125" width="0.0192%" height="15" fill="rgb(238,65,40)" fg:x="5748" fg:w="4"/><text x="27.9099%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="27.6599%" y="1109" width="0.0192%" height="15" fill="rgb(230,151,21)" fg:x="5748" fg:w="4"/><text x="27.9099%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="27.6599%" y="1093" width="0.0192%" height="15" fill="rgb(218,58,49)" fg:x="5748" fg:w="4"/><text x="27.9099%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.05%)</title><rect x="27.6406%" y="1189" width="0.0529%" height="15" fill="rgb(219,179,14)" fg:x="5744" fg:w="11"/><text x="27.8906%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.05%)</title><rect x="27.6454%" y="1173" width="0.0481%" height="15" fill="rgb(223,72,1)" fg:x="5745" fg:w="10"/><text x="27.8954%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.04%)</title><rect x="27.6503%" y="1157" width="0.0433%" height="15" fill="rgb(238,126,10)" fg:x="5746" fg:w="9"/><text x="27.9003%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="27.6599%" y="1141" width="0.0337%" height="15" fill="rgb(224,206,38)" fg:x="5748" fg:w="7"/><text x="27.9099%" y="1151.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="27.6791%" y="1125" width="0.0144%" height="15" fill="rgb(212,201,54)" fg:x="5752" fg:w="3"/><text x="27.9291%" y="1135.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="27.6791%" y="1109" width="0.0144%" height="15" fill="rgb(218,154,48)" fg:x="5752" fg:w="3"/><text x="27.9291%" y="1119.50"></text></g><g><title>tiny_http::client::ClientConnection::read_next_line (124 samples, 0.60%)</title><rect x="27.1017%" y="1205" width="0.5967%" height="15" fill="rgb(232,93,24)" fg:x="5632" fg:w="124"/><text x="27.3517%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.01%)</title><rect x="27.7032%" y="1189" width="0.0144%" height="15" fill="rgb(245,30,21)" fg:x="5757" fg:w="3"/><text x="27.9532%" y="1199.50"></text></g><g><title>tiny_http::client::parse_request_line::{{closure}} (3 samples, 0.01%)</title><rect x="27.7032%" y="1173" width="0.0144%" height="15" fill="rgb(242,148,29)" fg:x="5757" fg:w="3"/><text x="27.9532%" y="1183.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.01%)</title><rect x="27.7032%" y="1157" width="0.0144%" height="15" fill="rgb(244,153,54)" fg:x="5757" fg:w="3"/><text x="27.9532%" y="1167.50"></text></g><g><title>&lt;tiny_http::common::Method as core::str::traits::FromStr&gt;::from_str (3 samples, 0.01%)</title><rect x="27.7032%" y="1141" width="0.0144%" height="15" fill="rgb(252,87,22)" fg:x="5757" fg:w="3"/><text x="27.9532%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="27.7176%" y="1061" width="0.0192%" height="15" fill="rgb(210,51,29)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="27.7176%" y="1045" width="0.0192%" height="15" fill="rgb(242,136,47)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="27.7176%" y="1029" width="0.0192%" height="15" fill="rgb(238,68,4)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="27.7176%" y="1013" width="0.0192%" height="15" fill="rgb(242,161,30)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="27.7176%" y="997" width="0.0192%" height="15" fill="rgb(218,58,44)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="27.7176%" y="981" width="0.0192%" height="15" fill="rgb(252,125,32)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="991.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="27.7176%" y="965" width="0.0192%" height="15" fill="rgb(219,178,0)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="975.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="27.7176%" y="949" width="0.0192%" height="15" fill="rgb(213,152,7)" fg:x="5760" fg:w="4"/><text x="27.9676%" y="959.50"></text></g><g><title>tiny_http::client::parse_request_line (9 samples, 0.04%)</title><rect x="27.6984%" y="1205" width="0.0433%" height="15" fill="rgb(249,109,34)" fg:x="5756" fg:w="9"/><text x="27.9484%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.02%)</title><rect x="27.7176%" y="1189" width="0.0241%" height="15" fill="rgb(232,96,21)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="27.7176%" y="1173" width="0.0241%" height="15" fill="rgb(228,27,39)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.02%)</title><rect x="27.7176%" y="1157" width="0.0241%" height="15" fill="rgb(211,182,52)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.02%)</title><rect x="27.7176%" y="1141" width="0.0241%" height="15" fill="rgb(234,178,38)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.02%)</title><rect x="27.7176%" y="1125" width="0.0241%" height="15" fill="rgb(221,111,3)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="27.7176%" y="1109" width="0.0241%" height="15" fill="rgb(228,175,21)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="27.7176%" y="1093" width="0.0241%" height="15" fill="rgb(228,174,43)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="27.7176%" y="1077" width="0.0241%" height="15" fill="rgb(211,191,0)" fg:x="5760" fg:w="5"/><text x="27.9676%" y="1087.50"></text></g><g><title>&lt;tiny_http::client::ClientConnection as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 0.85%)</title><rect x="26.9669%" y="1237" width="0.8469%" height="15" fill="rgb(253,117,3)" fg:x="5604" fg:w="176"/><text x="27.2169%" y="1247.50"></text></g><g><title>tiny_http::client::ClientConnection::read (173 samples, 0.83%)</title><rect x="26.9814%" y="1221" width="0.8325%" height="15" fill="rgb(241,127,19)" fg:x="5607" fg:w="173"/><text x="27.2314%" y="1231.50"></text></g><g><title>tiny_http::request::new_request (15 samples, 0.07%)</title><rect x="27.7417%" y="1205" width="0.0722%" height="15" fill="rgb(218,103,12)" fg:x="5765" fg:w="15"/><text x="27.9917%" y="1215.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (4 samples, 0.02%)</title><rect x="27.7946%" y="1189" width="0.0192%" height="15" fill="rgb(236,214,43)" fg:x="5776" fg:w="4"/><text x="28.0446%" y="1199.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (4 samples, 0.02%)</title><rect x="27.7946%" y="1173" width="0.0192%" height="15" fill="rgb(244,144,19)" fg:x="5776" fg:w="4"/><text x="28.0446%" y="1183.50"></text></g><g><title>futex_wake (7 samples, 0.03%)</title><rect x="27.8524%" y="1077" width="0.0337%" height="15" fill="rgb(246,188,10)" fg:x="5788" fg:w="7"/><text x="28.1024%" y="1087.50"></text></g><g><title>wake_up_q (3 samples, 0.01%)</title><rect x="27.8716%" y="1061" width="0.0144%" height="15" fill="rgb(212,193,33)" fg:x="5792" fg:w="3"/><text x="28.1216%" y="1071.50"></text></g><g><title>arch_local_irq_restore (3 samples, 0.01%)</title><rect x="27.8716%" y="1045" width="0.0144%" height="15" fill="rgb(241,51,29)" fg:x="5792" fg:w="3"/><text x="28.1216%" y="1055.50"></text></g><g><title>do_futex (10 samples, 0.05%)</title><rect x="27.8427%" y="1093" width="0.0481%" height="15" fill="rgb(211,58,19)" fg:x="5786" fg:w="10"/><text x="28.0927%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (194 samples, 0.93%)</title><rect x="26.9621%" y="1269" width="0.9335%" height="15" fill="rgb(229,111,26)" fg:x="5603" fg:w="194"/><text x="27.2121%" y="1279.50"></text></g><g><title>tiny_http::Server::from_listener::{{closure}}::{{closure}} (194 samples, 0.93%)</title><rect x="26.9621%" y="1253" width="0.9335%" height="15" fill="rgb(213,115,40)" fg:x="5603" fg:w="194"/><text x="27.2121%" y="1263.50"></text></g><g><title>tiny_http::util::messages_queue::MessagesQueue&lt;T&gt;::push (17 samples, 0.08%)</title><rect x="27.8139%" y="1237" width="0.0818%" height="15" fill="rgb(209,56,44)" fg:x="5780" fg:w="17"/><text x="28.0639%" y="1247.50"></text></g><g><title>syscall (15 samples, 0.07%)</title><rect x="27.8235%" y="1221" width="0.0722%" height="15" fill="rgb(230,108,32)" fg:x="5782" fg:w="15"/><text x="28.0735%" y="1231.50"></text></g><g><title>el0t_64_sync (14 samples, 0.07%)</title><rect x="27.8283%" y="1205" width="0.0674%" height="15" fill="rgb(216,165,31)" fg:x="5783" fg:w="14"/><text x="28.0783%" y="1215.50"></text></g><g><title>el0t_64_sync_handler (14 samples, 0.07%)</title><rect x="27.8283%" y="1189" width="0.0674%" height="15" fill="rgb(218,122,21)" fg:x="5783" fg:w="14"/><text x="28.0783%" y="1199.50"></text></g><g><title>el0_svc (14 samples, 0.07%)</title><rect x="27.8283%" y="1173" width="0.0674%" height="15" fill="rgb(223,224,47)" fg:x="5783" fg:w="14"/><text x="28.0783%" y="1183.50"></text></g><g><title>do_el0_svc (14 samples, 0.07%)</title><rect x="27.8283%" y="1157" width="0.0674%" height="15" fill="rgb(238,102,44)" fg:x="5783" fg:w="14"/><text x="28.0783%" y="1167.50"></text></g><g><title>el0_svc_common.constprop.0 (14 samples, 0.07%)</title><rect x="27.8283%" y="1141" width="0.0674%" height="15" fill="rgb(236,46,40)" fg:x="5783" fg:w="14"/><text x="28.0783%" y="1151.50"></text></g><g><title>invoke_syscall (11 samples, 0.05%)</title><rect x="27.8427%" y="1125" width="0.0529%" height="15" fill="rgb(247,202,50)" fg:x="5786" fg:w="11"/><text x="28.0927%" y="1135.50"></text></g><g><title>__arm64_sys_futex (11 samples, 0.05%)</title><rect x="27.8427%" y="1109" width="0.0529%" height="15" fill="rgb(209,99,20)" fg:x="5786" fg:w="11"/><text x="28.0927%" y="1119.50"></text></g><g><title>arch_local_irq_enable (12 samples, 0.06%)</title><rect x="27.9005%" y="997" width="0.0577%" height="15" fill="rgb(252,27,34)" fg:x="5798" fg:w="12"/><text x="28.1505%" y="1007.50"></text></g><g><title>futex_wait (14 samples, 0.07%)</title><rect x="27.8957%" y="1061" width="0.0674%" height="15" fill="rgb(215,206,23)" fg:x="5797" fg:w="14"/><text x="28.1457%" y="1071.50"></text></g><g><title>futex_wait_queue_me (14 samples, 0.07%)</title><rect x="27.8957%" y="1045" width="0.0674%" height="15" fill="rgb(212,135,36)" fg:x="5797" fg:w="14"/><text x="28.1457%" y="1055.50"></text></g><g><title>schedule (14 samples, 0.07%)</title><rect x="27.8957%" y="1029" width="0.0674%" height="15" fill="rgb(240,189,1)" fg:x="5797" fg:w="14"/><text x="28.1457%" y="1039.50"></text></g><g><title>__schedule (14 samples, 0.07%)</title><rect x="27.8957%" y="1013" width="0.0674%" height="15" fill="rgb(242,56,20)" fg:x="5797" fg:w="14"/><text x="28.1457%" y="1023.50"></text></g><g><title>do_el0_svc (15 samples, 0.07%)</title><rect x="27.8957%" y="1141" width="0.0722%" height="15" fill="rgb(247,132,33)" fg:x="5797" fg:w="15"/><text x="28.1457%" y="1151.50"></text></g><g><title>el0_svc_common.constprop.0 (15 samples, 0.07%)</title><rect x="27.8957%" y="1125" width="0.0722%" height="15" fill="rgb(208,149,11)" fg:x="5797" fg:w="15"/><text x="28.1457%" y="1135.50"></text></g><g><title>invoke_syscall (15 samples, 0.07%)</title><rect x="27.8957%" y="1109" width="0.0722%" height="15" fill="rgb(211,33,11)" fg:x="5797" fg:w="15"/><text x="28.1457%" y="1119.50"></text></g><g><title>__arm64_sys_futex (15 samples, 0.07%)</title><rect x="27.8957%" y="1093" width="0.0722%" height="15" fill="rgb(221,29,38)" fg:x="5797" fg:w="15"/><text x="28.1457%" y="1103.50"></text></g><g><title>do_futex (15 samples, 0.07%)</title><rect x="27.8957%" y="1077" width="0.0722%" height="15" fill="rgb(206,182,49)" fg:x="5797" fg:w="15"/><text x="28.1457%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1381" width="24.7101%" height="15" fill="rgb(216,140,1)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1391.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1365" width="24.7101%" height="15" fill="rgb(232,57,40)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1375.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1349" width="24.7101%" height="15" fill="rgb(224,186,18)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1359.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1333" width="24.7101%" height="15" fill="rgb(215,121,11)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1343.50">&lt;core::panic::unwind_safe::AssertUnwind..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1317" width="24.7101%" height="15" fill="rgb(245,147,10)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1327.50">std::thread::Builder::spawn_unchecked_:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,135 samples, 24.71%)</title><rect x="3.2674%" y="1301" width="24.7101%" height="15" fill="rgb(238,153,13)" fg:x="679" fg:w="5135"/><text x="3.5174%" y="1311.50">std::sys_common::backtrace::__rust_begi..</text></g><g><title>tiny_http::util::task_pool::TaskPool::add_thread::{{closure}} (211 samples, 1.02%)</title><rect x="26.9621%" y="1285" width="1.0154%" height="15" fill="rgb(233,108,0)" fg:x="5603" fg:w="211"/><text x="27.2121%" y="1295.50"></text></g><g><title>std::sync::condvar::Condvar::wait (17 samples, 0.08%)</title><rect x="27.8957%" y="1269" width="0.0818%" height="15" fill="rgb(212,157,17)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1279.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (17 samples, 0.08%)</title><rect x="27.8957%" y="1253" width="0.0818%" height="15" fill="rgb(225,213,38)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1263.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (17 samples, 0.08%)</title><rect x="27.8957%" y="1237" width="0.0818%" height="15" fill="rgb(248,16,11)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1247.50"></text></g><g><title>std::sys::unix::futex::futex_wait (17 samples, 0.08%)</title><rect x="27.8957%" y="1221" width="0.0818%" height="15" fill="rgb(241,33,4)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1231.50"></text></g><g><title>syscall (17 samples, 0.08%)</title><rect x="27.8957%" y="1205" width="0.0818%" height="15" fill="rgb(222,26,43)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1215.50"></text></g><g><title>el0t_64_sync (17 samples, 0.08%)</title><rect x="27.8957%" y="1189" width="0.0818%" height="15" fill="rgb(243,29,36)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1199.50"></text></g><g><title>el0t_64_sync_handler (17 samples, 0.08%)</title><rect x="27.8957%" y="1173" width="0.0818%" height="15" fill="rgb(241,9,27)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1183.50"></text></g><g><title>el0_svc (17 samples, 0.08%)</title><rect x="27.8957%" y="1157" width="0.0818%" height="15" fill="rgb(205,117,26)" fg:x="5797" fg:w="17"/><text x="28.1457%" y="1167.50"></text></g><g><title>pthread_attr_destroy (5 samples, 0.02%)</title><rect x="27.9775%" y="1365" width="0.0241%" height="15" fill="rgb(209,80,39)" fg:x="5814" fg:w="5"/><text x="28.2275%" y="1375.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="27.9775%" y="1349" width="0.0241%" height="15" fill="rgb(239,155,6)" fg:x="5814" fg:w="5"/><text x="28.2275%" y="1359.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="27.9775%" y="1333" width="0.0241%" height="15" fill="rgb(212,104,12)" fg:x="5814" fg:w="5"/><text x="28.2275%" y="1343.50"></text></g><g><title>pthread_attr_getguardsize@plt (3 samples, 0.01%)</title><rect x="28.0015%" y="1365" width="0.0144%" height="15" fill="rgb(234,204,3)" fg:x="5819" fg:w="3"/><text x="28.2515%" y="1375.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="28.0400%" y="1349" width="0.0241%" height="15" fill="rgb(251,218,7)" fg:x="5827" fg:w="5"/><text x="28.2900%" y="1359.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="28.0400%" y="1333" width="0.0241%" height="15" fill="rgb(221,81,32)" fg:x="5827" fg:w="5"/><text x="28.2900%" y="1343.50"></text></g><g><title>malloc (94 samples, 0.45%)</title><rect x="28.0641%" y="1349" width="0.4523%" height="15" fill="rgb(214,152,26)" fg:x="5832" fg:w="94"/><text x="28.3141%" y="1359.50"></text></g><g><title>[libc.so.6] (94 samples, 0.45%)</title><rect x="28.0641%" y="1333" width="0.4523%" height="15" fill="rgb(223,22,3)" fg:x="5832" fg:w="94"/><text x="28.3141%" y="1343.50"></text></g><g><title>[libc.so.6] (62 samples, 0.30%)</title><rect x="28.2181%" y="1317" width="0.2983%" height="15" fill="rgb(207,174,7)" fg:x="5864" fg:w="62"/><text x="28.4681%" y="1327.50"></text></g><g><title>pthread_attr_init (3 samples, 0.01%)</title><rect x="28.5164%" y="1349" width="0.0144%" height="15" fill="rgb(224,19,52)" fg:x="5926" fg:w="3"/><text x="28.7664%" y="1359.50"></text></g><g><title>__libc_calloc (24 samples, 0.12%)</title><rect x="28.5309%" y="1317" width="0.1155%" height="15" fill="rgb(228,24,14)" fg:x="5929" fg:w="24"/><text x="28.7809%" y="1327.50"></text></g><g><title>[libc.so.6] (24 samples, 0.12%)</title><rect x="28.5309%" y="1301" width="0.1155%" height="15" fill="rgb(230,153,43)" fg:x="5929" fg:w="24"/><text x="28.7809%" y="1311.50"></text></g><g><title>pthread_attr_setaffinity_np (25 samples, 0.12%)</title><rect x="28.5309%" y="1349" width="0.1203%" height="15" fill="rgb(231,106,12)" fg:x="5929" fg:w="25"/><text x="28.7809%" y="1359.50"></text></g><g><title>[libc.so.6] (25 samples, 0.12%)</title><rect x="28.5309%" y="1333" width="0.1203%" height="15" fill="rgb(215,92,2)" fg:x="5929" fg:w="25"/><text x="28.7809%" y="1343.50"></text></g><g><title>__arm64_sys_sched_getaffinity (3 samples, 0.01%)</title><rect x="28.6704%" y="1253" width="0.0144%" height="15" fill="rgb(249,143,25)" fg:x="5958" fg:w="3"/><text x="28.9204%" y="1263.50"></text></g><g><title>find_task_by_vpid (22 samples, 0.11%)</title><rect x="28.7282%" y="1205" width="0.1059%" height="15" fill="rgb(252,7,35)" fg:x="5970" fg:w="22"/><text x="28.9782%" y="1215.50"></text></g><g><title>idr_find (21 samples, 0.10%)</title><rect x="28.7330%" y="1189" width="0.1011%" height="15" fill="rgb(216,69,40)" fg:x="5971" fg:w="21"/><text x="28.9830%" y="1199.50"></text></g><g><title>radix_tree_lookup (19 samples, 0.09%)</title><rect x="28.7426%" y="1173" width="0.0914%" height="15" fill="rgb(240,36,33)" fg:x="5973" fg:w="19"/><text x="28.9926%" y="1183.50"></text></g><g><title>__radix_tree_lookup (19 samples, 0.09%)</title><rect x="28.7426%" y="1157" width="0.0914%" height="15" fill="rgb(231,128,14)" fg:x="5973" fg:w="19"/><text x="28.9926%" y="1167.50"></text></g><g><title>__arm64_sys_sched_getaffinity (29 samples, 0.14%)</title><rect x="28.7041%" y="1237" width="0.1396%" height="15" fill="rgb(245,143,14)" fg:x="5965" fg:w="29"/><text x="28.9541%" y="1247.50"></text></g><g><title>sched_getaffinity (25 samples, 0.12%)</title><rect x="28.7234%" y="1221" width="0.1203%" height="15" fill="rgb(222,130,28)" fg:x="5969" fg:w="25"/><text x="28.9734%" y="1231.50"></text></g><g><title>pthread_getaffinity_np (42 samples, 0.20%)</title><rect x="28.6512%" y="1349" width="0.2021%" height="15" fill="rgb(212,10,48)" fg:x="5954" fg:w="42"/><text x="28.9012%" y="1359.50"></text></g><g><title>el0t_64_sync (41 samples, 0.20%)</title><rect x="28.6560%" y="1333" width="0.1973%" height="15" fill="rgb(254,118,45)" fg:x="5955" fg:w="41"/><text x="28.9060%" y="1343.50"></text></g><g><title>el0t_64_sync_handler (41 samples, 0.20%)</title><rect x="28.6560%" y="1317" width="0.1973%" height="15" fill="rgb(228,6,45)" fg:x="5955" fg:w="41"/><text x="28.9060%" y="1327.50"></text></g><g><title>el0_svc (41 samples, 0.20%)</title><rect x="28.6560%" y="1301" width="0.1973%" height="15" fill="rgb(241,18,35)" fg:x="5955" fg:w="41"/><text x="28.9060%" y="1311.50"></text></g><g><title>do_el0_svc (41 samples, 0.20%)</title><rect x="28.6560%" y="1285" width="0.1973%" height="15" fill="rgb(227,214,53)" fg:x="5955" fg:w="41"/><text x="28.9060%" y="1295.50"></text></g><g><title>el0_svc_common.constprop.0 (41 samples, 0.20%)</title><rect x="28.6560%" y="1269" width="0.1973%" height="15" fill="rgb(224,107,51)" fg:x="5955" fg:w="41"/><text x="28.9060%" y="1279.50"></text></g><g><title>invoke_syscall (35 samples, 0.17%)</title><rect x="28.6849%" y="1253" width="0.1684%" height="15" fill="rgb(248,60,28)" fg:x="5961" fg:w="35"/><text x="28.9349%" y="1263.50"></text></g><g><title>realloc (5 samples, 0.02%)</title><rect x="28.8533%" y="1349" width="0.0241%" height="15" fill="rgb(249,101,23)" fg:x="5996" fg:w="5"/><text x="29.1033%" y="1359.50"></text></g><g><title>pthread_getattr_np (184 samples, 0.89%)</title><rect x="28.0208%" y="1365" width="0.8854%" height="15" fill="rgb(228,51,19)" fg:x="5823" fg:w="184"/><text x="28.2708%" y="1375.50"></text></g><g><title>realloc@plt (6 samples, 0.03%)</title><rect x="28.8773%" y="1349" width="0.0289%" height="15" fill="rgb(213,20,6)" fg:x="6001" fg:w="6"/><text x="29.1273%" y="1359.50"></text></g><g><title>std::sys::unix::thread::guard::current (198 samples, 0.95%)</title><rect x="27.9775%" y="1381" width="0.9528%" height="15" fill="rgb(212,124,10)" fg:x="5814" fg:w="198"/><text x="28.2275%" y="1391.50"></text></g><g><title>pthread_self (3 samples, 0.01%)</title><rect x="28.9158%" y="1365" width="0.0144%" height="15" fill="rgb(248,3,40)" fg:x="6009" fg:w="3"/><text x="29.1658%" y="1375.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="28.9447%" y="1269" width="0.0144%" height="15" fill="rgb(223,178,23)" fg:x="6015" fg:w="3"/><text x="29.1947%" y="1279.50"></text></g><g><title>__libc_calloc (19 samples, 0.09%)</title><rect x="28.9591%" y="1269" width="0.0914%" height="15" fill="rgb(240,132,45)" fg:x="6018" fg:w="19"/><text x="29.2091%" y="1279.50"></text></g><g><title>[libc.so.6] (18 samples, 0.09%)</title><rect x="28.9640%" y="1253" width="0.0866%" height="15" fill="rgb(245,164,36)" fg:x="6019" fg:w="18"/><text x="29.2140%" y="1263.50"></text></g><g><title>_dl_find_dso_for_object (13 samples, 0.06%)</title><rect x="29.0506%" y="1269" width="0.0626%" height="15" fill="rgb(231,188,53)" fg:x="6037" fg:w="13"/><text x="29.3006%" y="1279.50"></text></g><g><title>[ld-linux-aarch64.so.1] (9 samples, 0.04%)</title><rect x="29.0698%" y="1253" width="0.0433%" height="15" fill="rgb(237,198,39)" fg:x="6041" fg:w="9"/><text x="29.3198%" y="1263.50"></text></g><g><title>std::sys_common::thread_info::set (40 samples, 0.19%)</title><rect x="28.9303%" y="1381" width="0.1925%" height="15" fill="rgb(223,120,35)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.19%)</title><rect x="28.9303%" y="1365" width="0.1925%" height="15" fill="rgb(253,107,49)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.19%)</title><rect x="28.9303%" y="1349" width="0.1925%" height="15" fill="rgb(216,44,31)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1359.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (40 samples, 0.19%)</title><rect x="28.9303%" y="1333" width="0.1925%" height="15" fill="rgb(253,87,21)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1343.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (40 samples, 0.19%)</title><rect x="28.9303%" y="1317" width="0.1925%" height="15" fill="rgb(226,18,2)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1327.50"></text></g><g><title>std::sys::unix::thread_local_dtor::register_dtor (40 samples, 0.19%)</title><rect x="28.9303%" y="1301" width="0.1925%" height="15" fill="rgb(216,8,46)" fg:x="6012" fg:w="40"/><text x="29.1803%" y="1311.50"></text></g><g><title>__cxa_thread_atexit_impl (38 samples, 0.18%)</title><rect x="28.9399%" y="1285" width="0.1829%" height="15" fill="rgb(226,140,39)" fg:x="6014" fg:w="38"/><text x="29.1899%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,398 samples, 25.98%)</title><rect x="3.1567%" y="1445" width="25.9757%" height="15" fill="rgb(221,194,54)" fg:x="656" fg:w="5398"/><text x="3.4067%" y="1455.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,398 samples, 25.98%)</title><rect x="3.1567%" y="1429" width="25.9757%" height="15" fill="rgb(213,92,11)" fg:x="656" fg:w="5398"/><text x="3.4067%" y="1439.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5,392 samples, 25.95%)</title><rect x="3.1856%" y="1413" width="25.9468%" height="15" fill="rgb(229,162,46)" fg:x="662" fg:w="5392"/><text x="3.4356%" y="1423.50">core::ops::function::FnOnce::call_once{{v..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (5,384 samples, 25.91%)</title><rect x="3.2241%" y="1397" width="25.9083%" height="15" fill="rgb(214,111,36)" fg:x="670" fg:w="5384"/><text x="3.4741%" y="1407.50">std::thread::Builder::spawn_unchecked_::{..</text></g><g><title>remove_vma (4 samples, 0.02%)</title><rect x="29.1420%" y="1237" width="0.0192%" height="15" fill="rgb(207,6,21)" fg:x="6056" fg:w="4"/><text x="29.3920%" y="1247.50"></text></g><g><title>vm_area_free (4 samples, 0.02%)</title><rect x="29.1420%" y="1221" width="0.0192%" height="15" fill="rgb(213,127,38)" fg:x="6056" fg:w="4"/><text x="29.3920%" y="1231.50"></text></g><g><title>kmem_cache_free (3 samples, 0.01%)</title><rect x="29.1468%" y="1205" width="0.0144%" height="15" fill="rgb(238,118,32)" fg:x="6057" fg:w="3"/><text x="29.3968%" y="1215.50"></text></g><g><title>__do_munmap (10 samples, 0.05%)</title><rect x="29.1324%" y="1253" width="0.0481%" height="15" fill="rgb(240,139,39)" fg:x="6054" fg:w="10"/><text x="29.3824%" y="1263.50"></text></g><g><title>unmap_region (4 samples, 0.02%)</title><rect x="29.1613%" y="1237" width="0.0192%" height="15" fill="rgb(235,10,37)" fg:x="6060" fg:w="4"/><text x="29.4113%" y="1247.50"></text></g><g><title>__vm_munmap (12 samples, 0.06%)</title><rect x="29.1324%" y="1269" width="0.0577%" height="15" fill="rgb(249,171,38)" fg:x="6054" fg:w="12"/><text x="29.3824%" y="1279.50"></text></g><g><title>munmap (13 samples, 0.06%)</title><rect x="29.1324%" y="1397" width="0.0626%" height="15" fill="rgb(242,144,32)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1407.50"></text></g><g><title>el0t_64_sync (13 samples, 0.06%)</title><rect x="29.1324%" y="1381" width="0.0626%" height="15" fill="rgb(217,117,21)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1391.50"></text></g><g><title>el0t_64_sync_handler (13 samples, 0.06%)</title><rect x="29.1324%" y="1365" width="0.0626%" height="15" fill="rgb(249,87,1)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1375.50"></text></g><g><title>el0_svc (13 samples, 0.06%)</title><rect x="29.1324%" y="1349" width="0.0626%" height="15" fill="rgb(248,196,48)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1359.50"></text></g><g><title>do_el0_svc (13 samples, 0.06%)</title><rect x="29.1324%" y="1333" width="0.0626%" height="15" fill="rgb(251,206,33)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1343.50"></text></g><g><title>el0_svc_common.constprop.0 (13 samples, 0.06%)</title><rect x="29.1324%" y="1317" width="0.0626%" height="15" fill="rgb(232,141,28)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1327.50"></text></g><g><title>invoke_syscall (13 samples, 0.06%)</title><rect x="29.1324%" y="1301" width="0.0626%" height="15" fill="rgb(209,167,14)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1311.50"></text></g><g><title>__arm64_sys_munmap (13 samples, 0.06%)</title><rect x="29.1324%" y="1285" width="0.0626%" height="15" fill="rgb(225,11,50)" fg:x="6054" fg:w="13"/><text x="29.3824%" y="1295.50"></text></g><g><title>sigaltstack (5 samples, 0.02%)</title><rect x="29.1949%" y="1397" width="0.0241%" height="15" fill="rgb(209,50,20)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1407.50"></text></g><g><title>el0t_64_sync (5 samples, 0.02%)</title><rect x="29.1949%" y="1381" width="0.0241%" height="15" fill="rgb(212,17,46)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1391.50"></text></g><g><title>el0t_64_sync_handler (5 samples, 0.02%)</title><rect x="29.1949%" y="1365" width="0.0241%" height="15" fill="rgb(216,101,39)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1375.50"></text></g><g><title>el0_svc (5 samples, 0.02%)</title><rect x="29.1949%" y="1349" width="0.0241%" height="15" fill="rgb(212,228,48)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1359.50"></text></g><g><title>do_el0_svc (5 samples, 0.02%)</title><rect x="29.1949%" y="1333" width="0.0241%" height="15" fill="rgb(250,6,50)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1343.50"></text></g><g><title>el0_svc_common.constprop.0 (5 samples, 0.02%)</title><rect x="29.1949%" y="1317" width="0.0241%" height="15" fill="rgb(250,160,48)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1327.50"></text></g><g><title>invoke_syscall (5 samples, 0.02%)</title><rect x="29.1949%" y="1301" width="0.0241%" height="15" fill="rgb(244,216,33)" fg:x="6067" fg:w="5"/><text x="29.4449%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (19 samples, 0.09%)</title><rect x="29.1324%" y="1445" width="0.0914%" height="15" fill="rgb(207,157,5)" fg:x="6054" fg:w="19"/><text x="29.3824%" y="1455.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (19 samples, 0.09%)</title><rect x="29.1324%" y="1429" width="0.0914%" height="15" fill="rgb(228,199,8)" fg:x="6054" fg:w="19"/><text x="29.3824%" y="1439.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (19 samples, 0.09%)</title><rect x="29.1324%" y="1413" width="0.0914%" height="15" fill="rgb(227,80,20)" fg:x="6054" fg:w="19"/><text x="29.3824%" y="1423.50"></text></g><g><title>__arm64_sys_sigaltstack (5 samples, 0.02%)</title><rect x="29.3489%" y="1317" width="0.0241%" height="15" fill="rgb(222,9,33)" fg:x="6099" fg:w="5"/><text x="29.5989%" y="1327.50"></text></g><g><title>__arch_copy_to_user (5 samples, 0.02%)</title><rect x="29.3922%" y="1301" width="0.0241%" height="15" fill="rgb(239,44,28)" fg:x="6108" fg:w="5"/><text x="29.6422%" y="1311.50"></text></g><g><title>do_sigaltstack (6 samples, 0.03%)</title><rect x="29.4211%" y="1301" width="0.0289%" height="15" fill="rgb(249,187,43)" fg:x="6114" fg:w="6"/><text x="29.6711%" y="1311.50"></text></g><g><title>sigaltstack (46 samples, 0.22%)</title><rect x="29.2431%" y="1413" width="0.2214%" height="15" fill="rgb(216,141,28)" fg:x="6077" fg:w="46"/><text x="29.4931%" y="1423.50"></text></g><g><title>el0t_64_sync (35 samples, 0.17%)</title><rect x="29.2960%" y="1397" width="0.1684%" height="15" fill="rgb(230,154,53)" fg:x="6088" fg:w="35"/><text x="29.5460%" y="1407.50"></text></g><g><title>el0t_64_sync_handler (35 samples, 0.17%)</title><rect x="29.2960%" y="1381" width="0.1684%" height="15" fill="rgb(227,82,4)" fg:x="6088" fg:w="35"/><text x="29.5460%" y="1391.50"></text></g><g><title>el0_svc (35 samples, 0.17%)</title><rect x="29.2960%" y="1365" width="0.1684%" height="15" fill="rgb(220,107,16)" fg:x="6088" fg:w="35"/><text x="29.5460%" y="1375.50"></text></g><g><title>do_el0_svc (35 samples, 0.17%)</title><rect x="29.2960%" y="1349" width="0.1684%" height="15" fill="rgb(207,187,2)" fg:x="6088" fg:w="35"/><text x="29.5460%" y="1359.50"></text></g><g><title>el0_svc_common.constprop.0 (35 samples, 0.17%)</title><rect x="29.2960%" y="1333" width="0.1684%" height="15" fill="rgb(210,162,52)" fg:x="6088" fg:w="35"/><text x="29.5460%" y="1343.50"></text></g><g><title>invoke_syscall (19 samples, 0.09%)</title><rect x="29.3730%" y="1317" width="0.0914%" height="15" fill="rgb(217,216,49)" fg:x="6104" fg:w="19"/><text x="29.6230%" y="1327.50"></text></g><g><title>__arm64_sys_mmap (3 samples, 0.01%)</title><rect x="29.5222%" y="1285" width="0.0144%" height="15" fill="rgb(218,146,49)" fg:x="6135" fg:w="3"/><text x="29.7722%" y="1295.50"></text></g><g><title>do_mmap (4 samples, 0.02%)</title><rect x="29.5655%" y="1237" width="0.0192%" height="15" fill="rgb(216,55,40)" fg:x="6144" fg:w="4"/><text x="29.8155%" y="1247.50"></text></g><g><title>security_mmap_file (14 samples, 0.07%)</title><rect x="29.5895%" y="1237" width="0.0674%" height="15" fill="rgb(208,196,21)" fg:x="6149" fg:w="14"/><text x="29.8395%" y="1247.50"></text></g><g><title>userfaultfd_unmap_complete (4 samples, 0.02%)</title><rect x="29.6569%" y="1237" width="0.0192%" height="15" fill="rgb(242,117,42)" fg:x="6163" fg:w="4"/><text x="29.9069%" y="1247.50"></text></g><g><title>apparmor_mmap_file (6 samples, 0.03%)</title><rect x="29.6858%" y="1221" width="0.0289%" height="15" fill="rgb(210,11,23)" fg:x="6169" fg:w="6"/><text x="29.9358%" y="1231.50"></text></g><g><title>cap_mmap_file (5 samples, 0.02%)</title><rect x="29.7146%" y="1221" width="0.0241%" height="15" fill="rgb(217,110,2)" fg:x="6175" fg:w="5"/><text x="29.9646%" y="1231.50"></text></g><g><title>arch_get_unmapped_area_topdown (4 samples, 0.02%)</title><rect x="29.7916%" y="1205" width="0.0192%" height="15" fill="rgb(229,77,54)" fg:x="6191" fg:w="4"/><text x="30.0416%" y="1215.50"></text></g><g><title>arch_get_unmapped_area_topdown (99 samples, 0.48%)</title><rect x="29.8301%" y="1189" width="0.4764%" height="15" fill="rgb(218,53,16)" fg:x="6199" fg:w="99"/><text x="30.0801%" y="1199.50"></text></g><g><title>unmapped_area_topdown (92 samples, 0.44%)</title><rect x="29.8638%" y="1173" width="0.4427%" height="15" fill="rgb(215,38,13)" fg:x="6206" fg:w="92"/><text x="30.1138%" y="1183.50"></text></g><g><title>cap_mmap_addr (7 samples, 0.03%)</title><rect x="30.3065%" y="1189" width="0.0337%" height="15" fill="rgb(235,42,18)" fg:x="6298" fg:w="7"/><text x="30.5565%" y="1199.50"></text></g><g><title>get_unmapped_area (111 samples, 0.53%)</title><rect x="29.8109%" y="1205" width="0.5341%" height="15" fill="rgb(219,66,54)" fg:x="6195" fg:w="111"/><text x="30.0609%" y="1215.50"></text></g><g><title>__vma_link_file (6 samples, 0.03%)</title><rect x="30.4076%" y="1189" width="0.0289%" height="15" fill="rgb(222,205,4)" fg:x="6319" fg:w="6"/><text x="30.6576%" y="1199.50"></text></g><g><title>__vma_link_list (4 samples, 0.02%)</title><rect x="30.4365%" y="1189" width="0.0192%" height="15" fill="rgb(227,213,46)" fg:x="6325" fg:w="4"/><text x="30.6865%" y="1199.50"></text></g><g><title>can_vma_merge_before (3 samples, 0.01%)</title><rect x="30.4557%" y="1189" width="0.0144%" height="15" fill="rgb(250,145,42)" fg:x="6329" fg:w="3"/><text x="30.7057%" y="1199.50"></text></g><g><title>cap_vm_enough_memory (13 samples, 0.06%)</title><rect x="30.4701%" y="1189" width="0.0626%" height="15" fill="rgb(219,15,2)" fg:x="6332" fg:w="13"/><text x="30.7201%" y="1199.50"></text></g><g><title>may_expand_vm (4 samples, 0.02%)</title><rect x="30.5375%" y="1189" width="0.0192%" height="15" fill="rgb(231,181,52)" fg:x="6346" fg:w="4"/><text x="30.7875%" y="1199.50"></text></g><g><title>arch_counter_get_cntvct (4 samples, 0.02%)</title><rect x="30.8022%" y="1077" width="0.0192%" height="15" fill="rgb(235,1,42)" fg:x="6401" fg:w="4"/><text x="31.0522%" y="1087.50"></text></g><g><title>__perf_event_header__init_id (6 samples, 0.03%)</title><rect x="30.7974%" y="1109" width="0.0289%" height="15" fill="rgb(249,88,27)" fg:x="6400" fg:w="6"/><text x="31.0474%" y="1119.50"></text></g><g><title>local_clock (5 samples, 0.02%)</title><rect x="30.8022%" y="1093" width="0.0241%" height="15" fill="rgb(235,145,16)" fg:x="6401" fg:w="5"/><text x="31.0522%" y="1103.50"></text></g><g><title>perf_output_begin (3 samples, 0.01%)</title><rect x="30.8359%" y="1109" width="0.0144%" height="15" fill="rgb(237,114,19)" fg:x="6408" fg:w="3"/><text x="31.0859%" y="1119.50"></text></g><g><title>perf_output_copy (3 samples, 0.01%)</title><rect x="30.8503%" y="1109" width="0.0144%" height="15" fill="rgb(238,51,50)" fg:x="6411" fg:w="3"/><text x="31.1003%" y="1119.50"></text></g><g><title>perf_event_mmap_output (19 samples, 0.09%)</title><rect x="30.7781%" y="1125" width="0.0914%" height="15" fill="rgb(205,194,25)" fg:x="6396" fg:w="19"/><text x="31.0281%" y="1135.50"></text></g><g><title>perf_event_mmap (65 samples, 0.31%)</title><rect x="30.5616%" y="1189" width="0.3128%" height="15" fill="rgb(215,203,17)" fg:x="6351" fg:w="65"/><text x="30.8116%" y="1199.50"></text></g><g><title>perf_event_mmap_event (61 samples, 0.29%)</title><rect x="30.5808%" y="1173" width="0.2935%" height="15" fill="rgb(233,112,49)" fg:x="6355" fg:w="61"/><text x="30.8308%" y="1183.50"></text></g><g><title>perf_iterate_sb (52 samples, 0.25%)</title><rect x="30.6241%" y="1157" width="0.2502%" height="15" fill="rgb(241,130,26)" fg:x="6364" fg:w="52"/><text x="30.8741%" y="1167.50"></text></g><g><title>perf_iterate_ctx (45 samples, 0.22%)</title><rect x="30.6578%" y="1141" width="0.2165%" height="15" fill="rgb(252,223,19)" fg:x="6371" fg:w="45"/><text x="30.9078%" y="1151.50"></text></g><g><title>perf_event_mmap_event (3 samples, 0.01%)</title><rect x="30.8744%" y="1189" width="0.0144%" height="15" fill="rgb(211,95,25)" fg:x="6416" fg:w="3"/><text x="31.1244%" y="1199.50"></text></g><g><title>security_vm_enough_memory_mm (13 samples, 0.06%)</title><rect x="30.8888%" y="1189" width="0.0626%" height="15" fill="rgb(251,182,27)" fg:x="6419" fg:w="13"/><text x="31.1388%" y="1199.50"></text></g><g><title>memcg_slab_post_alloc_hook (6 samples, 0.03%)</title><rect x="31.0187%" y="1157" width="0.0289%" height="15" fill="rgb(238,24,4)" fg:x="6446" fg:w="6"/><text x="31.2687%" y="1167.50"></text></g><g><title>get_obj_cgroup_from_current (8 samples, 0.04%)</title><rect x="31.0620%" y="1141" width="0.0385%" height="15" fill="rgb(224,220,25)" fg:x="6455" fg:w="8"/><text x="31.3120%" y="1151.50"></text></g><g><title>vm_area_alloc (35 samples, 0.17%)</title><rect x="30.9513%" y="1189" width="0.1684%" height="15" fill="rgb(239,133,26)" fg:x="6432" fg:w="35"/><text x="31.2013%" y="1199.50"></text></g><g><title>kmem_cache_alloc (32 samples, 0.15%)</title><rect x="30.9658%" y="1173" width="0.1540%" height="15" fill="rgb(211,94,48)" fg:x="6435" fg:w="32"/><text x="31.2158%" y="1183.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (13 samples, 0.06%)</title><rect x="31.0572%" y="1157" width="0.0626%" height="15" fill="rgb(239,87,6)" fg:x="6454" fg:w="13"/><text x="31.3072%" y="1167.50"></text></g><g><title>obj_cgroup_charge (4 samples, 0.02%)</title><rect x="31.1005%" y="1141" width="0.0192%" height="15" fill="rgb(227,62,0)" fg:x="6463" fg:w="4"/><text x="31.3505%" y="1151.50"></text></g><g><title>vm_pgprot_modify (4 samples, 0.02%)</title><rect x="31.1198%" y="1189" width="0.0192%" height="15" fill="rgb(211,226,4)" fg:x="6467" fg:w="4"/><text x="31.3698%" y="1199.50"></text></g><g><title>vma_link (8 samples, 0.04%)</title><rect x="31.1390%" y="1189" width="0.0385%" height="15" fill="rgb(253,38,52)" fg:x="6471" fg:w="8"/><text x="31.3890%" y="1199.50"></text></g><g><title>__vma_adjust (12 samples, 0.06%)</title><rect x="31.2160%" y="1173" width="0.0577%" height="15" fill="rgb(229,126,40)" fg:x="6487" fg:w="12"/><text x="31.4660%" y="1183.50"></text></g><g><title>vma_merge (24 samples, 0.12%)</title><rect x="31.1775%" y="1189" width="0.1155%" height="15" fill="rgb(229,165,44)" fg:x="6479" fg:w="24"/><text x="31.4275%" y="1199.50"></text></g><g><title>mmap_region (199 samples, 0.96%)</title><rect x="30.3547%" y="1205" width="0.9576%" height="15" fill="rgb(247,95,47)" fg:x="6308" fg:w="199"/><text x="30.6047%" y="1215.50"></text></g><g><title>vma_wants_writenotify (3 samples, 0.01%)</title><rect x="31.2978%" y="1189" width="0.0144%" height="15" fill="rgb(216,140,30)" fg:x="6504" fg:w="3"/><text x="31.5478%" y="1199.50"></text></g><g><title>do_mmap (336 samples, 1.62%)</title><rect x="29.7387%" y="1221" width="1.6169%" height="15" fill="rgb(246,214,8)" fg:x="6180" fg:w="336"/><text x="29.9887%" y="1231.50"></text></g><g><title>vma_set_page_prot (3 samples, 0.01%)</title><rect x="31.3411%" y="1205" width="0.0144%" height="15" fill="rgb(227,224,15)" fg:x="6513" fg:w="3"/><text x="31.5911%" y="1215.50"></text></g><g><title>security_mmap_file (12 samples, 0.06%)</title><rect x="31.3748%" y="1221" width="0.0577%" height="15" fill="rgb(233,175,4)" fg:x="6520" fg:w="12"/><text x="31.6248%" y="1231.50"></text></g><g><title>ksys_mmap_pgoff (392 samples, 1.89%)</title><rect x="29.5510%" y="1253" width="1.8863%" height="15" fill="rgb(221,66,45)" fg:x="6141" fg:w="392"/><text x="29.8010%" y="1263.50">k..</text></g><g><title>vm_mmap_pgoff (366 samples, 1.76%)</title><rect x="29.6761%" y="1237" width="1.7612%" height="15" fill="rgb(221,178,18)" fg:x="6167" fg:w="366"/><text x="29.9261%" y="1247.50"></text></g><g><title>__arm64_sys_mmap (400 samples, 1.92%)</title><rect x="29.5510%" y="1269" width="1.9248%" height="15" fill="rgb(213,81,29)" fg:x="6141" fg:w="400"/><text x="29.8010%" y="1279.50">_..</text></g><g><title>vm_mmap_pgoff (8 samples, 0.04%)</title><rect x="31.4374%" y="1253" width="0.0385%" height="15" fill="rgb(220,89,49)" fg:x="6533" fg:w="8"/><text x="31.6874%" y="1263.50"></text></g><g><title>__mmap (419 samples, 2.02%)</title><rect x="29.4740%" y="1381" width="2.0163%" height="15" fill="rgb(227,60,33)" fg:x="6125" fg:w="419"/><text x="29.7240%" y="1391.50">_..</text></g><g><title>el0t_64_sync (414 samples, 1.99%)</title><rect x="29.4981%" y="1365" width="1.9922%" height="15" fill="rgb(205,113,12)" fg:x="6130" fg:w="414"/><text x="29.7481%" y="1375.50">e..</text></g><g><title>el0t_64_sync_handler (414 samples, 1.99%)</title><rect x="29.4981%" y="1349" width="1.9922%" height="15" fill="rgb(211,32,1)" fg:x="6130" fg:w="414"/><text x="29.7481%" y="1359.50">e..</text></g><g><title>el0_svc (414 samples, 1.99%)</title><rect x="29.4981%" y="1333" width="1.9922%" height="15" fill="rgb(246,2,12)" fg:x="6130" fg:w="414"/><text x="29.7481%" y="1343.50">e..</text></g><g><title>do_el0_svc (414 samples, 1.99%)</title><rect x="29.4981%" y="1317" width="1.9922%" height="15" fill="rgb(243,37,27)" fg:x="6130" fg:w="414"/><text x="29.7481%" y="1327.50">d..</text></g><g><title>el0_svc_common.constprop.0 (414 samples, 1.99%)</title><rect x="29.4981%" y="1301" width="1.9922%" height="15" fill="rgb(248,211,31)" fg:x="6130" fg:w="414"/><text x="29.7481%" y="1311.50">e..</text></g><g><title>invoke_syscall (406 samples, 1.95%)</title><rect x="29.5366%" y="1285" width="1.9537%" height="15" fill="rgb(242,146,47)" fg:x="6138" fg:w="406"/><text x="29.7866%" y="1295.50">i..</text></g><g><title>ksys_mmap_pgoff (3 samples, 0.01%)</title><rect x="31.4759%" y="1269" width="0.0144%" height="15" fill="rgb(206,70,20)" fg:x="6541" fg:w="3"/><text x="31.7259%" y="1279.50"></text></g><g><title>apparmor_file_mprotect (3 samples, 0.01%)</title><rect x="31.5480%" y="1237" width="0.0144%" height="15" fill="rgb(215,10,51)" fg:x="6556" fg:w="3"/><text x="31.7980%" y="1247.50"></text></g><g><title>change_protection (3 samples, 0.01%)</title><rect x="31.5625%" y="1237" width="0.0144%" height="15" fill="rgb(243,178,53)" fg:x="6559" fg:w="3"/><text x="31.8125%" y="1247.50"></text></g><g><title>change_pmd_range.isra.0 (3 samples, 0.01%)</title><rect x="31.6010%" y="1205" width="0.0144%" height="15" fill="rgb(233,221,20)" fg:x="6567" fg:w="3"/><text x="31.8510%" y="1215.50"></text></g><g><title>change_pmd_range.isra.0 (4 samples, 0.02%)</title><rect x="31.6395%" y="1189" width="0.0192%" height="15" fill="rgb(218,95,35)" fg:x="6575" fg:w="4"/><text x="31.8895%" y="1199.50"></text></g><g><title>change_protection (15 samples, 0.07%)</title><rect x="31.6010%" y="1221" width="0.0722%" height="15" fill="rgb(229,13,5)" fg:x="6567" fg:w="15"/><text x="31.8510%" y="1231.50"></text></g><g><title>change_protection_range (12 samples, 0.06%)</title><rect x="31.6154%" y="1205" width="0.0577%" height="15" fill="rgb(252,164,30)" fg:x="6570" fg:w="12"/><text x="31.8654%" y="1215.50"></text></g><g><title>change_pte_range (3 samples, 0.01%)</title><rect x="31.6587%" y="1189" width="0.0144%" height="15" fill="rgb(232,68,36)" fg:x="6579" fg:w="3"/><text x="31.9087%" y="1199.50"></text></g><g><title>__perf_event_header__init_id (3 samples, 0.01%)</title><rect x="31.7117%" y="1141" width="0.0144%" height="15" fill="rgb(219,59,54)" fg:x="6590" fg:w="3"/><text x="31.9617%" y="1151.50"></text></g><g><title>perf_event_mmap (15 samples, 0.07%)</title><rect x="31.6780%" y="1221" width="0.0722%" height="15" fill="rgb(250,92,33)" fg:x="6583" fg:w="15"/><text x="31.9280%" y="1231.50"></text></g><g><title>perf_event_mmap_event (14 samples, 0.07%)</title><rect x="31.6828%" y="1205" width="0.0674%" height="15" fill="rgb(229,162,54)" fg:x="6584" fg:w="14"/><text x="31.9328%" y="1215.50"></text></g><g><title>perf_iterate_sb (13 samples, 0.06%)</title><rect x="31.6876%" y="1189" width="0.0626%" height="15" fill="rgb(244,114,52)" fg:x="6585" fg:w="13"/><text x="31.9376%" y="1199.50"></text></g><g><title>perf_iterate_ctx (12 samples, 0.06%)</title><rect x="31.6924%" y="1173" width="0.0577%" height="15" fill="rgb(212,211,43)" fg:x="6586" fg:w="12"/><text x="31.9424%" y="1183.50"></text></g><g><title>perf_event_mmap_output (9 samples, 0.04%)</title><rect x="31.7068%" y="1157" width="0.0433%" height="15" fill="rgb(226,147,8)" fg:x="6589" fg:w="9"/><text x="31.9568%" y="1167.50"></text></g><g><title>anon_vma_interval_tree_insert (3 samples, 0.01%)</title><rect x="31.8175%" y="1173" width="0.0144%" height="15" fill="rgb(226,23,13)" fg:x="6612" fg:w="3"/><text x="32.0675%" y="1183.50"></text></g><g><title>__vma_adjust (18 samples, 0.09%)</title><rect x="31.7550%" y="1189" width="0.0866%" height="15" fill="rgb(240,63,4)" fg:x="6599" fg:w="18"/><text x="32.0050%" y="1199.50"></text></g><g><title>anon_vma_interval_tree_insert (3 samples, 0.01%)</title><rect x="31.8512%" y="1173" width="0.0144%" height="15" fill="rgb(221,1,32)" fg:x="6619" fg:w="3"/><text x="32.1012%" y="1183.50"></text></g><g><title>anon_vma_clone (7 samples, 0.03%)</title><rect x="31.8512%" y="1189" width="0.0337%" height="15" fill="rgb(242,117,10)" fg:x="6619" fg:w="7"/><text x="32.1012%" y="1199.50"></text></g><g><title>kmem_cache_alloc (4 samples, 0.02%)</title><rect x="31.8656%" y="1173" width="0.0192%" height="15" fill="rgb(249,172,44)" fg:x="6622" fg:w="4"/><text x="32.1156%" y="1183.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.02%)</title><rect x="31.8993%" y="1173" width="0.0241%" height="15" fill="rgb(244,46,45)" fg:x="6629" fg:w="5"/><text x="32.1493%" y="1183.50"></text></g><g><title>vm_area_dup (8 samples, 0.04%)</title><rect x="31.8897%" y="1189" width="0.0385%" height="15" fill="rgb(206,43,17)" fg:x="6627" fg:w="8"/><text x="32.1397%" y="1199.50"></text></g><g><title>__split_vma (40 samples, 0.19%)</title><rect x="31.7502%" y="1205" width="0.1925%" height="15" fill="rgb(239,218,39)" fg:x="6598" fg:w="40"/><text x="32.0002%" y="1215.50"></text></g><g><title>vma_adjust_trans_huge (3 samples, 0.01%)</title><rect x="31.9282%" y="1189" width="0.0144%" height="15" fill="rgb(208,169,54)" fg:x="6635" fg:w="3"/><text x="32.1782%" y="1199.50"></text></g><g><title>split_vma (44 samples, 0.21%)</title><rect x="31.7502%" y="1221" width="0.2117%" height="15" fill="rgb(247,25,42)" fg:x="6598" fg:w="44"/><text x="32.0002%" y="1231.50"></text></g><g><title>mprotect_fixup (80 samples, 0.38%)</title><rect x="31.5865%" y="1237" width="0.3850%" height="15" fill="rgb(226,23,31)" fg:x="6564" fg:w="80"/><text x="31.8365%" y="1247.50"></text></g><g><title>security_file_mprotect (3 samples, 0.01%)</title><rect x="31.9715%" y="1237" width="0.0144%" height="15" fill="rgb(247,16,28)" fg:x="6644" fg:w="3"/><text x="32.2215%" y="1247.50"></text></g><g><title>split_vma (3 samples, 0.01%)</title><rect x="31.9859%" y="1237" width="0.0144%" height="15" fill="rgb(231,147,38)" fg:x="6647" fg:w="3"/><text x="32.2359%" y="1247.50"></text></g><g><title>vm_stat_account (3 samples, 0.01%)</title><rect x="32.0004%" y="1237" width="0.0144%" height="15" fill="rgb(253,81,48)" fg:x="6650" fg:w="3"/><text x="32.2504%" y="1247.50"></text></g><g><title>do_mprotect_pkey.constprop.0 (99 samples, 0.48%)</title><rect x="31.5432%" y="1253" width="0.4764%" height="15" fill="rgb(249,222,43)" fg:x="6555" fg:w="99"/><text x="31.7932%" y="1263.50"></text></g><g><title>__arm64_sys_mprotect (100 samples, 0.48%)</title><rect x="31.5432%" y="1269" width="0.4812%" height="15" fill="rgb(221,3,27)" fg:x="6555" fg:w="100"/><text x="31.7932%" y="1279.50"></text></g><g><title>mprotect (114 samples, 0.55%)</title><rect x="31.4903%" y="1381" width="0.5486%" height="15" fill="rgb(228,180,5)" fg:x="6544" fg:w="114"/><text x="31.7403%" y="1391.50"></text></g><g><title>el0t_64_sync (112 samples, 0.54%)</title><rect x="31.4999%" y="1365" width="0.5390%" height="15" fill="rgb(227,131,42)" fg:x="6546" fg:w="112"/><text x="31.7499%" y="1375.50"></text></g><g><title>el0t_64_sync_handler (112 samples, 0.54%)</title><rect x="31.4999%" y="1349" width="0.5390%" height="15" fill="rgb(212,3,39)" fg:x="6546" fg:w="112"/><text x="31.7499%" y="1359.50"></text></g><g><title>el0_svc (112 samples, 0.54%)</title><rect x="31.4999%" y="1333" width="0.5390%" height="15" fill="rgb(226,45,5)" fg:x="6546" fg:w="112"/><text x="31.7499%" y="1343.50"></text></g><g><title>do_el0_svc (112 samples, 0.54%)</title><rect x="31.4999%" y="1317" width="0.5390%" height="15" fill="rgb(215,167,45)" fg:x="6546" fg:w="112"/><text x="31.7499%" y="1327.50"></text></g><g><title>el0_svc_common.constprop.0 (112 samples, 0.54%)</title><rect x="31.4999%" y="1301" width="0.5390%" height="15" fill="rgb(250,218,53)" fg:x="6546" fg:w="112"/><text x="31.7499%" y="1311.50"></text></g><g><title>invoke_syscall (106 samples, 0.51%)</title><rect x="31.5288%" y="1285" width="0.5101%" height="15" fill="rgb(207,140,0)" fg:x="6552" fg:w="106"/><text x="31.7788%" y="1295.50"></text></g><g><title>do_mprotect_pkey.constprop.0 (3 samples, 0.01%)</title><rect x="32.0244%" y="1269" width="0.0144%" height="15" fill="rgb(238,133,51)" fg:x="6655" fg:w="3"/><text x="32.2744%" y="1279.50"></text></g><g><title>__sysconf (27 samples, 0.13%)</title><rect x="32.0389%" y="1365" width="0.1299%" height="15" fill="rgb(218,203,53)" fg:x="6658" fg:w="27"/><text x="32.2889%" y="1375.50"></text></g><g><title>__getpagesize (6 samples, 0.03%)</title><rect x="32.1399%" y="1349" width="0.0289%" height="15" fill="rgb(226,184,25)" fg:x="6679" fg:w="6"/><text x="32.3899%" y="1359.50"></text></g><g><title>[libc.so.6] (6,676 samples, 32.13%)</title><rect x="0.0481%" y="1477" width="32.1255%" height="15" fill="rgb(231,121,21)" fg:x="10" fg:w="6676"/><text x="0.2981%" y="1487.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6,050 samples, 29.11%)</title><rect x="3.0605%" y="1461" width="29.1131%" height="15" fill="rgb(251,14,34)" fg:x="636" fg:w="6050"/><text x="3.3105%" y="1471.50">std::sys::unix::thread::Thread::new::thread_sta..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (613 samples, 2.95%)</title><rect x="29.2238%" y="1445" width="2.9498%" height="15" fill="rgb(249,193,11)" fg:x="6073" fg:w="613"/><text x="29.4738%" y="1455.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (613 samples, 2.95%)</title><rect x="29.2238%" y="1429" width="2.9498%" height="15" fill="rgb(220,172,37)" fg:x="6073" fg:w="613"/><text x="29.4738%" y="1439.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (562 samples, 2.70%)</title><rect x="29.4692%" y="1413" width="2.7044%" height="15" fill="rgb(231,229,43)" fg:x="6124" fg:w="562"/><text x="29.7192%" y="1423.50">st..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (562 samples, 2.70%)</title><rect x="29.4692%" y="1397" width="2.7044%" height="15" fill="rgb(250,161,5)" fg:x="6124" fg:w="562"/><text x="29.7192%" y="1407.50">st..</text></g><g><title>std::sys::unix::os::page_size (28 samples, 0.13%)</title><rect x="32.0389%" y="1381" width="0.1347%" height="15" fill="rgb(218,225,18)" fg:x="6658" fg:w="28"/><text x="32.2889%" y="1391.50"></text></g><g><title>asm_exit_to_user_mode (24 samples, 0.12%)</title><rect x="32.9387%" y="1461" width="0.1155%" height="15" fill="rgb(245,45,42)" fg:x="6845" fg:w="24"/><text x="33.1887%" y="1471.50"></text></g><g><title>blkcg_maybe_throttle_current (7 samples, 0.03%)</title><rect x="33.0590%" y="1429" width="0.0337%" height="15" fill="rgb(211,115,1)" fg:x="6870" fg:w="7"/><text x="33.3090%" y="1439.50"></text></g><g><title>__get_cpu_fpsimd_context (3 samples, 0.01%)</title><rect x="33.5884%" y="1413" width="0.0144%" height="15" fill="rgb(248,133,52)" fg:x="6980" fg:w="3"/><text x="33.8384%" y="1423.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.04%)</title><rect x="33.6028%" y="1413" width="0.0433%" height="15" fill="rgb(238,100,21)" fg:x="6983" fg:w="9"/><text x="33.8528%" y="1423.50"></text></g><g><title>blkcg_maybe_throttle_current (12 samples, 0.06%)</title><rect x="33.6461%" y="1413" width="0.0577%" height="15" fill="rgb(247,144,11)" fg:x="6992" fg:w="12"/><text x="33.8961%" y="1423.50"></text></g><g><title>el1h_64_irq (3 samples, 0.01%)</title><rect x="33.7039%" y="1413" width="0.0144%" height="15" fill="rgb(206,164,16)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1423.50"></text></g><g><title>el1h_64_irq_handler (3 samples, 0.01%)</title><rect x="33.7039%" y="1397" width="0.0144%" height="15" fill="rgb(222,34,3)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1407.50"></text></g><g><title>el1_interrupt (3 samples, 0.01%)</title><rect x="33.7039%" y="1381" width="0.0144%" height="15" fill="rgb(248,82,4)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1391.50"></text></g><g><title>do_interrupt_handler (3 samples, 0.01%)</title><rect x="33.7039%" y="1365" width="0.0144%" height="15" fill="rgb(228,81,46)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1375.50"></text></g><g><title>call_on_irq_stack (3 samples, 0.01%)</title><rect x="33.7039%" y="1349" width="0.0144%" height="15" fill="rgb(227,67,47)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1359.50"></text></g><g><title>gic_handle_irq (3 samples, 0.01%)</title><rect x="33.7039%" y="1333" width="0.0144%" height="15" fill="rgb(215,93,53)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1343.50"></text></g><g><title>handle_domain_irq (3 samples, 0.01%)</title><rect x="33.7039%" y="1317" width="0.0144%" height="15" fill="rgb(248,194,39)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1327.50"></text></g><g><title>irq_exit (3 samples, 0.01%)</title><rect x="33.7039%" y="1301" width="0.0144%" height="15" fill="rgb(215,5,19)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1311.50"></text></g><g><title>__irq_exit_rcu (3 samples, 0.01%)</title><rect x="33.7039%" y="1285" width="0.0144%" height="15" fill="rgb(226,215,51)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1295.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="33.7039%" y="1269" width="0.0144%" height="15" fill="rgb(225,56,26)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1279.50"></text></g><g><title>rcu_core_si (3 samples, 0.01%)</title><rect x="33.7039%" y="1253" width="0.0144%" height="15" fill="rgb(222,75,29)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1263.50"></text></g><g><title>rcu_core (3 samples, 0.01%)</title><rect x="33.7039%" y="1237" width="0.0144%" height="15" fill="rgb(236,139,6)" fg:x="7004" fg:w="3"/><text x="33.9539%" y="1247.50"></text></g><g><title>__get_cpu_fpsimd_context (4 samples, 0.02%)</title><rect x="33.7712%" y="1397" width="0.0192%" height="15" fill="rgb(223,137,36)" fg:x="7018" fg:w="4"/><text x="34.0212%" y="1407.50"></text></g><g><title>fpsimd_load_state (61 samples, 0.29%)</title><rect x="33.8001%" y="1397" width="0.2935%" height="15" fill="rgb(226,99,2)" fg:x="7024" fg:w="61"/><text x="34.0501%" y="1407.50"></text></g><g><title>fpsimd_restore_current_state (88 samples, 0.42%)</title><rect x="33.7279%" y="1413" width="0.4235%" height="15" fill="rgb(206,133,23)" fg:x="7009" fg:w="88"/><text x="33.9779%" y="1423.50"></text></g><g><title>task_fpsimd_load (12 samples, 0.06%)</title><rect x="34.0936%" y="1397" width="0.0577%" height="15" fill="rgb(243,173,15)" fg:x="7085" fg:w="12"/><text x="34.3436%" y="1407.50"></text></g><g><title>mem_cgroup_handle_over_high (18 samples, 0.09%)</title><rect x="34.1514%" y="1413" width="0.0866%" height="15" fill="rgb(228,69,28)" fg:x="7097" fg:w="18"/><text x="34.4014%" y="1423.50"></text></g><g><title>do_notify_resume (246 samples, 1.18%)</title><rect x="33.0927%" y="1429" width="1.1838%" height="15" fill="rgb(212,51,22)" fg:x="6877" fg:w="246"/><text x="33.3427%" y="1439.50"></text></g><g><title>task_fpsimd_load (8 samples, 0.04%)</title><rect x="34.2380%" y="1413" width="0.0385%" height="15" fill="rgb(227,113,0)" fg:x="7115" fg:w="8"/><text x="34.4880%" y="1423.50"></text></g><g><title>fpsimd_restore_current_state (22 samples, 0.11%)</title><rect x="34.2765%" y="1429" width="0.1059%" height="15" fill="rgb(252,84,27)" fg:x="7123" fg:w="22"/><text x="34.5265%" y="1439.50"></text></g><g><title>asm_exit_to_user_mode (279 samples, 1.34%)</title><rect x="33.0590%" y="1445" width="1.3426%" height="15" fill="rgb(223,145,39)" fg:x="6870" fg:w="279"/><text x="33.3090%" y="1455.50"></text></g><g><title>mem_cgroup_handle_over_high (4 samples, 0.02%)</title><rect x="34.3824%" y="1429" width="0.0192%" height="15" fill="rgb(239,219,30)" fg:x="7145" fg:w="4"/><text x="34.6324%" y="1439.50"></text></g><g><title>calculate_sigpending (33 samples, 0.16%)</title><rect x="34.4016%" y="1445" width="0.1588%" height="15" fill="rgb(224,196,39)" fg:x="7149" fg:w="33"/><text x="34.6516%" y="1455.50"></text></g><g><title>net_rx_action (5 samples, 0.02%)</title><rect x="62.6005%" y="1253" width="0.0241%" height="15" fill="rgb(205,35,43)" fg:x="13009" fg:w="5"/><text x="62.8505%" y="1263.50"></text></g><g><title>__napi_poll (4 samples, 0.02%)</title><rect x="62.6053%" y="1237" width="0.0192%" height="15" fill="rgb(228,201,21)" fg:x="13010" fg:w="4"/><text x="62.8553%" y="1247.50"></text></g><g><title>virtnet_poll (4 samples, 0.02%)</title><rect x="62.6053%" y="1221" width="0.0192%" height="15" fill="rgb(237,118,16)" fg:x="13010" fg:w="4"/><text x="62.8553%" y="1231.50"></text></g><g><title>note_gp_changes (9 samples, 0.04%)</title><rect x="62.6486%" y="1221" width="0.0433%" height="15" fill="rgb(241,17,19)" fg:x="13019" fg:w="9"/><text x="62.8986%" y="1231.50"></text></g><g><title>rcu_do_batch (5 samples, 0.02%)</title><rect x="62.6967%" y="1221" width="0.0241%" height="15" fill="rgb(214,10,25)" fg:x="13029" fg:w="5"/><text x="62.9467%" y="1231.50"></text></g><g><title>rcu_core_si (21 samples, 0.10%)</title><rect x="62.6341%" y="1253" width="0.1011%" height="15" fill="rgb(238,37,29)" fg:x="13016" fg:w="21"/><text x="62.8841%" y="1263.50"></text></g><g><title>rcu_core (21 samples, 0.10%)</title><rect x="62.6341%" y="1237" width="0.1011%" height="15" fill="rgb(253,83,25)" fg:x="13016" fg:w="21"/><text x="62.8841%" y="1247.50"></text></g><g><title>rcu_report_qs_rnp (3 samples, 0.01%)</title><rect x="62.7208%" y="1221" width="0.0144%" height="15" fill="rgb(234,192,12)" fg:x="13034" fg:w="3"/><text x="62.9708%" y="1231.50"></text></g><g><title>run_rebalance_domains (15 samples, 0.07%)</title><rect x="62.7352%" y="1253" width="0.0722%" height="15" fill="rgb(241,216,45)" fg:x="13037" fg:w="15"/><text x="62.9852%" y="1263.50"></text></g><g><title>update_blocked_averages (12 samples, 0.06%)</title><rect x="62.7496%" y="1237" width="0.0577%" height="15" fill="rgb(242,22,33)" fg:x="13040" fg:w="12"/><text x="62.9996%" y="1247.50"></text></g><g><title>call_timer_fn (8 samples, 0.04%)</title><rect x="62.8555%" y="1221" width="0.0385%" height="15" fill="rgb(231,105,49)" fg:x="13062" fg:w="8"/><text x="63.1055%" y="1231.50"></text></g><g><title>tcp_orphan_update (8 samples, 0.04%)</title><rect x="62.8555%" y="1205" width="0.0385%" height="15" fill="rgb(218,204,15)" fg:x="13062" fg:w="8"/><text x="63.1055%" y="1215.50"></text></g><g><title>mod_timer (5 samples, 0.02%)</title><rect x="62.8699%" y="1189" width="0.0241%" height="15" fill="rgb(235,138,41)" fg:x="13065" fg:w="5"/><text x="63.1199%" y="1199.50"></text></g><g><title>__mod_timer (5 samples, 0.02%)</title><rect x="62.8699%" y="1173" width="0.0241%" height="15" fill="rgb(246,0,9)" fg:x="13065" fg:w="5"/><text x="63.1199%" y="1183.50"></text></g><g><title>__run_timers.part.0 (20 samples, 0.10%)</title><rect x="62.8074%" y="1237" width="0.0962%" height="15" fill="rgb(210,74,4)" fg:x="13052" fg:w="20"/><text x="63.0574%" y="1247.50"></text></g><g><title>run_timer_softirq (21 samples, 0.10%)</title><rect x="62.8074%" y="1253" width="0.1011%" height="15" fill="rgb(250,60,41)" fg:x="13052" fg:w="21"/><text x="63.0574%" y="1263.50"></text></g><g><title>__softirqentry_text_start (177 samples, 0.85%)</title><rect x="62.0663%" y="1269" width="0.8517%" height="15" fill="rgb(220,115,12)" fg:x="12898" fg:w="177"/><text x="62.3163%" y="1279.50"></text></g><g><title>arch_local_irq_enable (5,889 samples, 28.34%)</title><rect x="34.5941%" y="1429" width="28.3384%" height="15" fill="rgb(237,100,13)" fg:x="7189" fg:w="5889"/><text x="34.8441%" y="1439.50">arch_local_irq_enable</text></g><g><title>el1h_64_irq (180 samples, 0.87%)</title><rect x="62.0663%" y="1413" width="0.8662%" height="15" fill="rgb(213,55,26)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1423.50"></text></g><g><title>el1h_64_irq_handler (180 samples, 0.87%)</title><rect x="62.0663%" y="1397" width="0.8662%" height="15" fill="rgb(216,17,4)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1407.50"></text></g><g><title>el1_interrupt (180 samples, 0.87%)</title><rect x="62.0663%" y="1381" width="0.8662%" height="15" fill="rgb(220,153,47)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1391.50"></text></g><g><title>do_interrupt_handler (180 samples, 0.87%)</title><rect x="62.0663%" y="1365" width="0.8662%" height="15" fill="rgb(215,131,9)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1375.50"></text></g><g><title>call_on_irq_stack (180 samples, 0.87%)</title><rect x="62.0663%" y="1349" width="0.8662%" height="15" fill="rgb(233,46,42)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1359.50"></text></g><g><title>gic_handle_irq (180 samples, 0.87%)</title><rect x="62.0663%" y="1333" width="0.8662%" height="15" fill="rgb(226,86,7)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1343.50"></text></g><g><title>handle_domain_irq (180 samples, 0.87%)</title><rect x="62.0663%" y="1317" width="0.8662%" height="15" fill="rgb(239,226,21)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1327.50"></text></g><g><title>irq_exit (180 samples, 0.87%)</title><rect x="62.0663%" y="1301" width="0.8662%" height="15" fill="rgb(244,137,22)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1311.50"></text></g><g><title>__irq_exit_rcu (180 samples, 0.87%)</title><rect x="62.0663%" y="1285" width="0.8662%" height="15" fill="rgb(211,139,35)" fg:x="12898" fg:w="180"/><text x="62.3163%" y="1295.50"></text></g><g><title>calculate_sigpending (218 samples, 1.05%)</title><rect x="62.9325%" y="1429" width="1.0490%" height="15" fill="rgb(214,62,50)" fg:x="13078" fg:w="218"/><text x="63.1825%" y="1439.50"></text></g><g><title>__free_pages (3 samples, 0.01%)</title><rect x="66.0411%" y="1365" width="0.0144%" height="15" fill="rgb(212,113,44)" fg:x="13724" fg:w="3"/><text x="66.2911%" y="1375.50"></text></g><g><title>free_unref_page (3 samples, 0.01%)</title><rect x="66.0411%" y="1349" width="0.0144%" height="15" fill="rgb(226,150,43)" fg:x="13724" fg:w="3"/><text x="66.2911%" y="1359.50"></text></g><g><title>finish_task_switch.isra.0 (432 samples, 2.08%)</title><rect x="63.9815%" y="1429" width="2.0788%" height="15" fill="rgb(250,71,37)" fg:x="13296" fg:w="432"/><text x="64.2315%" y="1439.50">f..</text></g><g><title>__mmdrop (4 samples, 0.02%)</title><rect x="66.0411%" y="1413" width="0.0192%" height="15" fill="rgb(219,76,19)" fg:x="13724" fg:w="4"/><text x="66.2911%" y="1423.50"></text></g><g><title>pgd_free (4 samples, 0.02%)</title><rect x="66.0411%" y="1397" width="0.0192%" height="15" fill="rgb(250,39,11)" fg:x="13724" fg:w="4"/><text x="66.2911%" y="1407.50"></text></g><g><title>free_pages (4 samples, 0.02%)</title><rect x="66.0411%" y="1381" width="0.0192%" height="15" fill="rgb(230,64,31)" fg:x="13724" fg:w="4"/><text x="66.2911%" y="1391.50"></text></g><g><title>ret_from_fork (6,864 samples, 33.03%)</title><rect x="33.0542%" y="1461" width="33.0302%" height="15" fill="rgb(208,222,23)" fg:x="6869" fg:w="6864"/><text x="33.3042%" y="1471.50">ret_from_fork</text></g><g><title>schedule_tail (6,549 samples, 31.51%)</title><rect x="34.5700%" y="1445" width="31.5144%" height="15" fill="rgb(227,125,18)" fg:x="7184" fg:w="6549"/><text x="34.8200%" y="1455.50">schedule_tail</text></g><g><title>system_uses_lse_atomics (5 samples, 0.02%)</title><rect x="66.0603%" y="1429" width="0.0241%" height="15" fill="rgb(234,210,9)" fg:x="13728" fg:w="5"/><text x="66.3103%" y="1439.50"></text></g><g><title>[libc.so.6] (13,729 samples, 66.07%)</title><rect x="0.0289%" y="1493" width="66.0652%" height="15" fill="rgb(217,127,24)" fg:x="6" fg:w="13729"/><text x="0.2789%" y="1503.50">[libc.so.6]</text></g><g><title>clone (7,049 samples, 33.92%)</title><rect x="32.1736%" y="1477" width="33.9204%" height="15" fill="rgb(239,141,48)" fg:x="6686" fg:w="7049"/><text x="32.4236%" y="1487.50">clone</text></g><g><title>arch_local_irq_enable (7 samples, 0.03%)</title><rect x="66.1614%" y="853" width="0.0337%" height="15" fill="rgb(227,109,8)" fg:x="13749" fg:w="7"/><text x="66.4114%" y="863.50"></text></g><g><title>futex_wait_queue_me (8 samples, 0.04%)</title><rect x="66.1614%" y="901" width="0.0385%" height="15" fill="rgb(235,184,23)" fg:x="13749" fg:w="8"/><text x="66.4114%" y="911.50"></text></g><g><title>schedule (8 samples, 0.04%)</title><rect x="66.1614%" y="885" width="0.0385%" height="15" fill="rgb(227,226,48)" fg:x="13749" fg:w="8"/><text x="66.4114%" y="895.50"></text></g><g><title>__schedule (8 samples, 0.04%)</title><rect x="66.1614%" y="869" width="0.0385%" height="15" fill="rgb(206,150,11)" fg:x="13749" fg:w="8"/><text x="66.4114%" y="879.50"></text></g><g><title>futex_wait (9 samples, 0.04%)</title><rect x="66.1614%" y="917" width="0.0433%" height="15" fill="rgb(254,2,33)" fg:x="13749" fg:w="9"/><text x="66.4114%" y="927.50"></text></g><g><title>__arm64_sys_futex (11 samples, 0.05%)</title><rect x="66.1566%" y="949" width="0.0529%" height="15" fill="rgb(243,160,20)" fg:x="13748" fg:w="11"/><text x="66.4066%" y="959.50"></text></g><g><title>do_futex (10 samples, 0.05%)</title><rect x="66.1614%" y="933" width="0.0481%" height="15" fill="rgb(218,208,30)" fg:x="13749" fg:w="10"/><text x="66.4114%" y="943.50"></text></g><g><title>do_el0_svc (13 samples, 0.06%)</title><rect x="66.1518%" y="997" width="0.0626%" height="15" fill="rgb(224,120,49)" fg:x="13747" fg:w="13"/><text x="66.4018%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (13 samples, 0.06%)</title><rect x="66.1518%" y="981" width="0.0626%" height="15" fill="rgb(246,12,2)" fg:x="13747" fg:w="13"/><text x="66.4018%" y="991.50"></text></g><g><title>invoke_syscall (13 samples, 0.06%)</title><rect x="66.1518%" y="965" width="0.0626%" height="15" fill="rgb(236,117,3)" fg:x="13747" fg:w="13"/><text x="66.4018%" y="975.50"></text></g><g><title>std::sys::unix::futex::futex_wait (19 samples, 0.09%)</title><rect x="66.1373%" y="1077" width="0.0914%" height="15" fill="rgb(216,128,52)" fg:x="13744" fg:w="19"/><text x="66.3873%" y="1087.50"></text></g><g><title>syscall (18 samples, 0.09%)</title><rect x="66.1421%" y="1061" width="0.0866%" height="15" fill="rgb(246,145,19)" fg:x="13745" fg:w="18"/><text x="66.3921%" y="1071.50"></text></g><g><title>el0t_64_sync (16 samples, 0.08%)</title><rect x="66.1518%" y="1045" width="0.0770%" height="15" fill="rgb(222,11,46)" fg:x="13747" fg:w="16"/><text x="66.4018%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (16 samples, 0.08%)</title><rect x="66.1518%" y="1029" width="0.0770%" height="15" fill="rgb(245,82,36)" fg:x="13747" fg:w="16"/><text x="66.4018%" y="1039.50"></text></g><g><title>el0_svc (16 samples, 0.08%)</title><rect x="66.1518%" y="1013" width="0.0770%" height="15" fill="rgb(250,73,51)" fg:x="13747" fg:w="16"/><text x="66.4018%" y="1023.50"></text></g><g><title>do_notify_resume (3 samples, 0.01%)</title><rect x="66.2143%" y="997" width="0.0144%" height="15" fill="rgb(221,189,23)" fg:x="13760" fg:w="3"/><text x="66.4643%" y="1007.50"></text></g><g><title>&lt;tiny_http::IncomingRequests as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.14%)</title><rect x="66.1085%" y="1173" width="0.1444%" height="15" fill="rgb(210,33,7)" fg:x="13738" fg:w="30"/><text x="66.3585%" y="1183.50"></text></g><g><title>tiny_http::Server::recv (28 samples, 0.13%)</title><rect x="66.1181%" y="1157" width="0.1347%" height="15" fill="rgb(210,107,22)" fg:x="13740" fg:w="28"/><text x="66.3681%" y="1167.50"></text></g><g><title>tiny_http::util::messages_queue::MessagesQueue&lt;T&gt;::pop (27 samples, 0.13%)</title><rect x="66.1229%" y="1141" width="0.1299%" height="15" fill="rgb(222,116,37)" fg:x="13741" fg:w="27"/><text x="66.3729%" y="1151.50"></text></g><g><title>std::sync::condvar::Condvar::wait (26 samples, 0.13%)</title><rect x="66.1277%" y="1125" width="0.1251%" height="15" fill="rgb(254,17,48)" fg:x="13742" fg:w="26"/><text x="66.3777%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (25 samples, 0.12%)</title><rect x="66.1325%" y="1109" width="0.1203%" height="15" fill="rgb(224,36,32)" fg:x="13743" fg:w="25"/><text x="66.3825%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (24 samples, 0.12%)</title><rect x="66.1373%" y="1093" width="0.1155%" height="15" fill="rgb(232,90,46)" fg:x="13744" fg:w="24"/><text x="66.3873%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (5 samples, 0.02%)</title><rect x="66.2288%" y="1077" width="0.0241%" height="15" fill="rgb(241,66,40)" fg:x="13763" fg:w="5"/><text x="66.4788%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.02%)</title><rect x="66.2288%" y="1061" width="0.0241%" height="15" fill="rgb(249,184,29)" fg:x="13763" fg:w="5"/><text x="66.4788%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.02%)</title><rect x="66.2288%" y="1045" width="0.0241%" height="15" fill="rgb(231,181,1)" fg:x="13763" fg:w="5"/><text x="66.4788%" y="1055.50"></text></g><g><title>__aarch64_cas4_acq (5 samples, 0.02%)</title><rect x="66.2288%" y="1029" width="0.0241%" height="15" fill="rgb(224,94,2)" fg:x="13763" fg:w="5"/><text x="66.4788%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;()&gt;&gt; (3 samples, 0.01%)</title><rect x="66.2528%" y="1141" width="0.0144%" height="15" fill="rgb(229,170,15)" fg:x="13768" fg:w="3"/><text x="66.5028%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinInner&lt;()&gt;&gt; (3 samples, 0.01%)</title><rect x="66.2528%" y="1125" width="0.0144%" height="15" fill="rgb(240,127,35)" fg:x="13768" fg:w="3"/><text x="66.5028%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::thread::Thread&gt; (3 samples, 0.01%)</title><rect x="66.2528%" y="1109" width="0.0144%" height="15" fill="rgb(248,196,34)" fg:x="13768" fg:w="3"/><text x="66.5028%" y="1119.50"></text></g><g><title>pthread_attr_init (5 samples, 0.02%)</title><rect x="66.2865%" y="1061" width="0.0241%" height="15" fill="rgb(236,137,7)" fg:x="13775" fg:w="5"/><text x="66.5365%" y="1071.50"></text></g><g><title>__getpagesize (5 samples, 0.02%)</title><rect x="66.2865%" y="1045" width="0.0241%" height="15" fill="rgb(235,127,16)" fg:x="13775" fg:w="5"/><text x="66.5365%" y="1055.50"></text></g><g><title>arch_local_irq_restore (24 samples, 0.12%)</title><rect x="66.3346%" y="869" width="0.1155%" height="15" fill="rgb(250,192,54)" fg:x="13785" fg:w="24"/><text x="66.5846%" y="879.50"></text></g><g><title>alloc_pid (6 samples, 0.03%)</title><rect x="66.4646%" y="853" width="0.0289%" height="15" fill="rgb(218,98,20)" fg:x="13812" fg:w="6"/><text x="66.7146%" y="863.50"></text></g><g><title>cgroup_can_fork (5 samples, 0.02%)</title><rect x="66.5223%" y="853" width="0.0241%" height="15" fill="rgb(230,176,47)" fg:x="13824" fg:w="5"/><text x="66.7723%" y="863.50"></text></g><g><title>pids_can_fork (4 samples, 0.02%)</title><rect x="66.5271%" y="837" width="0.0192%" height="15" fill="rgb(244,2,33)" fg:x="13825" fg:w="4"/><text x="66.7771%" y="847.50"></text></g><g><title>alloc_vmap_area (20 samples, 0.10%)</title><rect x="66.5800%" y="789" width="0.0962%" height="15" fill="rgb(231,100,17)" fg:x="13836" fg:w="20"/><text x="66.8300%" y="799.50"></text></g><g><title>insert_vmap_area.constprop.0 (6 samples, 0.03%)</title><rect x="66.6474%" y="773" width="0.0289%" height="15" fill="rgb(245,23,12)" fg:x="13850" fg:w="6"/><text x="66.8974%" y="783.50"></text></g><g><title>__get_vm_area_node.constprop.0 (21 samples, 0.10%)</title><rect x="66.5800%" y="805" width="0.1011%" height="15" fill="rgb(249,55,22)" fg:x="13836" fg:w="21"/><text x="66.8300%" y="815.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="66.6859%" y="757" width="0.0337%" height="15" fill="rgb(207,134,9)" fg:x="13858" fg:w="7"/><text x="66.9359%" y="767.50"></text></g><g><title>rmqueue (4 samples, 0.02%)</title><rect x="66.7004%" y="741" width="0.0192%" height="15" fill="rgb(218,134,0)" fg:x="13861" fg:w="4"/><text x="66.9504%" y="751.50"></text></g><g><title>__alloc_pages (11 samples, 0.05%)</title><rect x="66.6811%" y="773" width="0.0529%" height="15" fill="rgb(213,212,33)" fg:x="13857" fg:w="11"/><text x="66.9311%" y="783.50"></text></g><g><title>prepare_alloc_pages.constprop.0 (3 samples, 0.01%)</title><rect x="66.7196%" y="757" width="0.0144%" height="15" fill="rgb(252,106,18)" fg:x="13865" fg:w="3"/><text x="66.9696%" y="767.50"></text></g><g><title>alloc_pages (12 samples, 0.06%)</title><rect x="66.6811%" y="789" width="0.0577%" height="15" fill="rgb(208,126,42)" fg:x="13857" fg:w="12"/><text x="66.9311%" y="799.50"></text></g><g><title>alloc_thread_stack_node (37 samples, 0.18%)</title><rect x="66.5704%" y="837" width="0.1780%" height="15" fill="rgb(246,175,29)" fg:x="13834" fg:w="37"/><text x="66.8204%" y="847.50"></text></g><g><title>__vmalloc_node_range (35 samples, 0.17%)</title><rect x="66.5800%" y="821" width="0.1684%" height="15" fill="rgb(215,13,50)" fg:x="13836" fg:w="35"/><text x="66.8300%" y="831.50"></text></g><g><title>__vmalloc_area_node.constprop.0 (14 samples, 0.07%)</title><rect x="66.6811%" y="805" width="0.0674%" height="15" fill="rgb(216,172,15)" fg:x="13857" fg:w="14"/><text x="66.9311%" y="815.50"></text></g><g><title>memcg_slab_post_alloc_hook (4 samples, 0.02%)</title><rect x="66.7870%" y="821" width="0.0192%" height="15" fill="rgb(212,103,13)" fg:x="13879" fg:w="4"/><text x="67.0370%" y="831.50"></text></g><g><title>kmem_cache_alloc_node (12 samples, 0.06%)</title><rect x="66.7629%" y="837" width="0.0577%" height="15" fill="rgb(231,171,36)" fg:x="13874" fg:w="12"/><text x="67.0129%" y="847.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (3 samples, 0.01%)</title><rect x="66.8062%" y="821" width="0.0144%" height="15" fill="rgb(250,123,20)" fg:x="13883" fg:w="3"/><text x="67.0562%" y="831.50"></text></g><g><title>dup_task_struct (54 samples, 0.26%)</title><rect x="66.5656%" y="853" width="0.2599%" height="15" fill="rgb(212,53,50)" fg:x="13833" fg:w="54"/><text x="66.8156%" y="863.50"></text></g><g><title>perf_event_fork (6 samples, 0.03%)</title><rect x="66.8255%" y="853" width="0.0289%" height="15" fill="rgb(243,54,12)" fg:x="13887" fg:w="6"/><text x="67.0755%" y="863.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.03%)</title><rect x="66.8255%" y="837" width="0.0289%" height="15" fill="rgb(234,101,34)" fg:x="13887" fg:w="6"/><text x="67.0755%" y="847.50"></text></g><g><title>perf_iterate_ctx (3 samples, 0.01%)</title><rect x="66.8399%" y="821" width="0.0144%" height="15" fill="rgb(254,67,22)" fg:x="13890" fg:w="3"/><text x="67.0899%" y="831.50"></text></g><g><title>alloc_perf_context (3 samples, 0.01%)</title><rect x="66.8640%" y="805" width="0.0144%" height="15" fill="rgb(250,35,47)" fg:x="13895" fg:w="3"/><text x="67.1140%" y="815.50"></text></g><g><title>mutex_lock (4 samples, 0.02%)</title><rect x="66.8880%" y="789" width="0.0192%" height="15" fill="rgb(226,126,38)" fg:x="13900" fg:w="4"/><text x="67.1380%" y="799.50"></text></g><g><title>mutex_unlock (7 samples, 0.03%)</title><rect x="66.9073%" y="789" width="0.0337%" height="15" fill="rgb(216,138,53)" fg:x="13904" fg:w="7"/><text x="67.1573%" y="799.50"></text></g><g><title>___slab_alloc (5 samples, 0.02%)</title><rect x="67.0179%" y="757" width="0.0241%" height="15" fill="rgb(246,199,43)" fg:x="13927" fg:w="5"/><text x="67.2679%" y="767.50"></text></g><g><title>new_slab (3 samples, 0.01%)</title><rect x="67.0276%" y="741" width="0.0144%" height="15" fill="rgb(232,125,11)" fg:x="13929" fg:w="3"/><text x="67.2776%" y="751.50"></text></g><g><title>allocate_slab (3 samples, 0.01%)</title><rect x="67.0276%" y="725" width="0.0144%" height="15" fill="rgb(218,219,45)" fg:x="13929" fg:w="3"/><text x="67.2776%" y="735.50"></text></g><g><title>kmem_cache_alloc_node (7 samples, 0.03%)</title><rect x="67.0179%" y="773" width="0.0337%" height="15" fill="rgb(216,102,54)" fg:x="13927" fg:w="7"/><text x="67.2679%" y="783.50"></text></g><g><title>memset (5 samples, 0.02%)</title><rect x="67.0516%" y="773" width="0.0241%" height="15" fill="rgb(250,228,7)" fg:x="13934" fg:w="5"/><text x="67.3016%" y="783.50"></text></g><g><title>inherit_event.constprop.0 (45 samples, 0.22%)</title><rect x="66.8832%" y="805" width="0.2165%" height="15" fill="rgb(226,125,25)" fg:x="13899" fg:w="45"/><text x="67.1332%" y="815.50"></text></g><g><title>perf_event_alloc (33 samples, 0.16%)</title><rect x="66.9410%" y="789" width="0.1588%" height="15" fill="rgb(224,165,27)" fg:x="13911" fg:w="33"/><text x="67.1910%" y="799.50"></text></g><g><title>perf_init_event (5 samples, 0.02%)</title><rect x="67.0757%" y="773" width="0.0241%" height="15" fill="rgb(233,86,3)" fg:x="13939" fg:w="5"/><text x="67.3257%" y="783.50"></text></g><g><title>inherit_task_group.isra.0 (51 samples, 0.25%)</title><rect x="66.8592%" y="821" width="0.2454%" height="15" fill="rgb(228,116,20)" fg:x="13894" fg:w="51"/><text x="67.1092%" y="831.50"></text></g><g><title>perf_event_init_context (52 samples, 0.25%)</title><rect x="66.8592%" y="837" width="0.2502%" height="15" fill="rgb(209,192,17)" fg:x="13894" fg:w="52"/><text x="67.1092%" y="847.50"></text></g><g><title>perf_event_init_task (55 samples, 0.26%)</title><rect x="66.8543%" y="853" width="0.2647%" height="15" fill="rgb(224,88,34)" fg:x="13893" fg:w="55"/><text x="67.1043%" y="863.50"></text></g><g><title>sched_fork (3 samples, 0.01%)</title><rect x="67.1383%" y="853" width="0.0144%" height="15" fill="rgb(233,38,6)" fg:x="13952" fg:w="3"/><text x="67.3883%" y="863.50"></text></g><g><title>__sched_fork (3 samples, 0.01%)</title><rect x="67.1383%" y="837" width="0.0144%" height="15" fill="rgb(212,59,30)" fg:x="13952" fg:w="3"/><text x="67.3883%" y="847.50"></text></g><g><title>security_task_alloc (3 samples, 0.01%)</title><rect x="67.1527%" y="853" width="0.0144%" height="15" fill="rgb(213,80,3)" fg:x="13955" fg:w="3"/><text x="67.4027%" y="863.50"></text></g><g><title>copy_process (151 samples, 0.73%)</title><rect x="66.4549%" y="869" width="0.7266%" height="15" fill="rgb(251,178,7)" fg:x="13810" fg:w="151"/><text x="66.7049%" y="879.50"></text></g><g><title>kernel_clone (180 samples, 0.87%)</title><rect x="66.3298%" y="885" width="0.8662%" height="15" fill="rgb(213,154,26)" fg:x="13784" fg:w="180"/><text x="66.5798%" y="895.50"></text></g><g><title>__do_sys_clone (182 samples, 0.88%)</title><rect x="66.3298%" y="901" width="0.8758%" height="15" fill="rgb(238,165,49)" fg:x="13784" fg:w="182"/><text x="66.5798%" y="911.50"></text></g><g><title>[libc.so.6] (184 samples, 0.89%)</title><rect x="66.3250%" y="1045" width="0.8854%" height="15" fill="rgb(248,91,46)" fg:x="13783" fg:w="184"/><text x="66.5750%" y="1055.50"></text></g><g><title>clone (184 samples, 0.89%)</title><rect x="66.3250%" y="1029" width="0.8854%" height="15" fill="rgb(244,21,52)" fg:x="13783" fg:w="184"/><text x="66.5750%" y="1039.50"></text></g><g><title>el0t_64_sync (183 samples, 0.88%)</title><rect x="66.3298%" y="1013" width="0.8806%" height="15" fill="rgb(247,122,20)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="1023.50"></text></g><g><title>el0t_64_sync_handler (183 samples, 0.88%)</title><rect x="66.3298%" y="997" width="0.8806%" height="15" fill="rgb(218,27,9)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="1007.50"></text></g><g><title>el0_svc (183 samples, 0.88%)</title><rect x="66.3298%" y="981" width="0.8806%" height="15" fill="rgb(246,7,6)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="991.50"></text></g><g><title>do_el0_svc (183 samples, 0.88%)</title><rect x="66.3298%" y="965" width="0.8806%" height="15" fill="rgb(227,135,54)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="975.50"></text></g><g><title>el0_svc_common.constprop.0 (183 samples, 0.88%)</title><rect x="66.3298%" y="949" width="0.8806%" height="15" fill="rgb(247,14,11)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="959.50"></text></g><g><title>invoke_syscall (183 samples, 0.88%)</title><rect x="66.3298%" y="933" width="0.8806%" height="15" fill="rgb(206,149,34)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="943.50"></text></g><g><title>__arm64_sys_clone (183 samples, 0.88%)</title><rect x="66.3298%" y="917" width="0.8806%" height="15" fill="rgb(227,228,4)" fg:x="13784" fg:w="183"/><text x="66.5798%" y="927.50"></text></g><g><title>_dl_allocate_tls_init (4 samples, 0.02%)</title><rect x="67.2104%" y="1045" width="0.0192%" height="15" fill="rgb(238,218,28)" fg:x="13967" fg:w="4"/><text x="67.4604%" y="1055.50"></text></g><g><title>el0t_64_sync (6 samples, 0.03%)</title><rect x="67.2297%" y="1045" width="0.0289%" height="15" fill="rgb(252,86,40)" fg:x="13971" fg:w="6"/><text x="67.4797%" y="1055.50"></text></g><g><title>el0t_64_sync_handler (6 samples, 0.03%)</title><rect x="67.2297%" y="1029" width="0.0289%" height="15" fill="rgb(251,225,11)" fg:x="13971" fg:w="6"/><text x="67.4797%" y="1039.50"></text></g><g><title>el0_svc (6 samples, 0.03%)</title><rect x="67.2297%" y="1013" width="0.0289%" height="15" fill="rgb(206,46,49)" fg:x="13971" fg:w="6"/><text x="67.4797%" y="1023.50"></text></g><g><title>do_el0_svc (6 samples, 0.03%)</title><rect x="67.2297%" y="997" width="0.0289%" height="15" fill="rgb(245,128,24)" fg:x="13971" fg:w="6"/><text x="67.4797%" y="1007.50"></text></g><g><title>el0_svc_common.constprop.0 (6 samples, 0.03%)</title><rect x="67.2297%" y="981" width="0.0289%" height="15" fill="rgb(219,177,34)" fg:x="13971" fg:w="6"/><text x="67.4797%" y="991.50"></text></g><g><title>invoke_syscall (4 samples, 0.02%)</title><rect x="67.2393%" y="965" width="0.0192%" height="15" fill="rgb(218,60,48)" fg:x="13973" fg:w="4"/><text x="67.4893%" y="975.50"></text></g><g><title>pthread_create (198 samples, 0.95%)</title><rect x="66.3106%" y="1061" width="0.9528%" height="15" fill="rgb(221,11,5)" fg:x="13780" fg:w="198"/><text x="66.5606%" y="1071.50"></text></g><g><title>std::sys::unix::thread::Thread::new (205 samples, 0.99%)</title><rect x="66.2817%" y="1077" width="0.9865%" height="15" fill="rgb(220,148,13)" fg:x="13774" fg:w="205"/><text x="66.5317%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (3 samples, 0.01%)</title><rect x="67.2730%" y="1029" width="0.0144%" height="15" fill="rgb(210,16,3)" fg:x="13980" fg:w="3"/><text x="67.5230%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="67.2730%" y="1013" width="0.0144%" height="15" fill="rgb(236,80,2)" fg:x="13980" fg:w="3"/><text x="67.5230%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="67.2730%" y="997" width="0.0144%" height="15" fill="rgb(239,129,19)" fg:x="13980" fg:w="3"/><text x="67.5230%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="67.2730%" y="981" width="0.0144%" height="15" fill="rgb(220,106,35)" fg:x="13980" fg:w="3"/><text x="67.5230%" y="991.50"></text></g><g><title>std::panic::catch_unwind (247 samples, 1.19%)</title><rect x="66.1037%" y="1349" width="1.1886%" height="15" fill="rgb(252,139,45)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1359.50"></text></g><g><title>std::panicking::try (247 samples, 1.19%)</title><rect x="66.1037%" y="1333" width="1.1886%" height="15" fill="rgb(229,8,36)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (247 samples, 1.19%)</title><rect x="66.1037%" y="1317" width="1.1886%" height="15" fill="rgb(230,126,33)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (247 samples, 1.19%)</title><rect x="66.1037%" y="1301" width="1.1886%" height="15" fill="rgb(239,140,21)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1311.50"></text></g><g><title>std::rt::lang_start::{{closure}} (247 samples, 1.19%)</title><rect x="66.1037%" y="1285" width="1.1886%" height="15" fill="rgb(254,104,9)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (247 samples, 1.19%)</title><rect x="66.1037%" y="1269" width="1.1886%" height="15" fill="rgb(239,52,14)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (247 samples, 1.19%)</title><rect x="66.1037%" y="1253" width="1.1886%" height="15" fill="rgb(208,227,44)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1263.50"></text></g><g><title>brc20_finance::main (247 samples, 1.19%)</title><rect x="66.1037%" y="1237" width="1.1886%" height="15" fill="rgb(246,18,19)" fg:x="13737" fg:w="247"/><text x="66.3537%" y="1247.50"></text></g><g><title>server::start_server (246 samples, 1.18%)</title><rect x="66.1085%" y="1221" width="1.1838%" height="15" fill="rgb(235,228,25)" fg:x="13738" fg:w="246"/><text x="66.3585%" y="1231.50"></text></g><g><title>rouille::start_server (246 samples, 1.18%)</title><rect x="66.1085%" y="1205" width="1.1838%" height="15" fill="rgb(240,156,20)" fg:x="13738" fg:w="246"/><text x="66.3585%" y="1215.50"></text></g><g><title>rouille::Server&lt;F&gt;::run (246 samples, 1.18%)</title><rect x="66.1085%" y="1189" width="1.1838%" height="15" fill="rgb(224,8,20)" fg:x="13738" fg:w="246"/><text x="66.3585%" y="1199.50"></text></g><g><title>rouille::Server&lt;F&gt;::process (216 samples, 1.04%)</title><rect x="66.2528%" y="1173" width="1.0394%" height="15" fill="rgb(214,12,52)" fg:x="13768" fg:w="216"/><text x="66.5028%" y="1183.50"></text></g><g><title>rouille::Executor::execute (216 samples, 1.04%)</title><rect x="66.2528%" y="1157" width="1.0394%" height="15" fill="rgb(211,220,47)" fg:x="13768" fg:w="216"/><text x="66.5028%" y="1167.50"></text></g><g><title>std::thread::spawn (212 samples, 1.02%)</title><rect x="66.2721%" y="1141" width="1.0202%" height="15" fill="rgb(250,173,5)" fg:x="13772" fg:w="212"/><text x="66.5221%" y="1151.50"></text></g><g><title>std::thread::Builder::spawn (211 samples, 1.02%)</title><rect x="66.2769%" y="1125" width="1.0154%" height="15" fill="rgb(250,125,52)" fg:x="13773" fg:w="211"/><text x="66.5269%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (211 samples, 1.02%)</title><rect x="66.2769%" y="1109" width="1.0154%" height="15" fill="rgb(209,133,18)" fg:x="13773" fg:w="211"/><text x="66.5269%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (211 samples, 1.02%)</title><rect x="66.2769%" y="1093" width="1.0154%" height="15" fill="rgb(216,173,22)" fg:x="13773" fg:w="211"/><text x="66.5269%" y="1103.50"></text></g><g><title>std::thread::Thread::new (5 samples, 0.02%)</title><rect x="67.2682%" y="1077" width="0.0241%" height="15" fill="rgb(205,3,22)" fg:x="13979" fg:w="5"/><text x="67.5182%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (4 samples, 0.02%)</title><rect x="67.2730%" y="1061" width="0.0192%" height="15" fill="rgb(248,22,20)" fg:x="13980" fg:w="4"/><text x="67.5230%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (4 samples, 0.02%)</title><rect x="67.2730%" y="1045" width="0.0192%" height="15" fill="rgb(233,6,29)" fg:x="13980" fg:w="4"/><text x="67.5230%" y="1055.50"></text></g><g><title>_start (248 samples, 1.19%)</title><rect x="66.1037%" y="1493" width="1.1934%" height="15" fill="rgb(240,22,54)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1503.50"></text></g><g><title>__libc_start_main (248 samples, 1.19%)</title><rect x="66.1037%" y="1477" width="1.1934%" height="15" fill="rgb(231,133,32)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1487.50"></text></g><g><title>[libc.so.6] (248 samples, 1.19%)</title><rect x="66.1037%" y="1461" width="1.1934%" height="15" fill="rgb(248,193,4)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1471.50"></text></g><g><title>main (248 samples, 1.19%)</title><rect x="66.1037%" y="1445" width="1.1934%" height="15" fill="rgb(211,178,46)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1455.50"></text></g><g><title>std::rt::lang_start_internal (248 samples, 1.19%)</title><rect x="66.1037%" y="1429" width="1.1934%" height="15" fill="rgb(224,5,42)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (248 samples, 1.19%)</title><rect x="66.1037%" y="1413" width="1.1934%" height="15" fill="rgb(239,176,25)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1423.50"></text></g><g><title>std::panicking::try (248 samples, 1.19%)</title><rect x="66.1037%" y="1397" width="1.1934%" height="15" fill="rgb(245,187,50)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (248 samples, 1.19%)</title><rect x="66.1037%" y="1381" width="1.1934%" height="15" fill="rgb(248,24,15)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1391.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (248 samples, 1.19%)</title><rect x="66.1037%" y="1365" width="1.1934%" height="15" fill="rgb(205,166,13)" fg:x="13737" fg:w="248"/><text x="66.3537%" y="1375.50"></text></g><g><title>el0_da (3 samples, 0.01%)</title><rect x="67.2971%" y="1461" width="0.0144%" height="15" fill="rgb(208,114,23)" fg:x="13985" fg:w="3"/><text x="67.5471%" y="1471.50"></text></g><g><title>el0t_64_sync (4 samples, 0.02%)</title><rect x="67.2971%" y="1493" width="0.0192%" height="15" fill="rgb(239,127,18)" fg:x="13985" fg:w="4"/><text x="67.5471%" y="1503.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.02%)</title><rect x="67.2971%" y="1477" width="0.0192%" height="15" fill="rgb(219,154,28)" fg:x="13985" fg:w="4"/><text x="67.5471%" y="1487.50"></text></g><g><title>arch_local_irq_enable (31 samples, 0.15%)</title><rect x="67.3211%" y="1461" width="0.1492%" height="15" fill="rgb(225,157,23)" fg:x="13990" fg:w="31"/><text x="67.5711%" y="1471.50"></text></g><g><title>ret_from_fork (38 samples, 0.18%)</title><rect x="67.3163%" y="1493" width="0.1829%" height="15" fill="rgb(219,8,6)" fg:x="13989" fg:w="38"/><text x="67.5663%" y="1503.50"></text></g><g><title>schedule_tail (37 samples, 0.18%)</title><rect x="67.3211%" y="1477" width="0.1780%" height="15" fill="rgb(212,47,6)" fg:x="13990" fg:w="37"/><text x="67.5711%" y="1487.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="67.4751%" y="1461" width="0.0241%" height="15" fill="rgb(224,190,4)" fg:x="14022" fg:w="5"/><text x="67.7251%" y="1471.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (5 samples, 0.02%)</title><rect x="67.5184%" y="1445" width="0.0241%" height="15" fill="rgb(239,183,29)" fg:x="14031" fg:w="5"/><text x="67.7684%" y="1455.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash::{{closure}} (4 samples, 0.02%)</title><rect x="67.5232%" y="1429" width="0.0192%" height="15" fill="rgb(213,57,7)" fg:x="14032" fg:w="4"/><text x="67.7732%" y="1439.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::default::Default&gt;::default (4 samples, 0.02%)</title><rect x="67.5232%" y="1413" width="0.0192%" height="15" fill="rgb(216,148,1)" fg:x="14032" fg:w="4"/><text x="67.7732%" y="1423.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (4 samples, 0.02%)</title><rect x="67.5232%" y="1397" width="0.0192%" height="15" fill="rgb(236,182,29)" fg:x="14032" fg:w="4"/><text x="67.7732%" y="1407.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="67.5521%" y="1381" width="0.0192%" height="15" fill="rgb(244,120,48)" fg:x="14038" fg:w="4"/><text x="67.8021%" y="1391.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="67.5521%" y="1365" width="0.0192%" height="15" fill="rgb(206,71,34)" fg:x="14038" fg:w="4"/><text x="67.8021%" y="1375.50"></text></g><g><title>mdb_txn_abort (3 samples, 0.01%)</title><rect x="67.5713%" y="1381" width="0.0144%" height="15" fill="rgb(242,32,6)" fg:x="14042" fg:w="3"/><text x="67.8213%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (12 samples, 0.06%)</title><rect x="67.5473%" y="1429" width="0.0577%" height="15" fill="rgb(241,35,3)" fg:x="14037" fg:w="12"/><text x="67.7973%" y="1439.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.05%)</title><rect x="67.5521%" y="1413" width="0.0529%" height="15" fill="rgb(222,62,19)" fg:x="14038" fg:w="11"/><text x="67.8021%" y="1423.50"></text></g><g><title>heed::txn::abort_txn (11 samples, 0.05%)</title><rect x="67.5521%" y="1397" width="0.0529%" height="15" fill="rgb(223,110,41)" fg:x="14038" fg:w="11"/><text x="67.8021%" y="1407.50"></text></g><g><title>mdb_txn_end (4 samples, 0.02%)</title><rect x="67.5858%" y="1381" width="0.0192%" height="15" fill="rgb(208,224,4)" fg:x="14045" fg:w="4"/><text x="67.8358%" y="1391.50"></text></g><g><title>mdb_node_search (5 samples, 0.02%)</title><rect x="67.6580%" y="1365" width="0.0241%" height="15" fill="rgb(241,137,19)" fg:x="14060" fg:w="5"/><text x="67.9080%" y="1375.50"></text></g><g><title>mdb_cmp_memn (4 samples, 0.02%)</title><rect x="67.6628%" y="1349" width="0.0192%" height="15" fill="rgb(244,24,17)" fg:x="14061" fg:w="4"/><text x="67.9128%" y="1359.50"></text></g><g><title>mdb_cursor_init (13 samples, 0.06%)</title><rect x="67.6387%" y="1397" width="0.0626%" height="15" fill="rgb(245,178,49)" fg:x="14056" fg:w="13"/><text x="67.8887%" y="1407.50"></text></g><g><title>mdb_page_search (13 samples, 0.06%)</title><rect x="67.6387%" y="1381" width="0.0626%" height="15" fill="rgb(219,160,38)" fg:x="14056" fg:w="13"/><text x="67.8887%" y="1391.50"></text></g><g><title>mdb_page_search (4 samples, 0.02%)</title><rect x="67.6820%" y="1365" width="0.0192%" height="15" fill="rgb(228,137,14)" fg:x="14065" fg:w="4"/><text x="67.9320%" y="1375.50"></text></g><g><title>mdb_node_search (3 samples, 0.01%)</title><rect x="67.7061%" y="1381" width="0.0144%" height="15" fill="rgb(237,134,11)" fg:x="14070" fg:w="3"/><text x="67.9561%" y="1391.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (23 samples, 0.11%)</title><rect x="67.6146%" y="1429" width="0.1107%" height="15" fill="rgb(211,126,44)" fg:x="14051" fg:w="23"/><text x="67.8646%" y="1439.50"></text></g><g><title>mdb_get (19 samples, 0.09%)</title><rect x="67.6339%" y="1413" width="0.0914%" height="15" fill="rgb(226,171,33)" fg:x="14055" fg:w="19"/><text x="67.8839%" y="1423.50"></text></g><g><title>mdb_cursor_set (5 samples, 0.02%)</title><rect x="67.7013%" y="1397" width="0.0241%" height="15" fill="rgb(253,99,13)" fg:x="14069" fg:w="5"/><text x="67.9513%" y="1407.50"></text></g><g><title>[libc.so.6] (304 samples, 1.46%)</title><rect x="67.7301%" y="1381" width="1.4629%" height="15" fill="rgb(244,48,7)" fg:x="14075" fg:w="304"/><text x="67.9801%" y="1391.50"></text></g><g><title>__libc_calloc (59 samples, 0.28%)</title><rect x="69.1930%" y="1381" width="0.2839%" height="15" fill="rgb(244,217,54)" fg:x="14379" fg:w="59"/><text x="69.4430%" y="1391.50"></text></g><g><title>[libc.so.6] (59 samples, 0.28%)</title><rect x="69.1930%" y="1365" width="0.2839%" height="15" fill="rgb(224,15,18)" fg:x="14379" fg:w="59"/><text x="69.4430%" y="1375.50"></text></g><g><title>[libc.so.6] (38 samples, 0.18%)</title><rect x="69.2941%" y="1349" width="0.1829%" height="15" fill="rgb(244,99,12)" fg:x="14400" fg:w="38"/><text x="69.5441%" y="1359.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="69.4096%" y="1333" width="0.0674%" height="15" fill="rgb(233,226,8)" fg:x="14424" fg:w="14"/><text x="69.6596%" y="1343.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash (415 samples, 2.00%)</title><rect x="67.5136%" y="1461" width="1.9970%" height="15" fill="rgb(229,211,3)" fg:x="14030" fg:w="415"/><text x="67.7636%" y="1471.50">&lt;..</text></g><g><title>db::DB::read_from_code_map (409 samples, 1.97%)</title><rect x="67.5425%" y="1445" width="1.9681%" height="15" fill="rgb(216,140,21)" fg:x="14036" fg:w="409"/><text x="67.7925%" y="1455.50">d..</text></g><g><title>heed::env::Env::read_txn (371 samples, 1.79%)</title><rect x="67.7253%" y="1429" width="1.7853%" height="15" fill="rgb(234,122,30)" fg:x="14074" fg:w="371"/><text x="67.9753%" y="1439.50">h..</text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (371 samples, 1.79%)</title><rect x="67.7253%" y="1413" width="1.7853%" height="15" fill="rgb(236,25,46)" fg:x="14074" fg:w="371"/><text x="67.9753%" y="1423.50">h..</text></g><g><title>mdb_txn_begin (371 samples, 1.79%)</title><rect x="67.7253%" y="1397" width="1.7853%" height="15" fill="rgb(217,52,54)" fg:x="14074" fg:w="371"/><text x="67.9753%" y="1407.50">m..</text></g><g><title>mdb_txn_renew0 (7 samples, 0.03%)</title><rect x="69.4769%" y="1381" width="0.0337%" height="15" fill="rgb(222,29,26)" fg:x="14438" fg:w="7"/><text x="69.7269%" y="1391.50"></text></g><g><title>db::CacheVal&lt;T&gt;::get_current (4 samples, 0.02%)</title><rect x="69.5299%" y="1445" width="0.0192%" height="15" fill="rgb(216,177,29)" fg:x="14449" fg:w="4"/><text x="69.7799%" y="1455.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="69.5299%" y="1429" width="0.0192%" height="15" fill="rgb(247,136,51)" fg:x="14449" fg:w="4"/><text x="69.7799%" y="1439.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="69.5299%" y="1413" width="0.0192%" height="15" fill="rgb(231,47,47)" fg:x="14449" fg:w="4"/><text x="69.7799%" y="1423.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="69.5299%" y="1397" width="0.0192%" height="15" fill="rgb(211,192,36)" fg:x="14449" fg:w="4"/><text x="69.7799%" y="1407.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="69.5299%" y="1381" width="0.0192%" height="15" fill="rgb(229,156,32)" fg:x="14449" fg:w="4"/><text x="69.7799%" y="1391.50"></text></g><g><title>&lt;revm_primitives::bytecode::BytecodeState as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="69.5347%" y="1365" width="0.0144%" height="15" fill="rgb(248,213,20)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1375.50"></text></g><g><title>&lt;revm_primitives::bytecode::JumpMap as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="69.5347%" y="1349" width="0.0144%" height="15" fill="rgb(217,64,7)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="69.5347%" y="1333" width="0.0144%" height="15" fill="rgb(232,142,8)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.01%)</title><rect x="69.5347%" y="1317" width="0.0144%" height="15" fill="rgb(224,92,44)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="69.5347%" y="1301" width="0.0144%" height="15" fill="rgb(214,169,17)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1311.50"></text></g><g><title>__aarch64_ldadd8_relax (3 samples, 0.01%)</title><rect x="69.5347%" y="1285" width="0.0144%" height="15" fill="rgb(210,59,37)" fg:x="14450" fg:w="3"/><text x="69.7847%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.01%)</title><rect x="69.5491%" y="1445" width="0.0144%" height="15" fill="rgb(214,116,48)" fg:x="14453" fg:w="3"/><text x="69.7991%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="69.5491%" y="1429" width="0.0144%" height="15" fill="rgb(244,191,6)" fg:x="14453" fg:w="3"/><text x="69.7991%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.01%)</title><rect x="69.5491%" y="1413" width="0.0144%" height="15" fill="rgb(241,50,52)" fg:x="14453" fg:w="3"/><text x="69.7991%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="69.5491%" y="1397" width="0.0144%" height="15" fill="rgb(236,75,39)" fg:x="14453" fg:w="3"/><text x="69.7991%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.01%)</title><rect x="69.5491%" y="1381" width="0.0144%" height="15" fill="rgb(236,99,0)" fg:x="14453" fg:w="3"/><text x="69.7991%" y="1391.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="69.5876%" y="1397" width="0.0192%" height="15" fill="rgb(207,202,15)" fg:x="14461" fg:w="4"/><text x="69.8376%" y="1407.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (18 samples, 0.09%)</title><rect x="69.5684%" y="1445" width="0.0866%" height="15" fill="rgb(233,207,14)" fg:x="14457" fg:w="18"/><text x="69.8184%" y="1455.50"></text></g><g><title>mdb_get (16 samples, 0.08%)</title><rect x="69.5780%" y="1429" width="0.0770%" height="15" fill="rgb(226,27,51)" fg:x="14459" fg:w="16"/><text x="69.8280%" y="1439.50"></text></g><g><title>mdb_cursor_set (14 samples, 0.07%)</title><rect x="69.5876%" y="1413" width="0.0674%" height="15" fill="rgb(206,104,42)" fg:x="14461" fg:w="14"/><text x="69.8376%" y="1423.50"></text></g><g><title>mdb_page_search (10 samples, 0.05%)</title><rect x="69.6069%" y="1397" width="0.0481%" height="15" fill="rgb(212,225,4)" fg:x="14465" fg:w="10"/><text x="69.8569%" y="1407.50"></text></g><g><title>mdb_page_search_root (9 samples, 0.04%)</title><rect x="69.6117%" y="1381" width="0.0433%" height="15" fill="rgb(233,96,42)" fg:x="14466" fg:w="9"/><text x="69.8617%" y="1391.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="69.6357%" y="1365" width="0.0192%" height="15" fill="rgb(229,21,32)" fg:x="14471" fg:w="4"/><text x="69.8857%" y="1375.50"></text></g><g><title>[libc.so.6] (17 samples, 0.08%)</title><rect x="69.6598%" y="1397" width="0.0818%" height="15" fill="rgb(226,216,24)" fg:x="14476" fg:w="17"/><text x="69.9098%" y="1407.50"></text></g><g><title>__libc_calloc (6 samples, 0.03%)</title><rect x="69.7416%" y="1397" width="0.0289%" height="15" fill="rgb(221,163,17)" fg:x="14493" fg:w="6"/><text x="69.9916%" y="1407.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="69.7416%" y="1381" width="0.0289%" height="15" fill="rgb(216,216,42)" fg:x="14493" fg:w="6"/><text x="69.9916%" y="1391.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="69.7560%" y="1365" width="0.0144%" height="15" fill="rgb(240,118,7)" fg:x="14496" fg:w="3"/><text x="70.0060%" y="1375.50"></text></g><g><title>heed::env::Env::read_txn (26 samples, 0.13%)</title><rect x="69.6550%" y="1445" width="0.1251%" height="15" fill="rgb(221,67,37)" fg:x="14475" fg:w="26"/><text x="69.9050%" y="1455.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (26 samples, 0.13%)</title><rect x="69.6550%" y="1429" width="0.1251%" height="15" fill="rgb(241,32,44)" fg:x="14475" fg:w="26"/><text x="69.9050%" y="1439.50"></text></g><g><title>mdb_txn_begin (26 samples, 0.13%)</title><rect x="69.6550%" y="1413" width="0.1251%" height="15" fill="rgb(235,204,43)" fg:x="14475" fg:w="26"/><text x="69.9050%" y="1423.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::basic (475 samples, 2.29%)</title><rect x="67.4992%" y="1477" width="2.2857%" height="15" fill="rgb(213,116,10)" fg:x="14027" fg:w="475"/><text x="67.7492%" y="1487.50">&lt;..</text></g><g><title>db::DB::read_from_account_map (55 samples, 0.26%)</title><rect x="69.5202%" y="1461" width="0.2647%" height="15" fill="rgb(239,15,48)" fg:x="14447" fg:w="55"/><text x="69.7702%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;revm_interpreter::gas::Gas)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="69.7849%" y="1445" width="0.0289%" height="15" fill="rgb(207,123,36)" fg:x="14502" fg:w="6"/><text x="70.0349%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="69.7849%" y="1429" width="0.0289%" height="15" fill="rgb(209,103,30)" fg:x="14502" fg:w="6"/><text x="70.0349%" y="1439.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="69.7849%" y="1413" width="0.0289%" height="15" fill="rgb(238,100,19)" fg:x="14502" fg:w="6"/><text x="70.0349%" y="1423.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="69.7849%" y="1397" width="0.0289%" height="15" fill="rgb(244,30,14)" fg:x="14502" fg:w="6"/><text x="70.0349%" y="1407.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="69.7993%" y="1381" width="0.0144%" height="15" fill="rgb(249,174,6)" fg:x="14505" fg:w="3"/><text x="70.0493%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),db::DB&gt;&gt; (7 samples, 0.03%)</title><rect x="69.7849%" y="1461" width="0.0337%" height="15" fill="rgb(235,213,41)" fg:x="14502" fg:w="7"/><text x="70.0349%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;(),db::DB&gt;&gt; (4 samples, 0.02%)</title><rect x="69.8186%" y="1461" width="0.0192%" height="15" fill="rgb(213,118,6)" fg:x="14509" fg:w="4"/><text x="70.0686%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="69.8186%" y="1445" width="0.0192%" height="15" fill="rgb(235,44,51)" fg:x="14509" fg:w="4"/><text x="70.0686%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="69.8186%" y="1429" width="0.0192%" height="15" fill="rgb(217,9,53)" fg:x="14509" fg:w="4"/><text x="70.0686%" y="1439.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="69.8186%" y="1413" width="0.0192%" height="15" fill="rgb(237,172,34)" fg:x="14509" fg:w="4"/><text x="70.0686%" y="1423.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="69.8186%" y="1397" width="0.0192%" height="15" fill="rgb(206,206,11)" fg:x="14509" fg:w="4"/><text x="70.0686%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::evm::Evm&lt;(),db::DB&gt;,(),db::DB&gt;&gt; (15 samples, 0.07%)</title><rect x="69.7849%" y="1477" width="0.0722%" height="15" fill="rgb(214,149,29)" fg:x="14502" fg:w="15"/><text x="70.0349%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),db::DB&gt;&gt; (4 samples, 0.02%)</title><rect x="69.8378%" y="1461" width="0.0192%" height="15" fill="rgb(208,123,3)" fg:x="14513" fg:w="4"/><text x="70.0878%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::journaled_state::JournaledState&gt; (4 samples, 0.02%)</title><rect x="69.8571%" y="1477" width="0.0192%" height="15" fill="rgb(229,126,4)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;revm::journaled_state::JournalEntry&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="69.8571%" y="1461" width="0.0192%" height="15" fill="rgb(222,92,36)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;revm::journaled_state::JournalEntry&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="69.8571%" y="1445" width="0.0192%" height="15" fill="rgb(216,39,41)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="69.8571%" y="1429" width="0.0192%" height="15" fill="rgb(253,127,28)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="69.8571%" y="1413" width="0.0192%" height="15" fill="rgb(249,152,51)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="69.8571%" y="1397" width="0.0192%" height="15" fill="rgb(209,123,42)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1407.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="69.8571%" y="1381" width="0.0192%" height="15" fill="rgb(241,118,22)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1391.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="69.8571%" y="1365" width="0.0192%" height="15" fill="rgb(208,25,7)" fg:x="14517" fg:w="4"/><text x="70.1071%" y="1375.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="69.9581%" y="1445" width="0.0577%" height="15" fill="rgb(243,144,39)" fg:x="14538" fg:w="12"/><text x="70.2081%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="69.9581%" y="1429" width="0.0577%" height="15" fill="rgb(250,50,5)" fg:x="14538" fg:w="12"/><text x="70.2081%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="70.0255%" y="1413" width="0.0144%" height="15" fill="rgb(207,67,11)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1423.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="70.0255%" y="1397" width="0.0144%" height="15" fill="rgb(245,204,40)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1407.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="70.0255%" y="1381" width="0.0144%" height="15" fill="rgb(238,228,24)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="70.0255%" y="1365" width="0.0144%" height="15" fill="rgb(217,116,22)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="70.0255%" y="1349" width="0.0144%" height="15" fill="rgb(234,98,12)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="70.0255%" y="1333" width="0.0144%" height="15" fill="rgb(242,170,50)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1343.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="70.0255%" y="1317" width="0.0144%" height="15" fill="rgb(235,7,5)" fg:x="14552" fg:w="3"/><text x="70.2755%" y="1327.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::default::Default&gt;::default (35 samples, 0.17%)</title><rect x="70.0159%" y="1445" width="0.1684%" height="15" fill="rgb(241,114,28)" fg:x="14550" fg:w="35"/><text x="70.2659%" y="1455.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (33 samples, 0.16%)</title><rect x="70.0255%" y="1429" width="0.1588%" height="15" fill="rgb(246,112,42)" fg:x="14552" fg:w="33"/><text x="70.2755%" y="1439.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (30 samples, 0.14%)</title><rect x="70.0399%" y="1413" width="0.1444%" height="15" fill="rgb(248,228,14)" fg:x="14555" fg:w="30"/><text x="70.2899%" y="1423.50"></text></g><g><title>tap::pipe::Pipe::pipe (29 samples, 0.14%)</title><rect x="70.0448%" y="1397" width="0.1396%" height="15" fill="rgb(208,133,18)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (29 samples, 0.14%)</title><rect x="70.0448%" y="1381" width="0.1396%" height="15" fill="rgb(207,35,49)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.14%)</title><rect x="70.0448%" y="1365" width="0.1396%" height="15" fill="rgb(205,68,36)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.14%)</title><rect x="70.0448%" y="1349" width="0.1396%" height="15" fill="rgb(245,62,40)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.14%)</title><rect x="70.0448%" y="1333" width="0.1396%" height="15" fill="rgb(228,27,24)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.14%)</title><rect x="70.0448%" y="1317" width="0.1396%" height="15" fill="rgb(253,19,12)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.14%)</title><rect x="70.0448%" y="1301" width="0.1396%" height="15" fill="rgb(232,28,20)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.14%)</title><rect x="70.0448%" y="1285" width="0.1396%" height="15" fill="rgb(218,35,51)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.14%)</title><rect x="70.0448%" y="1269" width="0.1396%" height="15" fill="rgb(212,90,40)" fg:x="14556" fg:w="29"/><text x="70.2948%" y="1279.50"></text></g><g><title>malloc (28 samples, 0.13%)</title><rect x="70.0496%" y="1253" width="0.1347%" height="15" fill="rgb(220,172,12)" fg:x="14557" fg:w="28"/><text x="70.2996%" y="1263.50"></text></g><g><title>[libc.so.6] (25 samples, 0.12%)</title><rect x="70.0640%" y="1237" width="0.1203%" height="15" fill="rgb(226,159,20)" fg:x="14560" fg:w="25"/><text x="70.3140%" y="1247.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="70.1699%" y="1221" width="0.0144%" height="15" fill="rgb(234,205,16)" fg:x="14582" fg:w="3"/><text x="70.4199%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (5 samples, 0.02%)</title><rect x="70.1843%" y="1413" width="0.0241%" height="15" fill="rgb(207,9,39)" fg:x="14585" fg:w="5"/><text x="70.4343%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5 samples, 0.02%)</title><rect x="70.1843%" y="1397" width="0.0241%" height="15" fill="rgb(249,143,15)" fg:x="14585" fg:w="5"/><text x="70.4343%" y="1407.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="70.1843%" y="1381" width="0.0241%" height="15" fill="rgb(253,133,29)" fg:x="14585" fg:w="5"/><text x="70.4343%" y="1391.50"></text></g><g><title>bytes::bytes::shared_drop (4 samples, 0.02%)</title><rect x="70.1891%" y="1365" width="0.0192%" height="15" fill="rgb(221,187,0)" fg:x="14586" fg:w="4"/><text x="70.4391%" y="1375.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.01%)</title><rect x="70.1939%" y="1349" width="0.0144%" height="15" fill="rgb(205,204,26)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1359.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (3 samples, 0.01%)</title><rect x="70.1939%" y="1333" width="0.0144%" height="15" fill="rgb(224,68,54)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1343.50"></text></g><g><title>bytes::bytes::release_shared (3 samples, 0.01%)</title><rect x="70.1939%" y="1317" width="0.0144%" height="15" fill="rgb(209,67,4)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="70.1939%" y="1301" width="0.0144%" height="15" fill="rgb(228,229,18)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="70.1939%" y="1285" width="0.0144%" height="15" fill="rgb(231,89,13)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1295.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="70.1939%" y="1269" width="0.0144%" height="15" fill="rgb(210,182,18)" fg:x="14587" fg:w="3"/><text x="70.4439%" y="1279.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="70.2084%" y="1333" width="0.0144%" height="15" fill="rgb(240,105,2)" fg:x="14590" fg:w="3"/><text x="70.4584%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;bitvec::vec::BitVec&lt;u8&gt;,&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="70.2084%" y="1317" width="0.0144%" height="15" fill="rgb(207,170,50)" fg:x="14590" fg:w="3"/><text x="70.4584%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="70.2084%" y="1301" width="0.0144%" height="15" fill="rgb(232,133,24)" fg:x="14590" fg:w="3"/><text x="70.4584%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.02%)</title><rect x="70.2084%" y="1349" width="0.0241%" height="15" fill="rgb(235,166,27)" fg:x="14590" fg:w="5"/><text x="70.4584%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="70.2324%" y="1349" width="0.0144%" height="15" fill="rgb(209,19,13)" fg:x="14595" fg:w="3"/><text x="70.4824%" y="1359.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="70.2324%" y="1333" width="0.0144%" height="15" fill="rgb(226,79,39)" fg:x="14595" fg:w="3"/><text x="70.4824%" y="1343.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="70.2324%" y="1317" width="0.0144%" height="15" fill="rgb(222,163,10)" fg:x="14595" fg:w="3"/><text x="70.4824%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (16 samples, 0.08%)</title><rect x="70.1843%" y="1445" width="0.0770%" height="15" fill="rgb(214,44,19)" fg:x="14585" fg:w="16"/><text x="70.4343%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (16 samples, 0.08%)</title><rect x="70.1843%" y="1429" width="0.0770%" height="15" fill="rgb(210,217,13)" fg:x="14585" fg:w="16"/><text x="70.4343%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (11 samples, 0.05%)</title><rect x="70.2084%" y="1413" width="0.0529%" height="15" fill="rgb(237,61,54)" fg:x="14590" fg:w="11"/><text x="70.4584%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (11 samples, 0.05%)</title><rect x="70.2084%" y="1397" width="0.0529%" height="15" fill="rgb(226,184,24)" fg:x="14590" fg:w="11"/><text x="70.4584%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (11 samples, 0.05%)</title><rect x="70.2084%" y="1381" width="0.0529%" height="15" fill="rgb(223,226,4)" fg:x="14590" fg:w="11"/><text x="70.4584%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.05%)</title><rect x="70.2084%" y="1365" width="0.0529%" height="15" fill="rgb(210,26,41)" fg:x="14590" fg:w="11"/><text x="70.4584%" y="1375.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="70.2469%" y="1349" width="0.0144%" height="15" fill="rgb(220,221,6)" fg:x="14598" fg:w="3"/><text x="70.4969%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;alloy_primitives::bits::address::Address,revm_primitives::state::Account&gt;&gt; (8 samples, 0.04%)</title><rect x="70.2613%" y="1445" width="0.0385%" height="15" fill="rgb(225,89,49)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(alloy_primitives::bits::address::Address,revm_primitives::state::Account)&gt;&gt; (8 samples, 0.04%)</title><rect x="70.2613%" y="1429" width="0.0385%" height="15" fill="rgb(218,70,45)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="70.2613%" y="1413" width="0.0385%" height="15" fill="rgb(238,166,21)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1423.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::deallocate (8 samples, 0.04%)</title><rect x="70.2613%" y="1397" width="0.0385%" height="15" fill="rgb(224,141,44)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.04%)</title><rect x="70.2613%" y="1381" width="0.0385%" height="15" fill="rgb(230,12,49)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1391.50"></text></g><g><title>free (8 samples, 0.04%)</title><rect x="70.2613%" y="1365" width="0.0385%" height="15" fill="rgb(212,174,12)" fg:x="14601" fg:w="8"/><text x="70.5113%" y="1375.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="70.2661%" y="1349" width="0.0337%" height="15" fill="rgb(246,67,9)" fg:x="14602" fg:w="7"/><text x="70.5161%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;ruint::Uint&lt;256_usize,4_usize&gt;,revm_primitives::state::StorageSlot&gt;&gt; (6 samples, 0.03%)</title><rect x="70.2998%" y="1445" width="0.0289%" height="15" fill="rgb(239,35,23)" fg:x="14609" fg:w="6"/><text x="70.5498%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(ruint::Uint&lt;256_usize,4_usize&gt;,revm_primitives::state::StorageSlot)&gt;&gt; (6 samples, 0.03%)</title><rect x="70.2998%" y="1429" width="0.0289%" height="15" fill="rgb(211,167,0)" fg:x="14609" fg:w="6"/><text x="70.5498%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="70.2998%" y="1413" width="0.0289%" height="15" fill="rgb(225,119,45)" fg:x="14609" fg:w="6"/><text x="70.5498%" y="1423.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="70.3142%" y="1397" width="0.0144%" height="15" fill="rgb(210,162,6)" fg:x="14612" fg:w="3"/><text x="70.5642%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="70.3142%" y="1381" width="0.0144%" height="15" fill="rgb(208,118,35)" fg:x="14612" fg:w="3"/><text x="70.5642%" y="1391.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="70.3142%" y="1365" width="0.0144%" height="15" fill="rgb(239,4,53)" fg:x="14612" fg:w="3"/><text x="70.5642%" y="1375.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="70.4008%" y="1365" width="0.0192%" height="15" fill="rgb(213,130,21)" fg:x="14630" fg:w="4"/><text x="70.6508%" y="1375.50"></text></g><g><title>memcpy (63 samples, 0.30%)</title><rect x="70.4201%" y="1365" width="0.3032%" height="15" fill="rgb(235,148,0)" fg:x="14634" fg:w="63"/><text x="70.6701%" y="1375.50"></text></g><g><title>[libc.so.6] (63 samples, 0.30%)</title><rect x="70.4201%" y="1349" width="0.3032%" height="15" fill="rgb(244,224,18)" fg:x="14634" fg:w="63"/><text x="70.6701%" y="1359.50"></text></g><g><title>db::DB::get_write_txn (84 samples, 0.40%)</title><rect x="70.3287%" y="1445" width="0.4042%" height="15" fill="rgb(211,214,4)" fg:x="14615" fg:w="84"/><text x="70.5787%" y="1455.50"></text></g><g><title>heed::env::Env::write_txn (83 samples, 0.40%)</title><rect x="70.3335%" y="1429" width="0.3994%" height="15" fill="rgb(206,119,25)" fg:x="14616" fg:w="83"/><text x="70.5835%" y="1439.50"></text></g><g><title>heed::txn::RwTxn&lt;T&gt;::new (82 samples, 0.39%)</title><rect x="70.3383%" y="1413" width="0.3946%" height="15" fill="rgb(243,93,47)" fg:x="14617" fg:w="82"/><text x="70.5883%" y="1423.50"></text></g><g><title>mdb_txn_begin (80 samples, 0.38%)</title><rect x="70.3479%" y="1397" width="0.3850%" height="15" fill="rgb(224,194,6)" fg:x="14619" fg:w="80"/><text x="70.5979%" y="1407.50"></text></g><g><title>mdb_txn_renew0 (77 samples, 0.37%)</title><rect x="70.3624%" y="1381" width="0.3705%" height="15" fill="rgb(243,229,6)" fg:x="14622" fg:w="77"/><text x="70.6124%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::state::AccountInfo&gt;&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1429" width="0.0144%" height="15" fill="rgb(207,23,50)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::AccountInfo&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1413" width="0.0144%" height="15" fill="rgb(253,192,32)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1397" width="0.0144%" height="15" fill="rgb(213,21,6)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1381" width="0.0144%" height="15" fill="rgb(243,151,13)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1365" width="0.0144%" height="15" fill="rgb(233,165,41)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1349" width="0.0144%" height="15" fill="rgb(246,176,45)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="70.7473%" y="1333" width="0.0144%" height="15" fill="rgb(217,170,52)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="70.7473%" y="1317" width="0.0144%" height="15" fill="rgb(214,203,54)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="70.7473%" y="1301" width="0.0144%" height="15" fill="rgb(248,215,49)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="70.7473%" y="1285" width="0.0144%" height="15" fill="rgb(208,46,10)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1295.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="70.7473%" y="1269" width="0.0144%" height="15" fill="rgb(254,5,31)" fg:x="14702" fg:w="3"/><text x="70.9973%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,db::CacheVal&lt;revm_primitives::state::AccountInfo&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="70.7666%" y="1429" width="0.0144%" height="15" fill="rgb(222,104,33)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1439.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="70.7666%" y="1413" width="0.0144%" height="15" fill="rgb(248,49,16)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1423.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="70.7666%" y="1397" width="0.0144%" height="15" fill="rgb(232,198,41)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="70.7666%" y="1381" width="0.0144%" height="15" fill="rgb(214,125,3)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="70.7666%" y="1365" width="0.0144%" height="15" fill="rgb(229,220,28)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1375.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="70.7666%" y="1349" width="0.0144%" height="15" fill="rgb(222,64,37)" fg:x="14706" fg:w="3"/><text x="71.0166%" y="1359.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="70.7954%" y="1349" width="0.0241%" height="15" fill="rgb(249,184,13)" fg:x="14712" fg:w="5"/><text x="71.0454%" y="1359.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="70.7954%" y="1333" width="0.0241%" height="15" fill="rgb(252,176,6)" fg:x="14712" fg:w="5"/><text x="71.0454%" y="1343.50"></text></g><g><title>bytes::bytes::static_clone (4 samples, 0.02%)</title><rect x="70.8003%" y="1317" width="0.0192%" height="15" fill="rgb(228,153,7)" fg:x="14713" fg:w="4"/><text x="71.0503%" y="1327.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="70.7858%" y="1413" width="0.0433%" height="15" fill="rgb(242,193,5)" fg:x="14710" fg:w="9"/><text x="71.0358%" y="1423.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="70.7858%" y="1397" width="0.0433%" height="15" fill="rgb(232,140,9)" fg:x="14710" fg:w="9"/><text x="71.0358%" y="1407.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="70.7906%" y="1381" width="0.0385%" height="15" fill="rgb(213,222,16)" fg:x="14711" fg:w="8"/><text x="71.0406%" y="1391.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="70.7906%" y="1365" width="0.0385%" height="15" fill="rgb(222,75,50)" fg:x="14711" fg:w="8"/><text x="71.0406%" y="1375.50"></text></g><g><title>&lt;&amp;A as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="70.8387%" y="1221" width="0.0144%" height="15" fill="rgb(205,180,2)" fg:x="14721" fg:w="3"/><text x="71.0887%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="70.8387%" y="1205" width="0.0144%" height="15" fill="rgb(216,34,7)" fg:x="14721" fg:w="3"/><text x="71.0887%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="70.8387%" y="1189" width="0.0144%" height="15" fill="rgb(253,16,32)" fg:x="14721" fg:w="3"/><text x="71.0887%" y="1199.50"></text></g><g><title>core::mem::drop (5 samples, 0.02%)</title><rect x="70.8387%" y="1269" width="0.0241%" height="15" fill="rgb(208,97,28)" fg:x="14721" fg:w="5"/><text x="71.0887%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;bitvec::vec::BitVec&lt;u8&gt;,&amp;alloc::alloc::Global&gt;&gt; (5 samples, 0.02%)</title><rect x="70.8387%" y="1253" width="0.0241%" height="15" fill="rgb(225,92,11)" fg:x="14721" fg:w="5"/><text x="71.0887%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="70.8387%" y="1237" width="0.0241%" height="15" fill="rgb(243,38,12)" fg:x="14721" fg:w="5"/><text x="71.0887%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.04%)</title><rect x="70.8387%" y="1285" width="0.0385%" height="15" fill="rgb(208,139,16)" fg:x="14721" fg:w="8"/><text x="71.0887%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitvec::vec::BitVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="70.8628%" y="1269" width="0.0144%" height="15" fill="rgb(227,24,9)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1279.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop (3 samples, 0.01%)</title><rect x="70.8628%" y="1253" width="0.0144%" height="15" fill="rgb(206,62,11)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1263.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::with_vec (3 samples, 0.01%)</title><rect x="70.8628%" y="1237" width="0.0144%" height="15" fill="rgb(228,134,27)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1247.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop::{{closure}} (3 samples, 0.01%)</title><rect x="70.8628%" y="1221" width="0.0144%" height="15" fill="rgb(205,55,33)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1231.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (3 samples, 0.01%)</title><rect x="70.8628%" y="1205" width="0.0144%" height="15" fill="rgb(243,75,43)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="70.8628%" y="1189" width="0.0144%" height="15" fill="rgb(223,27,42)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="70.8628%" y="1173" width="0.0144%" height="15" fill="rgb(232,189,33)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="70.8628%" y="1157" width="0.0144%" height="15" fill="rgb(210,9,39)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="70.8628%" y="1141" width="0.0144%" height="15" fill="rgb(242,85,26)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="70.8628%" y="1125" width="0.0144%" height="15" fill="rgb(248,44,4)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1135.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="70.8628%" y="1109" width="0.0144%" height="15" fill="rgb(250,96,46)" fg:x="14726" fg:w="3"/><text x="71.1128%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="70.8772%" y="1285" width="0.0192%" height="15" fill="rgb(229,116,26)" fg:x="14729" fg:w="4"/><text x="71.1272%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="70.8772%" y="1269" width="0.0192%" height="15" fill="rgb(246,94,34)" fg:x="14729" fg:w="4"/><text x="71.1272%" y="1279.50"></text></g><g><title>__aarch64_ldadd8_rel (4 samples, 0.02%)</title><rect x="70.8772%" y="1253" width="0.0192%" height="15" fill="rgb(251,73,21)" fg:x="14729" fg:w="4"/><text x="71.1272%" y="1263.50"></text></g><g><title>db::CacheVal&lt;T&gt;::set_current (33 samples, 0.16%)</title><rect x="70.7810%" y="1429" width="0.1588%" height="15" fill="rgb(254,121,25)" fg:x="14709" fg:w="33"/><text x="71.0310%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::state::AccountInfo&gt;&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1413" width="0.1107%" height="15" fill="rgb(215,161,49)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::AccountInfo&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1397" width="0.1107%" height="15" fill="rgb(221,43,13)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1381" width="0.1107%" height="15" fill="rgb(249,5,37)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1365" width="0.1107%" height="15" fill="rgb(226,25,44)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1349" width="0.1107%" height="15" fill="rgb(238,189,16)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1333" width="0.1107%" height="15" fill="rgb(251,186,8)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (23 samples, 0.11%)</title><rect x="70.8291%" y="1317" width="0.1107%" height="15" fill="rgb(254,34,31)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.11%)</title><rect x="70.8291%" y="1301" width="0.1107%" height="15" fill="rgb(225,215,27)" fg:x="14719" fg:w="23"/><text x="71.0791%" y="1311.50"></text></g><g><title>free (9 samples, 0.04%)</title><rect x="70.8965%" y="1285" width="0.0433%" height="15" fill="rgb(221,192,48)" fg:x="14733" fg:w="9"/><text x="71.1465%" y="1295.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="70.9061%" y="1269" width="0.0337%" height="15" fill="rgb(219,137,20)" fg:x="14735" fg:w="7"/><text x="71.1561%" y="1279.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="70.9254%" y="1253" width="0.0144%" height="15" fill="rgb(219,84,11)" fg:x="14739" fg:w="3"/><text x="71.1754%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.03%)</title><rect x="70.9590%" y="1349" width="0.0289%" height="15" fill="rgb(224,10,23)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1359.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.03%)</title><rect x="70.9590%" y="1333" width="0.0289%" height="15" fill="rgb(248,22,39)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1343.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.03%)</title><rect x="70.9590%" y="1317" width="0.0289%" height="15" fill="rgb(212,154,20)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.03%)</title><rect x="70.9590%" y="1301" width="0.0289%" height="15" fill="rgb(236,199,50)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1311.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="70.9590%" y="1285" width="0.0289%" height="15" fill="rgb(211,9,17)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1295.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="70.9590%" y="1269" width="0.0289%" height="15" fill="rgb(243,216,36)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1279.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (6 samples, 0.03%)</title><rect x="70.9590%" y="1253" width="0.0289%" height="15" fill="rgb(250,2,10)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1263.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.03%)</title><rect x="70.9590%" y="1237" width="0.0289%" height="15" fill="rgb(226,50,48)" fg:x="14746" fg:w="6"/><text x="71.2090%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.07%)</title><rect x="70.9398%" y="1429" width="0.0674%" height="15" fill="rgb(243,81,16)" fg:x="14742" fg:w="14"/><text x="71.1898%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.07%)</title><rect x="70.9398%" y="1413" width="0.0674%" height="15" fill="rgb(250,14,2)" fg:x="14742" fg:w="14"/><text x="71.1898%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.06%)</title><rect x="70.9494%" y="1397" width="0.0577%" height="15" fill="rgb(233,135,29)" fg:x="14744" fg:w="12"/><text x="71.1994%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.06%)</title><rect x="70.9494%" y="1381" width="0.0577%" height="15" fill="rgb(224,64,43)" fg:x="14744" fg:w="12"/><text x="71.1994%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12 samples, 0.06%)</title><rect x="70.9494%" y="1365" width="0.0577%" height="15" fill="rgb(238,84,13)" fg:x="14744" fg:w="12"/><text x="71.1994%" y="1375.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (4 samples, 0.02%)</title><rect x="70.9879%" y="1349" width="0.0192%" height="15" fill="rgb(253,48,26)" fg:x="14752" fg:w="4"/><text x="71.2379%" y="1359.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (4 samples, 0.02%)</title><rect x="70.9879%" y="1333" width="0.0192%" height="15" fill="rgb(205,223,31)" fg:x="14752" fg:w="4"/><text x="71.2379%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="71.0120%" y="1429" width="0.0144%" height="15" fill="rgb(221,41,32)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.01%)</title><rect x="71.0120%" y="1413" width="0.0144%" height="15" fill="rgb(213,158,31)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="71.0120%" y="1397" width="0.0144%" height="15" fill="rgb(245,126,43)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="71.0120%" y="1381" width="0.0144%" height="15" fill="rgb(227,7,22)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.01%)</title><rect x="71.0120%" y="1365" width="0.0144%" height="15" fill="rgb(252,90,44)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.01%)</title><rect x="71.0120%" y="1349" width="0.0144%" height="15" fill="rgb(253,91,0)" fg:x="14757" fg:w="3"/><text x="71.2620%" y="1359.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (4 samples, 0.02%)</title><rect x="71.0264%" y="1429" width="0.0192%" height="15" fill="rgb(252,175,49)" fg:x="14760" fg:w="4"/><text x="71.2764%" y="1439.50"></text></g><g><title>heed::env::Env::read_txn (18 samples, 0.09%)</title><rect x="71.0457%" y="1429" width="0.0866%" height="15" fill="rgb(246,150,1)" fg:x="14764" fg:w="18"/><text x="71.2957%" y="1439.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (18 samples, 0.09%)</title><rect x="71.0457%" y="1413" width="0.0866%" height="15" fill="rgb(241,192,25)" fg:x="14764" fg:w="18"/><text x="71.2957%" y="1423.50"></text></g><g><title>mdb_txn_begin (18 samples, 0.09%)</title><rect x="71.0457%" y="1397" width="0.0866%" height="15" fill="rgb(239,187,11)" fg:x="14764" fg:w="18"/><text x="71.2957%" y="1407.50"></text></g><g><title>[libc.so.6] (18 samples, 0.09%)</title><rect x="71.0457%" y="1381" width="0.0866%" height="15" fill="rgb(218,202,51)" fg:x="14764" fg:w="18"/><text x="71.2957%" y="1391.50"></text></g><g><title>db::DB::set_account_map (91 samples, 0.44%)</title><rect x="70.7329%" y="1445" width="0.4379%" height="15" fill="rgb(225,176,8)" fg:x="14699" fg:w="91"/><text x="70.9829%" y="1455.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.04%)</title><rect x="71.1323%" y="1429" width="0.0385%" height="15" fill="rgb(219,122,41)" fg:x="14782" fg:w="8"/><text x="71.3823%" y="1439.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (7 samples, 0.03%)</title><rect x="71.1371%" y="1413" width="0.0337%" height="15" fill="rgb(248,140,20)" fg:x="14783" fg:w="7"/><text x="71.3871%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (7 samples, 0.03%)</title><rect x="71.1371%" y="1397" width="0.0337%" height="15" fill="rgb(245,41,37)" fg:x="14783" fg:w="7"/><text x="71.3871%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.03%)</title><rect x="71.1371%" y="1381" width="0.0337%" height="15" fill="rgb(235,82,39)" fg:x="14783" fg:w="7"/><text x="71.3871%" y="1391.50"></text></g><g><title>__aarch64_cas4_acq (7 samples, 0.03%)</title><rect x="71.1371%" y="1365" width="0.0337%" height="15" fill="rgb(230,108,42)" fg:x="14783" fg:w="7"/><text x="71.3871%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (3 samples, 0.01%)</title><rect x="71.1708%" y="1429" width="0.0144%" height="15" fill="rgb(215,150,50)" fg:x="14790" fg:w="3"/><text x="71.4208%" y="1439.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="71.1708%" y="1413" width="0.0144%" height="15" fill="rgb(233,212,5)" fg:x="14790" fg:w="3"/><text x="71.4208%" y="1423.50"></text></g><g><title>heed::txn::abort_txn (3 samples, 0.01%)</title><rect x="71.1708%" y="1397" width="0.0144%" height="15" fill="rgb(245,80,22)" fg:x="14790" fg:w="3"/><text x="71.4208%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.04%)</title><rect x="71.1900%" y="1429" width="0.0385%" height="15" fill="rgb(238,129,16)" fg:x="14794" fg:w="8"/><text x="71.4400%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.04%)</title><rect x="71.1900%" y="1413" width="0.0385%" height="15" fill="rgb(240,19,0)" fg:x="14794" fg:w="8"/><text x="71.4400%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.03%)</title><rect x="71.1948%" y="1397" width="0.0337%" height="15" fill="rgb(232,42,35)" fg:x="14795" fg:w="7"/><text x="71.4448%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.03%)</title><rect x="71.1948%" y="1381" width="0.0337%" height="15" fill="rgb(223,130,24)" fg:x="14795" fg:w="7"/><text x="71.4448%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.03%)</title><rect x="71.1948%" y="1365" width="0.0337%" height="15" fill="rgb(237,16,22)" fg:x="14795" fg:w="7"/><text x="71.4448%" y="1375.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (4 samples, 0.02%)</title><rect x="71.2093%" y="1349" width="0.0192%" height="15" fill="rgb(248,192,20)" fg:x="14798" fg:w="4"/><text x="71.4593%" y="1359.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (4 samples, 0.02%)</title><rect x="71.2093%" y="1333" width="0.0192%" height="15" fill="rgb(233,167,2)" fg:x="14798" fg:w="4"/><text x="71.4593%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.01%)</title><rect x="71.2285%" y="1429" width="0.0144%" height="15" fill="rgb(252,71,44)" fg:x="14802" fg:w="3"/><text x="71.4785%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.01%)</title><rect x="71.2285%" y="1413" width="0.0144%" height="15" fill="rgb(238,37,47)" fg:x="14802" fg:w="3"/><text x="71.4785%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.02%)</title><rect x="71.2430%" y="1413" width="0.0192%" height="15" fill="rgb(214,202,54)" fg:x="14805" fg:w="4"/><text x="71.4930%" y="1423.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="71.2430%" y="1429" width="0.0241%" height="15" fill="rgb(254,165,40)" fg:x="14805" fg:w="5"/><text x="71.4930%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="71.2670%" y="1301" width="0.0144%" height="15" fill="rgb(246,173,38)" fg:x="14810" fg:w="3"/><text x="71.5170%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="71.2670%" y="1285" width="0.0144%" height="15" fill="rgb(215,3,27)" fg:x="14810" fg:w="3"/><text x="71.5170%" y="1295.50"></text></g><g><title>&lt;db::UintEncodeDecode&lt;_,_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (5 samples, 0.02%)</title><rect x="71.2670%" y="1413" width="0.0241%" height="15" fill="rgb(239,169,51)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="71.2670%" y="1397" width="0.0241%" height="15" fill="rgb(212,5,25)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="71.2670%" y="1381" width="0.0241%" height="15" fill="rgb(243,45,17)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="71.2670%" y="1365" width="0.0241%" height="15" fill="rgb(242,97,9)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="71.2670%" y="1349" width="0.0241%" height="15" fill="rgb(228,71,31)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="71.2670%" y="1333" width="0.0241%" height="15" fill="rgb(252,184,16)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.02%)</title><rect x="71.2670%" y="1317" width="0.0241%" height="15" fill="rgb(236,169,46)" fg:x="14810" fg:w="5"/><text x="71.5170%" y="1327.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (8 samples, 0.04%)</title><rect x="71.2670%" y="1429" width="0.0385%" height="15" fill="rgb(207,17,47)" fg:x="14810" fg:w="8"/><text x="71.5170%" y="1439.50"></text></g><g><title>mdb_get (3 samples, 0.01%)</title><rect x="71.2911%" y="1413" width="0.0144%" height="15" fill="rgb(206,201,28)" fg:x="14815" fg:w="3"/><text x="71.5411%" y="1423.50"></text></g><g><title>[libc.so.6] (29 samples, 0.14%)</title><rect x="71.3055%" y="1381" width="0.1396%" height="15" fill="rgb(224,184,23)" fg:x="14818" fg:w="29"/><text x="71.5555%" y="1391.50"></text></g><g><title>heed::env::Env::read_txn (32 samples, 0.15%)</title><rect x="71.3055%" y="1429" width="0.1540%" height="15" fill="rgb(208,139,48)" fg:x="14818" fg:w="32"/><text x="71.5555%" y="1439.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (32 samples, 0.15%)</title><rect x="71.3055%" y="1413" width="0.1540%" height="15" fill="rgb(208,130,10)" fg:x="14818" fg:w="32"/><text x="71.5555%" y="1423.50"></text></g><g><title>mdb_txn_begin (32 samples, 0.15%)</title><rect x="71.3055%" y="1397" width="0.1540%" height="15" fill="rgb(211,213,45)" fg:x="14818" fg:w="32"/><text x="71.5555%" y="1407.50"></text></g><g><title>db::DB::set_account_memory_map (64 samples, 0.31%)</title><rect x="71.1708%" y="1445" width="0.3080%" height="15" fill="rgb(235,100,30)" fg:x="14790" fg:w="64"/><text x="71.4208%" y="1455.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="71.4595%" y="1429" width="0.0192%" height="15" fill="rgb(206,144,31)" fg:x="14850" fg:w="4"/><text x="71.7095%" y="1439.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.02%)</title><rect x="71.4595%" y="1413" width="0.0192%" height="15" fill="rgb(224,200,26)" fg:x="14850" fg:w="4"/><text x="71.7095%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.02%)</title><rect x="71.4595%" y="1397" width="0.0192%" height="15" fill="rgb(247,104,53)" fg:x="14850" fg:w="4"/><text x="71.7095%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="71.4595%" y="1381" width="0.0192%" height="15" fill="rgb(220,14,17)" fg:x="14850" fg:w="4"/><text x="71.7095%" y="1391.50"></text></g><g><title>__aarch64_cas4_acq (4 samples, 0.02%)</title><rect x="71.4595%" y="1365" width="0.0192%" height="15" fill="rgb(230,140,40)" fg:x="14850" fg:w="4"/><text x="71.7095%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (3 samples, 0.01%)</title><rect x="71.4836%" y="1413" width="0.0144%" height="15" fill="rgb(229,2,41)" fg:x="14855" fg:w="3"/><text x="71.7336%" y="1423.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="71.4836%" y="1397" width="0.0144%" height="15" fill="rgb(232,89,16)" fg:x="14855" fg:w="3"/><text x="71.7336%" y="1407.50"></text></g><g><title>mdb_cursors_close (6 samples, 0.03%)</title><rect x="71.5124%" y="1397" width="0.0289%" height="15" fill="rgb(247,59,52)" fg:x="14861" fg:w="6"/><text x="71.7624%" y="1407.50"></text></g><g><title>submit_bio (3 samples, 0.01%)</title><rect x="71.5413%" y="1173" width="0.0144%" height="15" fill="rgb(226,110,21)" fg:x="14867" fg:w="3"/><text x="71.7913%" y="1183.50"></text></g><g><title>submit_bio_noacct (3 samples, 0.01%)</title><rect x="71.5413%" y="1157" width="0.0144%" height="15" fill="rgb(224,176,43)" fg:x="14867" fg:w="3"/><text x="71.7913%" y="1167.50"></text></g><g><title>__submit_bio (3 samples, 0.01%)</title><rect x="71.5413%" y="1141" width="0.0144%" height="15" fill="rgb(221,73,6)" fg:x="14867" fg:w="3"/><text x="71.7913%" y="1151.50"></text></g><g><title>blk_mq_submit_bio (3 samples, 0.01%)</title><rect x="71.5413%" y="1125" width="0.0144%" height="15" fill="rgb(232,78,19)" fg:x="14867" fg:w="3"/><text x="71.7913%" y="1135.50"></text></g><g><title>submit_bio_wait (5 samples, 0.02%)</title><rect x="71.5413%" y="1189" width="0.0241%" height="15" fill="rgb(233,112,48)" fg:x="14867" fg:w="5"/><text x="71.7913%" y="1199.50"></text></g><g><title>blkdev_issue_flush (6 samples, 0.03%)</title><rect x="71.5413%" y="1205" width="0.0289%" height="15" fill="rgb(243,131,47)" fg:x="14867" fg:w="6"/><text x="71.7913%" y="1215.50"></text></g><g><title>blk_finish_plug (4 samples, 0.02%)</title><rect x="71.5846%" y="1141" width="0.0192%" height="15" fill="rgb(226,51,1)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1151.50"></text></g><g><title>blk_flush_plug_list (4 samples, 0.02%)</title><rect x="71.5846%" y="1125" width="0.0192%" height="15" fill="rgb(247,58,7)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1135.50"></text></g><g><title>blk_mq_flush_plug_list (4 samples, 0.02%)</title><rect x="71.5846%" y="1109" width="0.0192%" height="15" fill="rgb(209,7,32)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1119.50"></text></g><g><title>blk_mq_sched_insert_requests (4 samples, 0.02%)</title><rect x="71.5846%" y="1093" width="0.0192%" height="15" fill="rgb(209,39,41)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1103.50"></text></g><g><title>blk_mq_try_issue_list_directly (4 samples, 0.02%)</title><rect x="71.5846%" y="1077" width="0.0192%" height="15" fill="rgb(226,182,46)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1087.50"></text></g><g><title>__blk_mq_try_issue_directly (4 samples, 0.02%)</title><rect x="71.5846%" y="1061" width="0.0192%" height="15" fill="rgb(230,219,10)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1071.50"></text></g><g><title>scsi_queue_rq (4 samples, 0.02%)</title><rect x="71.5846%" y="1045" width="0.0192%" height="15" fill="rgb(227,175,30)" fg:x="14876" fg:w="4"/><text x="71.8346%" y="1055.50"></text></g><g><title>scsi_prepare_cmd (3 samples, 0.01%)</title><rect x="71.5894%" y="1029" width="0.0144%" height="15" fill="rgb(217,2,50)" fg:x="14877" fg:w="3"/><text x="71.8394%" y="1039.50"></text></g><g><title>mdb_env_sync (19 samples, 0.09%)</title><rect x="71.5413%" y="1397" width="0.0914%" height="15" fill="rgb(229,160,0)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1407.50"></text></g><g><title>fdatasync (19 samples, 0.09%)</title><rect x="71.5413%" y="1381" width="0.0914%" height="15" fill="rgb(207,78,37)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1391.50"></text></g><g><title>el0t_64_sync (19 samples, 0.09%)</title><rect x="71.5413%" y="1365" width="0.0914%" height="15" fill="rgb(225,57,0)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1375.50"></text></g><g><title>el0t_64_sync_handler (19 samples, 0.09%)</title><rect x="71.5413%" y="1349" width="0.0914%" height="15" fill="rgb(232,154,2)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1359.50"></text></g><g><title>el0_svc (19 samples, 0.09%)</title><rect x="71.5413%" y="1333" width="0.0914%" height="15" fill="rgb(241,212,25)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1343.50"></text></g><g><title>do_el0_svc (19 samples, 0.09%)</title><rect x="71.5413%" y="1317" width="0.0914%" height="15" fill="rgb(226,69,20)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1327.50"></text></g><g><title>el0_svc_common.constprop.0 (19 samples, 0.09%)</title><rect x="71.5413%" y="1301" width="0.0914%" height="15" fill="rgb(247,184,54)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1311.50"></text></g><g><title>invoke_syscall (19 samples, 0.09%)</title><rect x="71.5413%" y="1285" width="0.0914%" height="15" fill="rgb(210,145,0)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1295.50"></text></g><g><title>__arm64_sys_fdatasync (19 samples, 0.09%)</title><rect x="71.5413%" y="1269" width="0.0914%" height="15" fill="rgb(253,82,12)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1279.50"></text></g><g><title>do_fsync (19 samples, 0.09%)</title><rect x="71.5413%" y="1253" width="0.0914%" height="15" fill="rgb(245,42,11)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1263.50"></text></g><g><title>vfs_fsync_range (19 samples, 0.09%)</title><rect x="71.5413%" y="1237" width="0.0914%" height="15" fill="rgb(219,147,32)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1247.50"></text></g><g><title>ext4_sync_file (19 samples, 0.09%)</title><rect x="71.5413%" y="1221" width="0.0914%" height="15" fill="rgb(246,12,7)" fg:x="14867" fg:w="19"/><text x="71.7913%" y="1231.50"></text></g><g><title>file_write_and_wait_range (13 samples, 0.06%)</title><rect x="71.5702%" y="1205" width="0.0626%" height="15" fill="rgb(243,50,9)" fg:x="14873" fg:w="13"/><text x="71.8202%" y="1215.50"></text></g><g><title>filemap_fdatawrite_wbc (11 samples, 0.05%)</title><rect x="71.5798%" y="1189" width="0.0529%" height="15" fill="rgb(219,149,6)" fg:x="14875" fg:w="11"/><text x="71.8298%" y="1199.50"></text></g><g><title>do_writepages (11 samples, 0.05%)</title><rect x="71.5798%" y="1173" width="0.0529%" height="15" fill="rgb(241,51,42)" fg:x="14875" fg:w="11"/><text x="71.8298%" y="1183.50"></text></g><g><title>ext4_writepages (11 samples, 0.05%)</title><rect x="71.5798%" y="1157" width="0.0529%" height="15" fill="rgb(226,128,27)" fg:x="14875" fg:w="11"/><text x="71.8298%" y="1167.50"></text></g><g><title>mpage_prepare_extent_to_map (6 samples, 0.03%)</title><rect x="71.6039%" y="1141" width="0.0289%" height="15" fill="rgb(244,144,4)" fg:x="14880" fg:w="6"/><text x="71.8539%" y="1151.50"></text></g><g><title>mpage_process_page_bufs (5 samples, 0.02%)</title><rect x="71.6087%" y="1125" width="0.0241%" height="15" fill="rgb(221,4,13)" fg:x="14881" fg:w="5"/><text x="71.8587%" y="1135.50"></text></g><g><title>mpage_submit_page (5 samples, 0.02%)</title><rect x="71.6087%" y="1109" width="0.0241%" height="15" fill="rgb(208,170,28)" fg:x="14881" fg:w="5"/><text x="71.8587%" y="1119.50"></text></g><g><title>ext4_bio_write_page (4 samples, 0.02%)</title><rect x="71.6135%" y="1093" width="0.0192%" height="15" fill="rgb(226,131,13)" fg:x="14882" fg:w="4"/><text x="71.8635%" y="1103.50"></text></g><g><title>mdb_env_write_meta (4 samples, 0.02%)</title><rect x="71.6327%" y="1397" width="0.0192%" height="15" fill="rgb(215,72,41)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1407.50"></text></g><g><title>pwrite (4 samples, 0.02%)</title><rect x="71.6327%" y="1381" width="0.0192%" height="15" fill="rgb(243,108,20)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1391.50"></text></g><g><title>el0t_64_sync (4 samples, 0.02%)</title><rect x="71.6327%" y="1365" width="0.0192%" height="15" fill="rgb(230,189,17)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1375.50"></text></g><g><title>el0t_64_sync_handler (4 samples, 0.02%)</title><rect x="71.6327%" y="1349" width="0.0192%" height="15" fill="rgb(220,50,17)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1359.50"></text></g><g><title>el0_svc (4 samples, 0.02%)</title><rect x="71.6327%" y="1333" width="0.0192%" height="15" fill="rgb(248,152,48)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1343.50"></text></g><g><title>do_el0_svc (4 samples, 0.02%)</title><rect x="71.6327%" y="1317" width="0.0192%" height="15" fill="rgb(244,91,11)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1327.50"></text></g><g><title>el0_svc_common.constprop.0 (4 samples, 0.02%)</title><rect x="71.6327%" y="1301" width="0.0192%" height="15" fill="rgb(220,157,5)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1311.50"></text></g><g><title>invoke_syscall (4 samples, 0.02%)</title><rect x="71.6327%" y="1285" width="0.0192%" height="15" fill="rgb(253,137,8)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1295.50"></text></g><g><title>__arm64_sys_pwrite64 (4 samples, 0.02%)</title><rect x="71.6327%" y="1269" width="0.0192%" height="15" fill="rgb(217,137,51)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1279.50"></text></g><g><title>ksys_pwrite64 (4 samples, 0.02%)</title><rect x="71.6327%" y="1253" width="0.0192%" height="15" fill="rgb(218,209,53)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1263.50"></text></g><g><title>vfs_write (4 samples, 0.02%)</title><rect x="71.6327%" y="1237" width="0.0192%" height="15" fill="rgb(249,137,25)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1247.50"></text></g><g><title>new_sync_write (4 samples, 0.02%)</title><rect x="71.6327%" y="1221" width="0.0192%" height="15" fill="rgb(239,155,26)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1231.50"></text></g><g><title>ext4_file_write_iter (4 samples, 0.02%)</title><rect x="71.6327%" y="1205" width="0.0192%" height="15" fill="rgb(227,85,46)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1215.50"></text></g><g><title>ext4_buffered_write_iter (4 samples, 0.02%)</title><rect x="71.6327%" y="1189" width="0.0192%" height="15" fill="rgb(251,107,43)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1199.50"></text></g><g><title>vfs_fsync_range (4 samples, 0.02%)</title><rect x="71.6327%" y="1173" width="0.0192%" height="15" fill="rgb(234,170,33)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1183.50"></text></g><g><title>ext4_sync_file (4 samples, 0.02%)</title><rect x="71.6327%" y="1157" width="0.0192%" height="15" fill="rgb(206,29,35)" fg:x="14886" fg:w="4"/><text x="71.8827%" y="1167.50"></text></g><g><title>pwrite (7 samples, 0.03%)</title><rect x="71.6520%" y="1381" width="0.0337%" height="15" fill="rgb(227,138,25)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1391.50"></text></g><g><title>el0t_64_sync (7 samples, 0.03%)</title><rect x="71.6520%" y="1365" width="0.0337%" height="15" fill="rgb(249,131,35)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1375.50"></text></g><g><title>el0t_64_sync_handler (7 samples, 0.03%)</title><rect x="71.6520%" y="1349" width="0.0337%" height="15" fill="rgb(239,6,40)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1359.50"></text></g><g><title>el0_svc (7 samples, 0.03%)</title><rect x="71.6520%" y="1333" width="0.0337%" height="15" fill="rgb(246,136,47)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1343.50"></text></g><g><title>do_el0_svc (7 samples, 0.03%)</title><rect x="71.6520%" y="1317" width="0.0337%" height="15" fill="rgb(253,58,26)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1327.50"></text></g><g><title>el0_svc_common.constprop.0 (7 samples, 0.03%)</title><rect x="71.6520%" y="1301" width="0.0337%" height="15" fill="rgb(237,141,10)" fg:x="14890" fg:w="7"/><text x="71.9020%" y="1311.50"></text></g><g><title>invoke_syscall (6 samples, 0.03%)</title><rect x="71.6568%" y="1285" width="0.0289%" height="15" fill="rgb(234,156,12)" fg:x="14891" fg:w="6"/><text x="71.9068%" y="1295.50"></text></g><g><title>__arm64_sys_pwrite64 (5 samples, 0.02%)</title><rect x="71.6616%" y="1269" width="0.0241%" height="15" fill="rgb(243,224,36)" fg:x="14892" fg:w="5"/><text x="71.9116%" y="1279.50"></text></g><g><title>ksys_pwrite64 (5 samples, 0.02%)</title><rect x="71.6616%" y="1253" width="0.0241%" height="15" fill="rgb(205,229,51)" fg:x="14892" fg:w="5"/><text x="71.9116%" y="1263.50"></text></g><g><title>vfs_write (5 samples, 0.02%)</title><rect x="71.6616%" y="1237" width="0.0241%" height="15" fill="rgb(223,189,4)" fg:x="14892" fg:w="5"/><text x="71.9116%" y="1247.50"></text></g><g><title>new_sync_write (4 samples, 0.02%)</title><rect x="71.6664%" y="1221" width="0.0192%" height="15" fill="rgb(249,167,54)" fg:x="14893" fg:w="4"/><text x="71.9164%" y="1231.50"></text></g><g><title>ext4_file_write_iter (4 samples, 0.02%)</title><rect x="71.6664%" y="1205" width="0.0192%" height="15" fill="rgb(218,34,28)" fg:x="14893" fg:w="4"/><text x="71.9164%" y="1215.50"></text></g><g><title>ext4_buffered_write_iter (4 samples, 0.02%)</title><rect x="71.6664%" y="1189" width="0.0192%" height="15" fill="rgb(232,109,42)" fg:x="14893" fg:w="4"/><text x="71.9164%" y="1199.50"></text></g><g><title>generic_perform_write (4 samples, 0.02%)</title><rect x="71.6664%" y="1173" width="0.0192%" height="15" fill="rgb(248,214,46)" fg:x="14893" fg:w="4"/><text x="71.9164%" y="1183.50"></text></g><g><title>mdb_page_flush (9 samples, 0.04%)</title><rect x="71.6520%" y="1397" width="0.0433%" height="15" fill="rgb(244,216,40)" fg:x="14890" fg:w="9"/><text x="71.9020%" y="1407.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="71.7049%" y="1381" width="0.0241%" height="15" fill="rgb(231,226,31)" fg:x="14901" fg:w="5"/><text x="71.9549%" y="1391.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="71.7145%" y="1365" width="0.0144%" height="15" fill="rgb(238,38,43)" fg:x="14903" fg:w="3"/><text x="71.9645%" y="1375.50"></text></g><g><title>heed::txn::RwTxn&lt;T&gt;::commit (56 samples, 0.27%)</title><rect x="71.4836%" y="1445" width="0.2695%" height="15" fill="rgb(208,88,43)" fg:x="14855" fg:w="56"/><text x="71.7336%" y="1455.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::commit (56 samples, 0.27%)</title><rect x="71.4836%" y="1429" width="0.2695%" height="15" fill="rgb(205,136,37)" fg:x="14855" fg:w="56"/><text x="71.7336%" y="1439.50"></text></g><g><title>mdb_txn_commit (53 samples, 0.26%)</title><rect x="71.4980%" y="1413" width="0.2550%" height="15" fill="rgb(237,34,14)" fg:x="14858" fg:w="53"/><text x="71.7480%" y="1423.50"></text></g><g><title>mdb_txn_end (12 samples, 0.06%)</title><rect x="71.6953%" y="1397" width="0.0577%" height="15" fill="rgb(236,193,44)" fg:x="14899" fg:w="12"/><text x="71.9453%" y="1407.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::DatabaseCommit&gt;::commit (392 samples, 1.89%)</title><rect x="69.8811%" y="1461" width="1.8863%" height="15" fill="rgb(231,48,10)" fg:x="14522" fg:w="392"/><text x="70.1311%" y="1471.50">&lt;..</text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_last_u128 (6 samples, 0.03%)</title><rect x="71.7964%" y="997" width="0.0289%" height="15" fill="rgb(213,141,34)" fg:x="14920" fg:w="6"/><text x="72.0464%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.03%)</title><rect x="71.7964%" y="1109" width="0.0337%" height="15" fill="rgb(249,130,34)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1119.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::hash::Hash&gt;::hash (7 samples, 0.03%)</title><rect x="71.7964%" y="1093" width="0.0337%" height="15" fill="rgb(219,42,41)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1103.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::hash::Hash&gt;::hash (7 samples, 0.03%)</title><rect x="71.7964%" y="1077" width="0.0337%" height="15" fill="rgb(224,100,54)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.03%)</title><rect x="71.7964%" y="1061" width="0.0337%" height="15" fill="rgb(229,200,27)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.03%)</title><rect x="71.7964%" y="1045" width="0.0337%" height="15" fill="rgb(217,118,10)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (7 samples, 0.03%)</title><rect x="71.7964%" y="1029" width="0.0337%" height="15" fill="rgb(206,22,3)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1039.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (7 samples, 0.03%)</title><rect x="71.7964%" y="1013" width="0.0337%" height="15" fill="rgb(232,163,46)" fg:x="14920" fg:w="7"/><text x="72.0464%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (4 samples, 0.02%)</title><rect x="71.8445%" y="1077" width="0.0192%" height="15" fill="rgb(206,95,13)" fg:x="14930" fg:w="4"/><text x="72.0945%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (3 samples, 0.01%)</title><rect x="71.8493%" y="1061" width="0.0144%" height="15" fill="rgb(253,154,18)" fg:x="14931" fg:w="3"/><text x="72.0993%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (19 samples, 0.09%)</title><rect x="71.8300%" y="1109" width="0.0914%" height="15" fill="rgb(219,32,23)" fg:x="14927" fg:w="19"/><text x="72.0800%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (18 samples, 0.09%)</title><rect x="71.8348%" y="1093" width="0.0866%" height="15" fill="rgb(230,191,45)" fg:x="14928" fg:w="18"/><text x="72.0848%" y="1103.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (12 samples, 0.06%)</title><rect x="71.8637%" y="1077" width="0.0577%" height="15" fill="rgb(229,64,36)" fg:x="14934" fg:w="12"/><text x="72.1137%" y="1087.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (12 samples, 0.06%)</title><rect x="71.8637%" y="1061" width="0.0577%" height="15" fill="rgb(205,129,25)" fg:x="14934" fg:w="12"/><text x="72.1137%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (31 samples, 0.15%)</title><rect x="71.7819%" y="1173" width="0.1492%" height="15" fill="rgb(254,112,7)" fg:x="14917" fg:w="31"/><text x="72.0319%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (31 samples, 0.15%)</title><rect x="71.7819%" y="1157" width="0.1492%" height="15" fill="rgb(226,53,48)" fg:x="14917" fg:w="31"/><text x="72.0319%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (31 samples, 0.15%)</title><rect x="71.7819%" y="1141" width="0.1492%" height="15" fill="rgb(214,153,38)" fg:x="14917" fg:w="31"/><text x="72.0319%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (31 samples, 0.15%)</title><rect x="71.7819%" y="1125" width="0.1492%" height="15" fill="rgb(243,101,7)" fg:x="14917" fg:w="31"/><text x="72.0319%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (39 samples, 0.19%)</title><rect x="71.7819%" y="1349" width="0.1877%" height="15" fill="rgb(240,140,22)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1333" width="0.1877%" height="15" fill="rgb(235,114,2)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1317" width="0.1877%" height="15" fill="rgb(242,59,12)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1301" width="0.1877%" height="15" fill="rgb(252,134,9)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1285" width="0.1877%" height="15" fill="rgb(236,4,44)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1269" width="0.1877%" height="15" fill="rgb(254,172,41)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.19%)</title><rect x="71.7819%" y="1253" width="0.1877%" height="15" fill="rgb(244,63,20)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1263.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (39 samples, 0.19%)</title><rect x="71.7819%" y="1237" width="0.1877%" height="15" fill="rgb(250,73,31)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (39 samples, 0.19%)</title><rect x="71.7819%" y="1221" width="0.1877%" height="15" fill="rgb(241,38,36)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1231.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (39 samples, 0.19%)</title><rect x="71.7819%" y="1205" width="0.1877%" height="15" fill="rgb(245,211,2)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1215.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (39 samples, 0.19%)</title><rect x="71.7819%" y="1189" width="0.1877%" height="15" fill="rgb(206,120,28)" fg:x="14917" fg:w="39"/><text x="72.0319%" y="1199.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8 samples, 0.04%)</title><rect x="71.9311%" y="1173" width="0.0385%" height="15" fill="rgb(211,59,34)" fg:x="14948" fg:w="8"/><text x="72.1811%" y="1183.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="71.9311%" y="1157" width="0.0385%" height="15" fill="rgb(233,168,5)" fg:x="14948" fg:w="8"/><text x="72.1811%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (5 samples, 0.02%)</title><rect x="71.9696%" y="1237" width="0.0241%" height="15" fill="rgb(234,33,13)" fg:x="14956" fg:w="5"/><text x="72.2196%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.02%)</title><rect x="71.9744%" y="1221" width="0.0192%" height="15" fill="rgb(231,150,26)" fg:x="14957" fg:w="4"/><text x="72.2244%" y="1231.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="71.9744%" y="1205" width="0.0192%" height="15" fill="rgb(217,191,4)" fg:x="14957" fg:w="4"/><text x="72.2244%" y="1215.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (4 samples, 0.02%)</title><rect x="71.9744%" y="1189" width="0.0192%" height="15" fill="rgb(246,198,38)" fg:x="14957" fg:w="4"/><text x="72.2244%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="71.9744%" y="1173" width="0.0192%" height="15" fill="rgb(245,64,37)" fg:x="14957" fg:w="4"/><text x="72.2244%" y="1183.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="71.9792%" y="1157" width="0.0144%" height="15" fill="rgb(250,30,36)" fg:x="14958" fg:w="3"/><text x="72.2292%" y="1167.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::set_precompiles (46 samples, 0.22%)</title><rect x="71.7771%" y="1429" width="0.2214%" height="15" fill="rgb(217,86,53)" fg:x="14916" fg:w="46"/><text x="72.0271%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.22%)</title><rect x="71.7819%" y="1413" width="0.2165%" height="15" fill="rgb(228,157,16)" fg:x="14917" fg:w="45"/><text x="72.0319%" y="1423.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.22%)</title><rect x="71.7819%" y="1397" width="0.2165%" height="15" fill="rgb(217,59,31)" fg:x="14917" fg:w="45"/><text x="72.0319%" y="1407.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (45 samples, 0.22%)</title><rect x="71.7819%" y="1381" width="0.2165%" height="15" fill="rgb(237,138,41)" fg:x="14917" fg:w="45"/><text x="72.0319%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (45 samples, 0.22%)</title><rect x="71.7819%" y="1365" width="0.2165%" height="15" fill="rgb(227,91,49)" fg:x="14917" fg:w="45"/><text x="72.0319%" y="1375.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.03%)</title><rect x="71.9696%" y="1349" width="0.0289%" height="15" fill="rgb(247,21,44)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="71.9696%" y="1333" width="0.0289%" height="15" fill="rgb(219,210,51)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.03%)</title><rect x="71.9696%" y="1317" width="0.0289%" height="15" fill="rgb(209,140,6)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (6 samples, 0.03%)</title><rect x="71.9696%" y="1301" width="0.0289%" height="15" fill="rgb(221,188,24)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (6 samples, 0.03%)</title><rect x="71.9696%" y="1285" width="0.0289%" height="15" fill="rgb(232,154,20)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (6 samples, 0.03%)</title><rect x="71.9696%" y="1269" width="0.0289%" height="15" fill="rgb(244,137,50)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (6 samples, 0.03%)</title><rect x="71.9696%" y="1253" width="0.0289%" height="15" fill="rgb(225,185,43)" fg:x="14956" fg:w="6"/><text x="72.2196%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (10 samples, 0.05%)</title><rect x="71.9985%" y="1413" width="0.0481%" height="15" fill="rgb(213,205,38)" fg:x="14962" fg:w="10"/><text x="72.2485%" y="1423.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="71.9985%" y="1397" width="0.0481%" height="15" fill="rgb(236,73,12)" fg:x="14962" fg:w="10"/><text x="72.2485%" y="1407.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="72.0466%" y="1413" width="0.0192%" height="15" fill="rgb(235,219,13)" fg:x="14972" fg:w="4"/><text x="72.2966%" y="1423.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="72.0466%" y="1397" width="0.0192%" height="15" fill="rgb(218,59,36)" fg:x="14972" fg:w="4"/><text x="72.2966%" y="1407.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="72.0466%" y="1381" width="0.0192%" height="15" fill="rgb(205,110,39)" fg:x="14972" fg:w="4"/><text x="72.2966%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.03%)</title><rect x="72.0995%" y="1397" width="0.0337%" height="15" fill="rgb(218,206,42)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="72.0995%" y="1381" width="0.0337%" height="15" fill="rgb(248,125,24)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="72.0995%" y="1365" width="0.0337%" height="15" fill="rgb(242,28,27)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.03%)</title><rect x="72.0995%" y="1349" width="0.0337%" height="15" fill="rgb(216,228,15)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="72.0995%" y="1333" width="0.0337%" height="15" fill="rgb(235,116,46)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="72.0995%" y="1317" width="0.0337%" height="15" fill="rgb(224,18,32)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="72.0995%" y="1301" width="0.0337%" height="15" fill="rgb(252,5,12)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1311.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="72.0995%" y="1285" width="0.0337%" height="15" fill="rgb(251,36,5)" fg:x="14983" fg:w="7"/><text x="72.3495%" y="1295.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="72.1043%" y="1269" width="0.0289%" height="15" fill="rgb(217,53,14)" fg:x="14984" fg:w="6"/><text x="72.3543%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="72.1332%" y="1381" width="0.0289%" height="15" fill="rgb(215,86,45)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="72.1332%" y="1365" width="0.0289%" height="15" fill="rgb(242,169,11)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="72.1332%" y="1349" width="0.0289%" height="15" fill="rgb(211,213,45)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="72.1332%" y="1333" width="0.0289%" height="15" fill="rgb(205,88,11)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="72.1332%" y="1317" width="0.0289%" height="15" fill="rgb(252,69,26)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1327.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="72.1332%" y="1301" width="0.0289%" height="15" fill="rgb(246,123,37)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1311.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="72.1332%" y="1285" width="0.0289%" height="15" fill="rgb(212,205,5)" fg:x="14990" fg:w="6"/><text x="72.3832%" y="1295.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="72.1476%" y="1269" width="0.0144%" height="15" fill="rgb(253,148,0)" fg:x="14993" fg:w="3"/><text x="72.3976%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter::shared_memory::SharedMemory&gt; (8 samples, 0.04%)</title><rect x="72.1332%" y="1397" width="0.0385%" height="15" fill="rgb(239,22,4)" fg:x="14990" fg:w="8"/><text x="72.3832%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_interpreter::inner_models::CallInputs&gt;&gt; (3 samples, 0.01%)</title><rect x="72.1765%" y="1349" width="0.0144%" height="15" fill="rgb(226,26,53)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::inner_models::CallInputs&gt; (3 samples, 0.01%)</title><rect x="72.1765%" y="1333" width="0.0144%" height="15" fill="rgb(225,229,45)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (3 samples, 0.01%)</title><rect x="72.1765%" y="1317" width="0.0144%" height="15" fill="rgb(220,60,37)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.01%)</title><rect x="72.1765%" y="1301" width="0.0144%" height="15" fill="rgb(217,180,35)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1311.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="72.1765%" y="1285" width="0.0144%" height="15" fill="rgb(229,7,53)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1295.50"></text></g><g><title>bytes::bytes::promotable_even_drop (3 samples, 0.01%)</title><rect x="72.1765%" y="1269" width="0.0144%" height="15" fill="rgb(254,137,3)" fg:x="14999" fg:w="3"/><text x="72.4265%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="72.2006%" y="1285" width="0.0192%" height="15" fill="rgb(215,140,41)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1295.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="72.2006%" y="1269" width="0.0192%" height="15" fill="rgb(250,80,15)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="72.2006%" y="1253" width="0.0192%" height="15" fill="rgb(252,191,6)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="72.2006%" y="1237" width="0.0192%" height="15" fill="rgb(246,217,18)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="72.2006%" y="1221" width="0.0192%" height="15" fill="rgb(223,93,7)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1231.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="72.2006%" y="1205" width="0.0192%" height="15" fill="rgb(225,55,52)" fg:x="15004" fg:w="4"/><text x="72.4506%" y="1215.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="72.2054%" y="1189" width="0.0144%" height="15" fill="rgb(240,31,24)" fg:x="15005" fg:w="3"/><text x="72.4554%" y="1199.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="72.2006%" y="1333" width="0.0241%" height="15" fill="rgb(205,56,52)" fg:x="15004" fg:w="5"/><text x="72.4506%" y="1343.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="72.2006%" y="1317" width="0.0241%" height="15" fill="rgb(246,146,12)" fg:x="15004" fg:w="5"/><text x="72.4506%" y="1327.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (5 samples, 0.02%)</title><rect x="72.2006%" y="1301" width="0.0241%" height="15" fill="rgb(239,84,36)" fg:x="15004" fg:w="5"/><text x="72.4506%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="72.2343%" y="1333" width="0.0289%" height="15" fill="rgb(207,41,40)" fg:x="15011" fg:w="6"/><text x="72.4843%" y="1343.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="72.2391%" y="1317" width="0.0241%" height="15" fill="rgb(241,179,25)" fg:x="15012" fg:w="5"/><text x="72.4891%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="72.2391%" y="1301" width="0.0241%" height="15" fill="rgb(210,0,34)" fg:x="15012" fg:w="5"/><text x="72.4891%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="72.2391%" y="1285" width="0.0241%" height="15" fill="rgb(225,217,29)" fg:x="15012" fg:w="5"/><text x="72.4891%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="72.2391%" y="1269" width="0.0241%" height="15" fill="rgb(216,191,38)" fg:x="15012" fg:w="5"/><text x="72.4891%" y="1279.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="72.2391%" y="1253" width="0.0241%" height="15" fill="rgb(232,140,52)" fg:x="15012" fg:w="5"/><text x="72.4891%" y="1263.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (4 samples, 0.02%)</title><rect x="72.2727%" y="1301" width="0.0192%" height="15" fill="rgb(223,158,51)" fg:x="15019" fg:w="4"/><text x="72.5227%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (4 samples, 0.02%)</title><rect x="72.2727%" y="1285" width="0.0192%" height="15" fill="rgb(235,29,51)" fg:x="15019" fg:w="4"/><text x="72.5227%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="72.2776%" y="1269" width="0.0144%" height="15" fill="rgb(215,181,18)" fg:x="15020" fg:w="3"/><text x="72.5276%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.01%)</title><rect x="72.2776%" y="1253" width="0.0144%" height="15" fill="rgb(227,125,34)" fg:x="15020" fg:w="3"/><text x="72.5276%" y="1263.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::load_account (7 samples, 0.03%)</title><rect x="72.2631%" y="1333" width="0.0337%" height="15" fill="rgb(230,197,49)" fg:x="15017" fg:w="7"/><text x="72.5131%" y="1343.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_exist (7 samples, 0.03%)</title><rect x="72.2631%" y="1317" width="0.0337%" height="15" fill="rgb(239,141,16)" fg:x="15017" fg:w="7"/><text x="72.5131%" y="1327.50"></text></g><g><title>revm::frame::FrameOrResult::new_call_frame (6 samples, 0.03%)</title><rect x="72.2968%" y="1333" width="0.0289%" height="15" fill="rgb(225,105,43)" fg:x="15024" fg:w="6"/><text x="72.5468%" y="1343.50"></text></g><g><title>revm::frame::Frame::new_call (6 samples, 0.03%)</title><rect x="72.2968%" y="1317" width="0.0289%" height="15" fill="rgb(214,131,14)" fg:x="15024" fg:w="6"/><text x="72.5468%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="72.3016%" y="1301" width="0.0241%" height="15" fill="rgb(229,177,11)" fg:x="15025" fg:w="5"/><text x="72.5516%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="72.3064%" y="1285" width="0.0192%" height="15" fill="rgb(231,180,14)" fg:x="15026" fg:w="4"/><text x="72.5564%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="72.3064%" y="1269" width="0.0192%" height="15" fill="rgb(232,88,2)" fg:x="15026" fg:w="4"/><text x="72.5564%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="72.3064%" y="1253" width="0.0192%" height="15" fill="rgb(205,220,8)" fg:x="15026" fg:w="4"/><text x="72.5564%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="72.3064%" y="1237" width="0.0192%" height="15" fill="rgb(225,23,53)" fg:x="15026" fg:w="4"/><text x="72.5564%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="72.3449%" y="1285" width="0.0144%" height="15" fill="rgb(213,62,29)" fg:x="15034" fg:w="3"/><text x="72.5949%" y="1295.50"></text></g><g><title>revm::journaled_state::JournaledState::touch (6 samples, 0.03%)</title><rect x="72.3353%" y="1333" width="0.0289%" height="15" fill="rgb(227,75,7)" fg:x="15032" fg:w="6"/><text x="72.5853%" y="1343.50"></text></g><g><title>revm::journaled_state::JournaledState::touch_account (4 samples, 0.02%)</title><rect x="72.3449%" y="1317" width="0.0192%" height="15" fill="rgb(207,105,14)" fg:x="15034" fg:w="4"/><text x="72.5949%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="72.3449%" y="1301" width="0.0192%" height="15" fill="rgb(245,62,29)" fg:x="15034" fg:w="4"/><text x="72.5949%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.01%)</title><rect x="72.3642%" y="1317" width="0.0144%" height="15" fill="rgb(236,202,4)" fg:x="15038" fg:w="3"/><text x="72.6142%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.01%)</title><rect x="72.3642%" y="1301" width="0.0144%" height="15" fill="rgb(250,67,1)" fg:x="15038" fg:w="3"/><text x="72.6142%" y="1311.50"></text></g><g><title>revm::journaled_state::JournaledState::transfer (13 samples, 0.06%)</title><rect x="72.3642%" y="1333" width="0.0626%" height="15" fill="rgb(253,115,44)" fg:x="15038" fg:w="13"/><text x="72.6142%" y="1343.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (10 samples, 0.05%)</title><rect x="72.3786%" y="1317" width="0.0481%" height="15" fill="rgb(251,139,18)" fg:x="15041" fg:w="10"/><text x="72.6286%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (7 samples, 0.03%)</title><rect x="72.3931%" y="1301" width="0.0337%" height="15" fill="rgb(218,22,32)" fg:x="15044" fg:w="7"/><text x="72.6431%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="72.3979%" y="1285" width="0.0289%" height="15" fill="rgb(243,53,5)" fg:x="15045" fg:w="6"/><text x="72.6479%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.03%)</title><rect x="72.3979%" y="1269" width="0.0289%" height="15" fill="rgb(227,56,16)" fg:x="15045" fg:w="6"/><text x="72.6479%" y="1279.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::new (11 samples, 0.05%)</title><rect x="72.4267%" y="1333" width="0.0529%" height="15" fill="rgb(245,53,0)" fg:x="15051" fg:w="11"/><text x="72.6767%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::new (10 samples, 0.05%)</title><rect x="72.4315%" y="1317" width="0.0481%" height="15" fill="rgb(216,170,35)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.05%)</title><rect x="72.4315%" y="1301" width="0.0481%" height="15" fill="rgb(211,200,8)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="72.4315%" y="1285" width="0.0481%" height="15" fill="rgb(228,204,44)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="72.4315%" y="1269" width="0.0481%" height="15" fill="rgb(214,121,17)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.05%)</title><rect x="72.4315%" y="1253" width="0.0481%" height="15" fill="rgb(233,64,38)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.05%)</title><rect x="72.4315%" y="1237" width="0.0481%" height="15" fill="rgb(253,54,19)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.05%)</title><rect x="72.4315%" y="1221" width="0.0481%" height="15" fill="rgb(253,94,18)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.05%)</title><rect x="72.4315%" y="1205" width="0.0481%" height="15" fill="rgb(227,57,52)" fg:x="15052" fg:w="10"/><text x="72.6815%" y="1215.50"></text></g><g><title>malloc (9 samples, 0.04%)</title><rect x="72.4364%" y="1189" width="0.0433%" height="15" fill="rgb(230,228,50)" fg:x="15053" fg:w="9"/><text x="72.6864%" y="1199.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="72.4412%" y="1173" width="0.0385%" height="15" fill="rgb(217,205,27)" fg:x="15054" fg:w="8"/><text x="72.6912%" y="1183.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (6 samples, 0.03%)</title><rect x="74.2361%" y="1237" width="0.0289%" height="15" fill="rgb(252,71,50)" fg:x="15427" fg:w="6"/><text x="74.4861%" y="1247.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (6 samples, 0.03%)</title><rect x="74.2361%" y="1221" width="0.0289%" height="15" fill="rgb(209,86,4)" fg:x="15427" fg:w="6"/><text x="74.4861%" y="1231.50"></text></g><g><title>bitvec::index::BitIdx&lt;R&gt;::offset (6 samples, 0.03%)</title><rect x="74.2361%" y="1205" width="0.0289%" height="15" fill="rgb(229,94,0)" fg:x="15427" fg:w="6"/><text x="74.4861%" y="1215.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::set_unchecked (19 samples, 0.09%)</title><rect x="74.2361%" y="1269" width="0.0914%" height="15" fill="rgb(252,223,21)" fg:x="15427" fg:w="19"/><text x="74.4861%" y="1279.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::replace_unchecked (19 samples, 0.09%)</title><rect x="74.2361%" y="1253" width="0.0914%" height="15" fill="rgb(230,210,4)" fg:x="15427" fg:w="19"/><text x="74.4861%" y="1263.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;wyz::comu::Mut,T,O&gt;::replace (13 samples, 0.06%)</title><rect x="74.2650%" y="1237" width="0.0626%" height="15" fill="rgb(240,149,38)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1247.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;wyz::comu::Frozen&lt;M&gt;,T,O&gt;::frozen_write_bit (13 samples, 0.06%)</title><rect x="74.2650%" y="1221" width="0.0626%" height="15" fill="rgb(254,105,20)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1231.50"></text></g><g><title>bitvec::access::BitAccess::write_bit (13 samples, 0.06%)</title><rect x="74.2650%" y="1205" width="0.0626%" height="15" fill="rgb(253,87,46)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1215.50"></text></g><g><title>bitvec::index::BitIdx&lt;R&gt;::select (13 samples, 0.06%)</title><rect x="74.2650%" y="1189" width="0.0626%" height="15" fill="rgb(253,116,33)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1199.50"></text></g><g><title>&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (13 samples, 0.06%)</title><rect x="74.2650%" y="1173" width="0.0626%" height="15" fill="rgb(229,198,5)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1183.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shl&gt;::shl (13 samples, 0.06%)</title><rect x="74.2650%" y="1157" width="0.0626%" height="15" fill="rgb(242,38,37)" fg:x="15433" fg:w="13"/><text x="74.5150%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (52 samples, 0.25%)</title><rect x="74.3371%" y="1269" width="0.2502%" height="15" fill="rgb(242,69,53)" fg:x="15448" fg:w="52"/><text x="74.5871%" y="1279.50"></text></g><g><title>revm_interpreter::interpreter::analysis::analyze (445 samples, 2.14%)</title><rect x="72.4989%" y="1285" width="2.1414%" height="15" fill="rgb(249,80,16)" fg:x="15066" fg:w="445"/><text x="72.7489%" y="1295.50">r..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.05%)</title><rect x="74.5874%" y="1269" width="0.0529%" height="15" fill="rgb(206,128,11)" fg:x="15500" fg:w="11"/><text x="74.8374%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.09%)</title><rect x="74.6403%" y="1269" width="0.0914%" height="15" fill="rgb(212,35,20)" fg:x="15511" fg:w="19"/><text x="74.8903%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.09%)</title><rect x="74.6403%" y="1253" width="0.0914%" height="15" fill="rgb(236,79,13)" fg:x="15511" fg:w="19"/><text x="74.8903%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.09%)</title><rect x="74.6403%" y="1237" width="0.0914%" height="15" fill="rgb(233,123,3)" fg:x="15511" fg:w="19"/><text x="74.8903%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.09%)</title><rect x="74.6403%" y="1221" width="0.0914%" height="15" fill="rgb(214,93,52)" fg:x="15511" fg:w="19"/><text x="74.8903%" y="1231.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="74.6403%" y="1205" width="0.0914%" height="15" fill="rgb(251,37,40)" fg:x="15511" fg:w="19"/><text x="74.8903%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.07%)</title><rect x="74.7317%" y="1269" width="0.0674%" height="15" fill="rgb(227,80,54)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.07%)</title><rect x="74.7317%" y="1253" width="0.0674%" height="15" fill="rgb(254,48,11)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.07%)</title><rect x="74.7317%" y="1237" width="0.0674%" height="15" fill="rgb(235,193,26)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.07%)</title><rect x="74.7317%" y="1221" width="0.0674%" height="15" fill="rgb(229,99,21)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.07%)</title><rect x="74.7317%" y="1205" width="0.0674%" height="15" fill="rgb(211,140,41)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.07%)</title><rect x="74.7317%" y="1189" width="0.0674%" height="15" fill="rgb(240,227,30)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.07%)</title><rect x="74.7317%" y="1173" width="0.0674%" height="15" fill="rgb(215,224,45)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1183.50"></text></g><g><title>malloc (14 samples, 0.07%)</title><rect x="74.7317%" y="1157" width="0.0674%" height="15" fill="rgb(206,123,31)" fg:x="15530" fg:w="14"/><text x="74.9817%" y="1167.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="74.7414%" y="1141" width="0.0577%" height="15" fill="rgb(210,138,16)" fg:x="15532" fg:w="12"/><text x="74.9914%" y="1151.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.7847%" y="1125" width="0.0144%" height="15" fill="rgb(228,57,28)" fg:x="15541" fg:w="3"/><text x="75.0347%" y="1135.50"></text></g><g><title>revm_interpreter::interpreter::contract::Contract::new_with_context (483 samples, 2.32%)</title><rect x="72.4797%" y="1333" width="2.3242%" height="15" fill="rgb(242,170,10)" fg:x="15062" fg:w="483"/><text x="72.7297%" y="1343.50">r..</text></g><g><title>revm_interpreter::interpreter::contract::Contract::new (483 samples, 2.32%)</title><rect x="72.4797%" y="1317" width="2.3242%" height="15" fill="rgb(228,214,39)" fg:x="15062" fg:w="483"/><text x="72.7297%" y="1327.50">r..</text></g><g><title>revm_interpreter::interpreter::analysis::to_analysed (481 samples, 2.31%)</title><rect x="72.4893%" y="1301" width="2.3146%" height="15" fill="rgb(218,179,33)" fg:x="15064" fg:w="481"/><text x="72.7393%" y="1311.50">r..</text></g><g><title>revm_primitives::bytecode::Bytecode::to_checked (34 samples, 0.16%)</title><rect x="74.6403%" y="1285" width="0.1636%" height="15" fill="rgb(235,193,39)" fg:x="15511" fg:w="34"/><text x="74.8903%" y="1295.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::call (551 samples, 2.65%)</title><rect x="72.1717%" y="1397" width="2.6515%" height="15" fill="rgb(219,221,36)" fg:x="14998" fg:w="551"/><text x="72.4217%" y="1407.50">re..</text></g><g><title>core::ops::function::Fn::call (550 samples, 2.65%)</title><rect x="72.1765%" y="1381" width="2.6466%" height="15" fill="rgb(248,218,19)" fg:x="14999" fg:w="550"/><text x="72.4265%" y="1391.50">co..</text></g><g><title>revm::handler::mainnet::execution::call (550 samples, 2.65%)</title><rect x="72.1765%" y="1365" width="2.6466%" height="15" fill="rgb(205,50,9)" fg:x="14999" fg:w="550"/><text x="72.4265%" y="1375.50">re..</text></g><g><title>revm::context::EvmContext&lt;DB&gt;::make_call_frame (547 samples, 2.63%)</title><rect x="72.1909%" y="1349" width="2.6322%" height="15" fill="rgb(238,81,28)" fg:x="15002" fg:w="547"/><text x="72.4409%" y="1359.50">re..</text></g><g><title>revm_precompile::Precompiles::get (4 samples, 0.02%)</title><rect x="74.8039%" y="1333" width="0.0192%" height="15" fill="rgb(235,110,19)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.02%)</title><rect x="74.8039%" y="1317" width="0.0192%" height="15" fill="rgb(214,7,14)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.02%)</title><rect x="74.8039%" y="1301" width="0.0192%" height="15" fill="rgb(211,77,3)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.02%)</title><rect x="74.8039%" y="1285" width="0.0192%" height="15" fill="rgb(229,5,9)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="74.8039%" y="1269" width="0.0192%" height="15" fill="rgb(225,90,11)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="74.8039%" y="1253" width="0.0192%" height="15" fill="rgb(242,56,8)" fg:x="15545" fg:w="4"/><text x="75.0539%" y="1263.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="74.8087%" y="1237" width="0.0144%" height="15" fill="rgb(249,212,39)" fg:x="15546" fg:w="3"/><text x="75.0587%" y="1247.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="74.8087%" y="1221" width="0.0144%" height="15" fill="rgb(236,90,9)" fg:x="15546" fg:w="3"/><text x="75.0587%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="74.8280%" y="1333" width="0.0192%" height="15" fill="rgb(206,88,35)" fg:x="15550" fg:w="4"/><text x="75.0780%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="74.8280%" y="1317" width="0.0192%" height="15" fill="rgb(205,126,30)" fg:x="15550" fg:w="4"/><text x="75.0780%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="74.8280%" y="1301" width="0.0192%" height="15" fill="rgb(230,176,12)" fg:x="15550" fg:w="4"/><text x="75.0780%" y="1311.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="74.8280%" y="1285" width="0.0192%" height="15" fill="rgb(243,19,9)" fg:x="15550" fg:w="4"/><text x="75.0780%" y="1295.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.8328%" y="1269" width="0.0144%" height="15" fill="rgb(245,171,17)" fg:x="15551" fg:w="3"/><text x="75.0828%" y="1279.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="74.8472%" y="1269" width="0.0192%" height="15" fill="rgb(227,52,21)" fg:x="15554" fg:w="4"/><text x="75.0972%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="74.8472%" y="1253" width="0.0192%" height="15" fill="rgb(238,69,14)" fg:x="15554" fg:w="4"/><text x="75.0972%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="74.8472%" y="1237" width="0.0192%" height="15" fill="rgb(241,156,39)" fg:x="15554" fg:w="4"/><text x="75.0972%" y="1247.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="74.8472%" y="1221" width="0.0192%" height="15" fill="rgb(212,227,28)" fg:x="15554" fg:w="4"/><text x="75.0972%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (6 samples, 0.03%)</title><rect x="74.8665%" y="1253" width="0.0289%" height="15" fill="rgb(209,118,27)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (6 samples, 0.03%)</title><rect x="74.8665%" y="1237" width="0.0289%" height="15" fill="rgb(226,102,5)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1247.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="74.8665%" y="1221" width="0.0289%" height="15" fill="rgb(223,34,3)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1231.50"></text></g><g><title>bytes::bytes::shared_drop (6 samples, 0.03%)</title><rect x="74.8665%" y="1205" width="0.0289%" height="15" fill="rgb(221,81,38)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1215.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (6 samples, 0.03%)</title><rect x="74.8665%" y="1189" width="0.0289%" height="15" fill="rgb(236,219,28)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1199.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (6 samples, 0.03%)</title><rect x="74.8665%" y="1173" width="0.0289%" height="15" fill="rgb(213,200,14)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1183.50"></text></g><g><title>bytes::bytes::release_shared (6 samples, 0.03%)</title><rect x="74.8665%" y="1157" width="0.0289%" height="15" fill="rgb(240,33,19)" fg:x="15558" fg:w="6"/><text x="75.1165%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="74.8761%" y="1141" width="0.0192%" height="15" fill="rgb(233,113,27)" fg:x="15560" fg:w="4"/><text x="75.1261%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="74.8761%" y="1125" width="0.0192%" height="15" fill="rgb(220,221,18)" fg:x="15560" fg:w="4"/><text x="75.1261%" y="1135.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="74.8809%" y="1109" width="0.0144%" height="15" fill="rgb(238,92,8)" fg:x="15561" fg:w="3"/><text x="75.1309%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (13 samples, 0.06%)</title><rect x="74.8953%" y="1237" width="0.0626%" height="15" fill="rgb(222,164,16)" fg:x="15564" fg:w="13"/><text x="75.1453%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (13 samples, 0.06%)</title><rect x="74.8953%" y="1221" width="0.0626%" height="15" fill="rgb(241,119,3)" fg:x="15564" fg:w="13"/><text x="75.1453%" y="1231.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (13 samples, 0.06%)</title><rect x="74.8953%" y="1205" width="0.0626%" height="15" fill="rgb(241,44,8)" fg:x="15564" fg:w="13"/><text x="75.1453%" y="1215.50"></text></g><g><title>bytes::bytes::promotable_even_drop (10 samples, 0.05%)</title><rect x="74.9098%" y="1189" width="0.0481%" height="15" fill="rgb(230,36,40)" fg:x="15567" fg:w="10"/><text x="75.1598%" y="1199.50"></text></g><g><title>free (10 samples, 0.05%)</title><rect x="74.9098%" y="1173" width="0.0481%" height="15" fill="rgb(243,16,36)" fg:x="15567" fg:w="10"/><text x="75.1598%" y="1183.50"></text></g><g><title>[libc.so.6] (9 samples, 0.04%)</title><rect x="74.9146%" y="1157" width="0.0433%" height="15" fill="rgb(231,4,26)" fg:x="15568" fg:w="9"/><text x="75.1646%" y="1167.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="74.9338%" y="1141" width="0.0241%" height="15" fill="rgb(240,9,31)" fg:x="15572" fg:w="5"/><text x="75.1838%" y="1151.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="74.9579%" y="1173" width="0.0144%" height="15" fill="rgb(207,173,15)" fg:x="15577" fg:w="3"/><text x="75.2079%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;bitvec::vec::BitVec&lt;u8&gt;,&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="74.9579%" y="1157" width="0.0144%" height="15" fill="rgb(224,192,53)" fg:x="15577" fg:w="3"/><text x="75.2079%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="74.9579%" y="1141" width="0.0144%" height="15" fill="rgb(223,67,28)" fg:x="15577" fg:w="3"/><text x="75.2079%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.03%)</title><rect x="74.9579%" y="1189" width="0.0337%" height="15" fill="rgb(211,20,47)" fg:x="15577" fg:w="7"/><text x="75.2079%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitvec::vec::BitVec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="74.9723%" y="1173" width="0.0192%" height="15" fill="rgb(240,228,2)" fg:x="15580" fg:w="4"/><text x="75.2223%" y="1183.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop (4 samples, 0.02%)</title><rect x="74.9723%" y="1157" width="0.0192%" height="15" fill="rgb(248,151,12)" fg:x="15580" fg:w="4"/><text x="75.2223%" y="1167.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::with_vec (3 samples, 0.01%)</title><rect x="74.9771%" y="1141" width="0.0144%" height="15" fill="rgb(244,8,39)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1151.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop::{{closure}} (3 samples, 0.01%)</title><rect x="74.9771%" y="1125" width="0.0144%" height="15" fill="rgb(222,26,8)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1135.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (3 samples, 0.01%)</title><rect x="74.9771%" y="1109" width="0.0144%" height="15" fill="rgb(213,106,44)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="74.9771%" y="1093" width="0.0144%" height="15" fill="rgb(214,129,20)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="74.9771%" y="1077" width="0.0144%" height="15" fill="rgb(212,32,13)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="74.9771%" y="1061" width="0.0144%" height="15" fill="rgb(208,168,33)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="74.9771%" y="1045" width="0.0144%" height="15" fill="rgb(231,207,8)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="74.9771%" y="1029" width="0.0144%" height="15" fill="rgb(235,219,23)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1039.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="74.9771%" y="1013" width="0.0144%" height="15" fill="rgb(226,216,26)" fg:x="15581" fg:w="3"/><text x="75.2271%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_interpreter::interpreter::contract::Contract&gt;&gt; (35 samples, 0.17%)</title><rect x="74.8472%" y="1285" width="0.1684%" height="15" fill="rgb(239,137,16)" fg:x="15554" fg:w="35"/><text x="75.0972%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter::contract::Contract&gt; (31 samples, 0.15%)</title><rect x="74.8665%" y="1269" width="0.1492%" height="15" fill="rgb(207,12,36)" fg:x="15558" fg:w="31"/><text x="75.1165%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter::analysis::BytecodeLocked&gt; (25 samples, 0.12%)</title><rect x="74.8953%" y="1253" width="0.1203%" height="15" fill="rgb(210,214,24)" fg:x="15564" fg:w="25"/><text x="75.1453%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (12 samples, 0.06%)</title><rect x="74.9579%" y="1237" width="0.0577%" height="15" fill="rgb(206,56,30)" fg:x="15577" fg:w="12"/><text x="75.2079%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (12 samples, 0.06%)</title><rect x="74.9579%" y="1221" width="0.0577%" height="15" fill="rgb(228,143,26)" fg:x="15577" fg:w="12"/><text x="75.2079%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="74.9579%" y="1205" width="0.0577%" height="15" fill="rgb(216,218,46)" fg:x="15577" fg:w="12"/><text x="75.2079%" y="1215.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::call_return (46 samples, 0.22%)</title><rect x="74.8232%" y="1397" width="0.2214%" height="15" fill="rgb(206,6,19)" fg:x="15549" fg:w="46"/><text x="75.0732%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (46 samples, 0.22%)</title><rect x="74.8232%" y="1381" width="0.2214%" height="15" fill="rgb(239,177,51)" fg:x="15549" fg:w="46"/><text x="75.0732%" y="1391.50"></text></g><g><title>revm::handler::mainnet::execution::call_return (46 samples, 0.22%)</title><rect x="74.8232%" y="1365" width="0.2214%" height="15" fill="rgb(216,55,25)" fg:x="15549" fg:w="46"/><text x="75.0732%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm::frame::CallFrame&gt;&gt; (45 samples, 0.22%)</title><rect x="74.8280%" y="1349" width="0.2165%" height="15" fill="rgb(231,163,29)" fg:x="15550" fg:w="45"/><text x="75.0780%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::frame::CallFrame&gt; (41 samples, 0.20%)</title><rect x="74.8472%" y="1333" width="0.1973%" height="15" fill="rgb(232,149,50)" fg:x="15554" fg:w="41"/><text x="75.0972%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::frame::FrameData&gt; (41 samples, 0.20%)</title><rect x="74.8472%" y="1317" width="0.1973%" height="15" fill="rgb(223,142,48)" fg:x="15554" fg:w="41"/><text x="75.0972%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter::Interpreter&gt; (41 samples, 0.20%)</title><rect x="74.8472%" y="1301" width="0.1973%" height="15" fill="rgb(245,83,23)" fg:x="15554" fg:w="41"/><text x="75.0972%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_interpreter::interpreter::stack::Stack&gt; (6 samples, 0.03%)</title><rect x="75.0156%" y="1285" width="0.0289%" height="15" fill="rgb(224,63,2)" fg:x="15589" fg:w="6"/><text x="75.2656%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ruint::Uint&lt;256_usize,4_usize&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="75.0156%" y="1269" width="0.0289%" height="15" fill="rgb(218,65,53)" fg:x="15589" fg:w="6"/><text x="75.2656%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ruint::Uint&lt;256_usize,4_usize&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="75.0156%" y="1253" width="0.0289%" height="15" fill="rgb(221,84,29)" fg:x="15589" fg:w="6"/><text x="75.2656%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="75.0156%" y="1237" width="0.0289%" height="15" fill="rgb(234,0,32)" fg:x="15589" fg:w="6"/><text x="75.2656%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="75.0205%" y="1221" width="0.0241%" height="15" fill="rgb(206,20,16)" fg:x="15590" fg:w="5"/><text x="75.2705%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="75.0205%" y="1205" width="0.0241%" height="15" fill="rgb(244,172,18)" fg:x="15590" fg:w="5"/><text x="75.2705%" y="1215.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="75.0205%" y="1189" width="0.0241%" height="15" fill="rgb(254,133,1)" fg:x="15590" fg:w="5"/><text x="75.2705%" y="1199.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="75.0205%" y="1173" width="0.0241%" height="15" fill="rgb(222,206,41)" fg:x="15590" fg:w="5"/><text x="75.2705%" y="1183.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="75.0301%" y="1157" width="0.0144%" height="15" fill="rgb(212,3,42)" fg:x="15592" fg:w="3"/><text x="75.2801%" y="1167.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::create_return (4 samples, 0.02%)</title><rect x="75.0493%" y="1397" width="0.0192%" height="15" fill="rgb(241,11,4)" fg:x="15596" fg:w="4"/><text x="75.2993%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="75.0493%" y="1381" width="0.0192%" height="15" fill="rgb(205,19,26)" fg:x="15596" fg:w="4"/><text x="75.2993%" y="1391.50"></text></g><g><title>revm::handler::mainnet::execution::create_return (4 samples, 0.02%)</title><rect x="75.0493%" y="1365" width="0.0192%" height="15" fill="rgb(210,179,32)" fg:x="15596" fg:w="4"/><text x="75.2993%" y="1375.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::create_return (4 samples, 0.02%)</title><rect x="75.0493%" y="1349" width="0.0192%" height="15" fill="rgb(227,116,49)" fg:x="15596" fg:w="4"/><text x="75.2993%" y="1359.50"></text></g><g><title>revm_interpreter::instructions::arithmetic::div (18 samples, 0.09%)</title><rect x="76.8972%" y="1349" width="0.0866%" height="15" fill="rgb(211,146,6)" fg:x="15980" fg:w="18"/><text x="77.1472%" y="1359.50"></text></g><g><title>ruint::div::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::wrapping_div (15 samples, 0.07%)</title><rect x="76.9116%" y="1333" width="0.0722%" height="15" fill="rgb(219,44,39)" fg:x="15983" fg:w="15"/><text x="77.1616%" y="1343.50"></text></g><g><title>ruint::div::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::div_rem (14 samples, 0.07%)</title><rect x="76.9164%" y="1317" width="0.0674%" height="15" fill="rgb(234,128,11)" fg:x="15984" fg:w="14"/><text x="77.1664%" y="1327.50"></text></g><g><title>ruint::algorithms::div::div (7 samples, 0.03%)</title><rect x="76.9501%" y="1301" width="0.0337%" height="15" fill="rgb(220,183,53)" fg:x="15991" fg:w="7"/><text x="77.2001%" y="1311.50"></text></g><g><title>ruint::algorithms::div::small::div_nx1 (6 samples, 0.03%)</title><rect x="76.9549%" y="1285" width="0.0289%" height="15" fill="rgb(213,219,32)" fg:x="15992" fg:w="6"/><text x="77.2049%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::arithmetic::wrapping_add (7 samples, 0.03%)</title><rect x="76.9934%" y="1349" width="0.0337%" height="15" fill="rgb(232,156,16)" fg:x="16000" fg:w="7"/><text x="77.2434%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_top_unsafe (4 samples, 0.02%)</title><rect x="77.0078%" y="1333" width="0.0192%" height="15" fill="rgb(246,135,34)" fg:x="16003" fg:w="4"/><text x="77.2578%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_unsafe (4 samples, 0.02%)</title><rect x="77.0078%" y="1317" width="0.0192%" height="15" fill="rgb(241,99,0)" fg:x="16003" fg:w="4"/><text x="77.2578%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.02%)</title><rect x="77.0078%" y="1301" width="0.0192%" height="15" fill="rgb(222,103,45)" fg:x="16003" fg:w="4"/><text x="77.2578%" y="1311.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="77.0127%" y="1285" width="0.0144%" height="15" fill="rgb(212,57,4)" fg:x="16004" fg:w="3"/><text x="77.2627%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::arithmetic::wrapping_sub (4 samples, 0.02%)</title><rect x="77.0271%" y="1349" width="0.0192%" height="15" fill="rgb(215,68,47)" fg:x="16007" fg:w="4"/><text x="77.2771%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_top_unsafe (3 samples, 0.01%)</title><rect x="77.0752%" y="1333" width="0.0144%" height="15" fill="rgb(230,84,2)" fg:x="16017" fg:w="3"/><text x="77.3252%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_unsafe (3 samples, 0.01%)</title><rect x="77.0752%" y="1317" width="0.0144%" height="15" fill="rgb(220,102,14)" fg:x="16017" fg:w="3"/><text x="77.3252%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.01%)</title><rect x="77.0752%" y="1301" width="0.0144%" height="15" fill="rgb(240,10,32)" fg:x="16017" fg:w="3"/><text x="77.3252%" y="1311.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="77.0752%" y="1285" width="0.0144%" height="15" fill="rgb(215,47,27)" fg:x="16017" fg:w="3"/><text x="77.3252%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::bitwise::bitand (10 samples, 0.05%)</title><rect x="77.0463%" y="1349" width="0.0481%" height="15" fill="rgb(233,188,43)" fg:x="16011" fg:w="10"/><text x="77.2963%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_top_unsafe (3 samples, 0.01%)</title><rect x="77.1137%" y="1333" width="0.0144%" height="15" fill="rgb(253,190,1)" fg:x="16025" fg:w="3"/><text x="77.3637%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::bitwise::eq (8 samples, 0.04%)</title><rect x="77.1041%" y="1349" width="0.0385%" height="15" fill="rgb(206,114,52)" fg:x="16023" fg:w="8"/><text x="77.3541%" y="1359.50"></text></g><g><title>ruint::from::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from (3 samples, 0.01%)</title><rect x="77.1281%" y="1333" width="0.0144%" height="15" fill="rgb(233,120,37)" fg:x="16028" fg:w="3"/><text x="77.3781%" y="1343.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as ruint::from::UintTryFrom&lt;T&gt;&gt;::uint_try_from (3 samples, 0.01%)</title><rect x="77.1281%" y="1317" width="0.0144%" height="15" fill="rgb(214,52,39)" fg:x="16028" fg:w="3"/><text x="77.3781%" y="1327.50"></text></g><g><title>ruint::from::&lt;impl core::convert::TryFrom&lt;bool&gt; for ruint::Uint&lt;_,_&gt;&gt;::try_from (3 samples, 0.01%)</title><rect x="77.1281%" y="1301" width="0.0144%" height="15" fill="rgb(223,80,29)" fg:x="16028" fg:w="3"/><text x="77.3781%" y="1311.50"></text></g><g><title>ruint::from::&lt;impl core::convert::TryFrom&lt;u64&gt; for ruint::Uint&lt;_,_&gt;&gt;::try_from (3 samples, 0.01%)</title><rect x="77.1281%" y="1285" width="0.0144%" height="15" fill="rgb(230,101,40)" fg:x="16028" fg:w="3"/><text x="77.3781%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::bitwise::gt (7 samples, 0.03%)</title><rect x="77.1426%" y="1349" width="0.0337%" height="15" fill="rgb(219,211,8)" fg:x="16031" fg:w="7"/><text x="77.3926%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_top_unsafe (3 samples, 0.01%)</title><rect x="77.1618%" y="1333" width="0.0144%" height="15" fill="rgb(252,126,28)" fg:x="16035" fg:w="3"/><text x="77.4118%" y="1343.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="77.1763%" y="1333" width="0.0144%" height="15" fill="rgb(215,56,38)" fg:x="16038" fg:w="3"/><text x="77.4263%" y="1343.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.01%)</title><rect x="77.1763%" y="1317" width="0.0144%" height="15" fill="rgb(249,55,44)" fg:x="16038" fg:w="3"/><text x="77.4263%" y="1327.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.01%)</title><rect x="77.1763%" y="1301" width="0.0144%" height="15" fill="rgb(220,221,32)" fg:x="16038" fg:w="3"/><text x="77.4263%" y="1311.50"></text></g><g><title>revm_interpreter::instructions::bitwise::iszero (6 samples, 0.03%)</title><rect x="77.1763%" y="1349" width="0.0289%" height="15" fill="rgb(212,216,41)" fg:x="16038" fg:w="6"/><text x="77.4263%" y="1359.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (3 samples, 0.01%)</title><rect x="77.1907%" y="1333" width="0.0144%" height="15" fill="rgb(228,213,43)" fg:x="16041" fg:w="3"/><text x="77.4407%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::bitwise::lt (3 samples, 0.01%)</title><rect x="77.2051%" y="1349" width="0.0144%" height="15" fill="rgb(211,31,26)" fg:x="16044" fg:w="3"/><text x="77.4551%" y="1359.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (3 samples, 0.01%)</title><rect x="77.2051%" y="1333" width="0.0144%" height="15" fill="rgb(229,202,19)" fg:x="16044" fg:w="3"/><text x="77.4551%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::bitwise::shl (5 samples, 0.02%)</title><rect x="77.2196%" y="1349" width="0.0241%" height="15" fill="rgb(229,105,46)" fg:x="16047" fg:w="5"/><text x="77.4696%" y="1359.50"></text></g><g><title>ruint::bits::&lt;impl core::ops::bit::ShlAssign&lt;usize&gt; for ruint::Uint&lt;_,_&gt;&gt;::shl_assign (3 samples, 0.01%)</title><rect x="77.2292%" y="1333" width="0.0144%" height="15" fill="rgb(235,108,1)" fg:x="16049" fg:w="3"/><text x="77.4792%" y="1343.50"></text></g><g><title>ruint::bits::&lt;impl core::ops::bit::Shl&lt;usize&gt; for ruint::Uint&lt;_,_&gt;&gt;::shl (3 samples, 0.01%)</title><rect x="77.2292%" y="1317" width="0.0144%" height="15" fill="rgb(245,111,35)" fg:x="16049" fg:w="3"/><text x="77.4792%" y="1327.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::wrapping_shl (3 samples, 0.01%)</title><rect x="77.2292%" y="1301" width="0.0144%" height="15" fill="rgb(219,185,31)" fg:x="16049" fg:w="3"/><text x="77.4792%" y="1311.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::overflowing_shl (3 samples, 0.01%)</title><rect x="77.2292%" y="1285" width="0.0144%" height="15" fill="rgb(214,4,43)" fg:x="16049" fg:w="3"/><text x="77.4792%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::bitwise::shr (5 samples, 0.02%)</title><rect x="77.2436%" y="1349" width="0.0241%" height="15" fill="rgb(235,227,40)" fg:x="16052" fg:w="5"/><text x="77.4936%" y="1359.50"></text></g><g><title>ruint::bits::&lt;impl core::ops::bit::ShrAssign&lt;usize&gt; for ruint::Uint&lt;_,_&gt;&gt;::shr_assign (4 samples, 0.02%)</title><rect x="77.2484%" y="1333" width="0.0192%" height="15" fill="rgb(230,88,30)" fg:x="16053" fg:w="4"/><text x="77.4984%" y="1343.50"></text></g><g><title>ruint::bits::&lt;impl core::ops::bit::Shr&lt;usize&gt; for ruint::Uint&lt;_,_&gt;&gt;::shr (4 samples, 0.02%)</title><rect x="77.2484%" y="1317" width="0.0192%" height="15" fill="rgb(216,217,1)" fg:x="16053" fg:w="4"/><text x="77.4984%" y="1327.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::wrapping_shr (4 samples, 0.02%)</title><rect x="77.2484%" y="1301" width="0.0192%" height="15" fill="rgb(248,139,50)" fg:x="16053" fg:w="4"/><text x="77.4984%" y="1311.50"></text></g><g><title>ruint::bits::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::overflowing_shr (4 samples, 0.02%)</title><rect x="77.2484%" y="1285" width="0.0192%" height="15" fill="rgb(233,1,21)" fg:x="16053" fg:w="4"/><text x="77.4984%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::i256::i256_cmp (4 samples, 0.02%)</title><rect x="77.2725%" y="1333" width="0.0192%" height="15" fill="rgb(215,183,12)" fg:x="16058" fg:w="4"/><text x="77.5225%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::bitwise::slt (7 samples, 0.03%)</title><rect x="77.2677%" y="1349" width="0.0337%" height="15" fill="rgb(229,104,42)" fg:x="16057" fg:w="7"/><text x="77.5177%" y="1359.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (7 samples, 0.03%)</title><rect x="77.4217%" y="1333" width="0.0337%" height="15" fill="rgb(243,34,48)" fg:x="16089" fg:w="7"/><text x="77.6717%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::analysis::BytecodeLocked::as_ptr (7 samples, 0.03%)</title><rect x="77.4554%" y="1333" width="0.0337%" height="15" fill="rgb(239,11,44)" fg:x="16096" fg:w="7"/><text x="77.7054%" y="1343.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref (7 samples, 0.03%)</title><rect x="77.4554%" y="1317" width="0.0337%" height="15" fill="rgb(231,98,35)" fg:x="16096" fg:w="7"/><text x="77.7054%" y="1327.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (7 samples, 0.03%)</title><rect x="77.4554%" y="1301" width="0.0337%" height="15" fill="rgb(233,28,25)" fg:x="16096" fg:w="7"/><text x="77.7054%" y="1311.50"></text></g><g><title>revm_interpreter::instructions::control::jump (53 samples, 0.26%)</title><rect x="77.3014%" y="1349" width="0.2550%" height="15" fill="rgb(234,123,11)" fg:x="16064" fg:w="53"/><text x="77.5514%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::contract::Contract::is_valid_jump (14 samples, 0.07%)</title><rect x="77.4891%" y="1333" width="0.0674%" height="15" fill="rgb(220,69,3)" fg:x="16103" fg:w="14"/><text x="77.7391%" y="1343.50"></text></g><g><title>revm_primitives::bytecode::JumpMap::is_valid (13 samples, 0.06%)</title><rect x="77.4939%" y="1317" width="0.0626%" height="15" fill="rgb(214,64,36)" fg:x="16104" fg:w="13"/><text x="77.7439%" y="1327.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (9 samples, 0.04%)</title><rect x="77.5131%" y="1301" width="0.0433%" height="15" fill="rgb(211,138,32)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1311.50"></text></g><g><title>bitvec::slice::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (9 samples, 0.04%)</title><rect x="77.5131%" y="1285" width="0.0433%" height="15" fill="rgb(213,118,47)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1295.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (9 samples, 0.04%)</title><rect x="77.5131%" y="1269" width="0.0433%" height="15" fill="rgb(243,124,49)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1279.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (9 samples, 0.04%)</title><rect x="77.5131%" y="1253" width="0.0433%" height="15" fill="rgb(221,30,28)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1263.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (9 samples, 0.04%)</title><rect x="77.5131%" y="1237" width="0.0433%" height="15" fill="rgb(246,37,13)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1247.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (9 samples, 0.04%)</title><rect x="77.5131%" y="1221" width="0.0433%" height="15" fill="rgb(249,66,14)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1231.50"></text></g><g><title>bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (9 samples, 0.04%)</title><rect x="77.5131%" y="1205" width="0.0433%" height="15" fill="rgb(213,166,5)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1215.50"></text></g><g><title>bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (9 samples, 0.04%)</title><rect x="77.5131%" y="1189" width="0.0433%" height="15" fill="rgb(221,66,24)" fg:x="16108" fg:w="9"/><text x="77.7631%" y="1199.50"></text></g><g><title>revm_interpreter::instructions::control::jumpdest (12 samples, 0.06%)</title><rect x="77.5564%" y="1349" width="0.0577%" height="15" fill="rgb(210,132,17)" fg:x="16117" fg:w="12"/><text x="77.8064%" y="1359.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (8 samples, 0.04%)</title><rect x="77.5757%" y="1333" width="0.0385%" height="15" fill="rgb(243,202,5)" fg:x="16121" fg:w="8"/><text x="77.8257%" y="1343.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.02%)</title><rect x="77.6671%" y="1333" width="0.0192%" height="15" fill="rgb(233,70,48)" fg:x="16140" fg:w="4"/><text x="77.9171%" y="1343.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="77.6671%" y="1317" width="0.0192%" height="15" fill="rgb(238,41,26)" fg:x="16140" fg:w="4"/><text x="77.9171%" y="1327.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (4 samples, 0.02%)</title><rect x="77.6671%" y="1301" width="0.0192%" height="15" fill="rgb(241,19,31)" fg:x="16140" fg:w="4"/><text x="77.9171%" y="1311.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (4 samples, 0.02%)</title><rect x="77.6671%" y="1285" width="0.0192%" height="15" fill="rgb(214,76,10)" fg:x="16140" fg:w="4"/><text x="77.9171%" y="1295.50"></text></g><g><title>revm_interpreter::interpreter::contract::Contract::is_valid_jump (10 samples, 0.05%)</title><rect x="77.7008%" y="1333" width="0.0481%" height="15" fill="rgb(254,202,22)" fg:x="16147" fg:w="10"/><text x="77.9508%" y="1343.50"></text></g><g><title>revm_primitives::bytecode::JumpMap::is_valid (8 samples, 0.04%)</title><rect x="77.7104%" y="1317" width="0.0385%" height="15" fill="rgb(214,72,24)" fg:x="16149" fg:w="8"/><text x="77.9604%" y="1327.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::index::Index&lt;Idx&gt; for bitvec::vec::BitVec&lt;T,O&gt;&gt;::index (4 samples, 0.02%)</title><rect x="77.7297%" y="1301" width="0.0192%" height="15" fill="rgb(221,92,46)" fg:x="16153" fg:w="4"/><text x="77.9797%" y="1311.50"></text></g><g><title>bitvec::slice::ops::&lt;impl core::ops::index::Index&lt;usize&gt; for bitvec::slice::BitSlice&lt;T,O&gt;&gt;::index (4 samples, 0.02%)</title><rect x="77.7297%" y="1285" width="0.0192%" height="15" fill="rgb(246,13,50)" fg:x="16153" fg:w="4"/><text x="77.9797%" y="1295.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::index (4 samples, 0.02%)</title><rect x="77.7297%" y="1269" width="0.0192%" height="15" fill="rgb(240,165,38)" fg:x="16153" fg:w="4"/><text x="77.9797%" y="1279.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get (4 samples, 0.02%)</title><rect x="77.7297%" y="1253" width="0.0192%" height="15" fill="rgb(241,24,51)" fg:x="16153" fg:w="4"/><text x="77.9797%" y="1263.50"></text></g><g><title>&lt;usize as bitvec::slice::api::BitSliceIndex&lt;T,O&gt;&gt;::get_unchecked (4 samples, 0.02%)</title><rect x="77.7297%" y="1237" width="0.0192%" height="15" fill="rgb(227,51,44)" fg:x="16153" fg:w="4"/><text x="77.9797%" y="1247.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::as_bitptr (3 samples, 0.01%)</title><rect x="77.7345%" y="1221" width="0.0144%" height="15" fill="rgb(231,121,3)" fg:x="16154" fg:w="3"/><text x="77.9845%" y="1231.50"></text></g><g><title>bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::to_bitptr (3 samples, 0.01%)</title><rect x="77.7345%" y="1205" width="0.0144%" height="15" fill="rgb(245,3,41)" fg:x="16154" fg:w="3"/><text x="77.9845%" y="1215.50"></text></g><g><title>bitvec::ptr::span::BitSpan&lt;M,T,O&gt;::head (3 samples, 0.01%)</title><rect x="77.7345%" y="1189" width="0.0144%" height="15" fill="rgb(214,13,26)" fg:x="16154" fg:w="3"/><text x="77.9845%" y="1199.50"></text></g><g><title>revm_interpreter::instructions::control::jumpi (35 samples, 0.17%)</title><rect x="77.6142%" y="1349" width="0.1684%" height="15" fill="rgb(252,75,11)" fg:x="16129" fg:w="35"/><text x="77.8642%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop2_unsafe (7 samples, 0.03%)</title><rect x="77.7489%" y="1333" width="0.0337%" height="15" fill="rgb(218,226,17)" fg:x="16157" fg:w="7"/><text x="77.9989%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_unsafe (7 samples, 0.03%)</title><rect x="77.7489%" y="1317" width="0.0337%" height="15" fill="rgb(248,89,38)" fg:x="16157" fg:w="7"/><text x="77.9989%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (7 samples, 0.03%)</title><rect x="77.7489%" y="1301" width="0.0337%" height="15" fill="rgb(237,73,46)" fg:x="16157" fg:w="7"/><text x="77.9989%" y="1311.50"></text></g><g><title>core::ptr::read (5 samples, 0.02%)</title><rect x="77.7585%" y="1285" width="0.0241%" height="15" fill="rgb(242,78,33)" fg:x="16159" fg:w="5"/><text x="78.0085%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::host::call_helpers::calc_call_gas (4 samples, 0.02%)</title><rect x="77.8115%" y="1333" width="0.0192%" height="15" fill="rgb(235,60,3)" fg:x="16170" fg:w="4"/><text x="78.0615%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::host::call_helpers::get_memory_input_and_out_ranges (3 samples, 0.01%)</title><rect x="77.8307%" y="1333" width="0.0144%" height="15" fill="rgb(216,172,19)" fg:x="16174" fg:w="3"/><text x="78.0807%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::host::call (15 samples, 0.07%)</title><rect x="77.7826%" y="1349" width="0.0722%" height="15" fill="rgb(227,6,42)" fg:x="16164" fg:w="15"/><text x="78.0326%" y="1359.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="77.9029%" y="1173" width="0.0192%" height="15" fill="rgb(223,207,42)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="77.9029%" y="1157" width="0.0192%" height="15" fill="rgb(246,138,30)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="77.9029%" y="1141" width="0.0192%" height="15" fill="rgb(251,199,47)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="77.9029%" y="1125" width="0.0192%" height="15" fill="rgb(228,218,44)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="77.9029%" y="1109" width="0.0192%" height="15" fill="rgb(220,68,6)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="77.9029%" y="1093" width="0.0192%" height="15" fill="rgb(240,60,26)" fg:x="16189" fg:w="4"/><text x="78.1529%" y="1103.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="77.9077%" y="1077" width="0.0144%" height="15" fill="rgb(211,200,19)" fg:x="16190" fg:w="3"/><text x="78.1577%" y="1087.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::default::Default&gt;::default (7 samples, 0.03%)</title><rect x="77.9029%" y="1205" width="0.0337%" height="15" fill="rgb(242,145,30)" fg:x="16189" fg:w="7"/><text x="78.1529%" y="1215.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (7 samples, 0.03%)</title><rect x="77.9029%" y="1189" width="0.0337%" height="15" fill="rgb(225,64,13)" fg:x="16189" fg:w="7"/><text x="78.1529%" y="1199.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (3 samples, 0.01%)</title><rect x="77.9221%" y="1173" width="0.0144%" height="15" fill="rgb(218,103,35)" fg:x="16193" fg:w="3"/><text x="78.1721%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.06%)</title><rect x="77.8981%" y="1237" width="0.0577%" height="15" fill="rgb(216,93,46)" fg:x="16188" fg:w="12"/><text x="78.1481%" y="1247.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash::{{closure}} (11 samples, 0.05%)</title><rect x="77.9029%" y="1221" width="0.0529%" height="15" fill="rgb(225,159,27)" fg:x="16189" fg:w="11"/><text x="78.1529%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (4 samples, 0.02%)</title><rect x="77.9366%" y="1205" width="0.0192%" height="15" fill="rgb(225,204,11)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (4 samples, 0.02%)</title><rect x="77.9366%" y="1189" width="0.0192%" height="15" fill="rgb(205,56,4)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (4 samples, 0.02%)</title><rect x="77.9366%" y="1173" width="0.0192%" height="15" fill="rgb(206,6,35)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (4 samples, 0.02%)</title><rect x="77.9366%" y="1157" width="0.0192%" height="15" fill="rgb(247,73,52)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="77.9366%" y="1141" width="0.0192%" height="15" fill="rgb(246,97,4)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="77.9366%" y="1125" width="0.0192%" height="15" fill="rgb(212,37,15)" fg:x="16196" fg:w="4"/><text x="78.1866%" y="1135.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="77.9606%" y="1221" width="0.0144%" height="15" fill="rgb(208,130,40)" fg:x="16201" fg:w="3"/><text x="78.2106%" y="1231.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash (19 samples, 0.09%)</title><rect x="77.8981%" y="1253" width="0.0914%" height="15" fill="rgb(236,55,29)" fg:x="16188" fg:w="19"/><text x="78.1481%" y="1263.50"></text></g><g><title>db::DB::read_from_code_map (7 samples, 0.03%)</title><rect x="77.9558%" y="1237" width="0.0337%" height="15" fill="rgb(209,156,45)" fg:x="16200" fg:w="7"/><text x="78.2058%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.01%)</title><rect x="77.9751%" y="1221" width="0.0144%" height="15" fill="rgb(249,107,4)" fg:x="16204" fg:w="3"/><text x="78.2251%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="77.9751%" y="1205" width="0.0144%" height="15" fill="rgb(227,7,13)" fg:x="16204" fg:w="3"/><text x="78.2251%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.01%)</title><rect x="77.9751%" y="1189" width="0.0144%" height="15" fill="rgb(250,129,14)" fg:x="16204" fg:w="3"/><text x="78.2251%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="77.9751%" y="1173" width="0.0144%" height="15" fill="rgb(229,92,13)" fg:x="16204" fg:w="3"/><text x="78.2251%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.01%)</title><rect x="77.9751%" y="1157" width="0.0144%" height="15" fill="rgb(245,98,39)" fg:x="16204" fg:w="3"/><text x="78.2251%" y="1167.50"></text></g><g><title>db::CacheVal&lt;T&gt;::get_current (4 samples, 0.02%)</title><rect x="78.0039%" y="1237" width="0.0192%" height="15" fill="rgb(234,135,48)" fg:x="16210" fg:w="4"/><text x="78.2539%" y="1247.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="78.0039%" y="1221" width="0.0192%" height="15" fill="rgb(230,98,28)" fg:x="16210" fg:w="4"/><text x="78.2539%" y="1231.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="78.0088%" y="1205" width="0.0144%" height="15" fill="rgb(223,121,0)" fg:x="16211" fg:w="3"/><text x="78.2588%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.02%)</title><rect x="78.0232%" y="1237" width="0.0192%" height="15" fill="rgb(234,173,33)" fg:x="16214" fg:w="4"/><text x="78.2732%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.02%)</title><rect x="78.0232%" y="1221" width="0.0192%" height="15" fill="rgb(245,47,8)" fg:x="16214" fg:w="4"/><text x="78.2732%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.02%)</title><rect x="78.0232%" y="1205" width="0.0192%" height="15" fill="rgb(205,17,20)" fg:x="16214" fg:w="4"/><text x="78.2732%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="78.0232%" y="1189" width="0.0192%" height="15" fill="rgb(232,151,16)" fg:x="16214" fg:w="4"/><text x="78.2732%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="78.0232%" y="1173" width="0.0192%" height="15" fill="rgb(208,30,32)" fg:x="16214" fg:w="4"/><text x="78.2732%" y="1183.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::basic (33 samples, 0.16%)</title><rect x="77.8981%" y="1269" width="0.1588%" height="15" fill="rgb(254,26,3)" fg:x="16188" fg:w="33"/><text x="78.1481%" y="1279.50"></text></g><g><title>db::DB::read_from_account_map (13 samples, 0.06%)</title><rect x="77.9943%" y="1253" width="0.0626%" height="15" fill="rgb(240,177,30)" fg:x="16208" fg:w="13"/><text x="78.2443%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (3 samples, 0.01%)</title><rect x="78.0665%" y="1269" width="0.0144%" height="15" fill="rgb(248,76,44)" fg:x="16223" fg:w="3"/><text x="78.3165%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="78.1002%" y="1157" width="0.0144%" height="15" fill="rgb(241,186,54)" fg:x="16230" fg:w="3"/><text x="78.3502%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;allocator_api2::stable::alloc::global::Global&gt;::{{closure}}&gt;&gt; (3 samples, 0.01%)</title><rect x="78.1146%" y="1157" width="0.0144%" height="15" fill="rgb(249,171,29)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1167.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.1146%" y="1141" width="0.0144%" height="15" fill="rgb(237,151,44)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::{{closure}} (3 samples, 0.01%)</title><rect x="78.1146%" y="1125" width="0.0144%" height="15" fill="rgb(228,174,30)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3 samples, 0.01%)</title><rect x="78.1146%" y="1109" width="0.0144%" height="15" fill="rgb(252,14,37)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1119.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="78.1146%" y="1093" width="0.0144%" height="15" fill="rgb(207,111,40)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="78.1146%" y="1077" width="0.0144%" height="15" fill="rgb(248,171,54)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1087.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="78.1146%" y="1061" width="0.0144%" height="15" fill="rgb(211,127,2)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1071.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="78.1146%" y="1045" width="0.0144%" height="15" fill="rgb(236,87,47)" fg:x="16233" fg:w="3"/><text x="78.3646%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (5 samples, 0.02%)</title><rect x="78.1387%" y="1125" width="0.0241%" height="15" fill="rgb(223,190,45)" fg:x="16238" fg:w="5"/><text x="78.3887%" y="1135.50"></text></g><g><title>hashbrown::raw::neon::Group::match_empty_or_deleted (3 samples, 0.01%)</title><rect x="78.1483%" y="1109" width="0.0144%" height="15" fill="rgb(215,5,16)" fg:x="16240" fg:w="3"/><text x="78.3983%" y="1119.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcltz_s8 (3 samples, 0.01%)</title><rect x="78.1483%" y="1093" width="0.0144%" height="15" fill="rgb(252,82,33)" fg:x="16240" fg:w="3"/><text x="78.3983%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (6 samples, 0.03%)</title><rect x="78.1387%" y="1141" width="0.0289%" height="15" fill="rgb(247,213,44)" fg:x="16238" fg:w="6"/><text x="78.3887%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (7 samples, 0.03%)</title><rect x="78.1387%" y="1157" width="0.0337%" height="15" fill="rgb(205,196,44)" fg:x="16238" fg:w="7"/><text x="78.3887%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (31 samples, 0.15%)</title><rect x="78.0906%" y="1221" width="0.1492%" height="15" fill="rgb(237,96,54)" fg:x="16228" fg:w="31"/><text x="78.3406%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (31 samples, 0.15%)</title><rect x="78.0906%" y="1205" width="0.1492%" height="15" fill="rgb(230,113,34)" fg:x="16228" fg:w="31"/><text x="78.3406%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (30 samples, 0.14%)</title><rect x="78.0954%" y="1189" width="0.1444%" height="15" fill="rgb(221,224,12)" fg:x="16229" fg:w="30"/><text x="78.3454%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (30 samples, 0.14%)</title><rect x="78.0954%" y="1173" width="0.1444%" height="15" fill="rgb(219,112,44)" fg:x="16229" fg:w="30"/><text x="78.3454%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (14 samples, 0.07%)</title><rect x="78.1724%" y="1157" width="0.0674%" height="15" fill="rgb(210,31,13)" fg:x="16245" fg:w="14"/><text x="78.4224%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (14 samples, 0.07%)</title><rect x="78.1724%" y="1141" width="0.0674%" height="15" fill="rgb(230,25,16)" fg:x="16245" fg:w="14"/><text x="78.4224%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (13 samples, 0.06%)</title><rect x="78.1772%" y="1125" width="0.0626%" height="15" fill="rgb(246,108,53)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1135.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (13 samples, 0.06%)</title><rect x="78.1772%" y="1109" width="0.0626%" height="15" fill="rgb(241,172,50)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1119.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (13 samples, 0.06%)</title><rect x="78.1772%" y="1093" width="0.0626%" height="15" fill="rgb(235,141,10)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1103.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (13 samples, 0.06%)</title><rect x="78.1772%" y="1077" width="0.0626%" height="15" fill="rgb(220,174,43)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.06%)</title><rect x="78.1772%" y="1061" width="0.0626%" height="15" fill="rgb(215,181,40)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1071.50"></text></g><g><title>malloc (13 samples, 0.06%)</title><rect x="78.1772%" y="1045" width="0.0626%" height="15" fill="rgb(230,97,2)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1055.50"></text></g><g><title>[libc.so.6] (13 samples, 0.06%)</title><rect x="78.1772%" y="1029" width="0.0626%" height="15" fill="rgb(211,25,27)" fg:x="16246" fg:w="13"/><text x="78.4272%" y="1039.50"></text></g><g><title>hashbrown::map::VacantEntry&lt;K,V,S,A&gt;::insert (36 samples, 0.17%)</title><rect x="78.0809%" y="1269" width="0.1732%" height="15" fill="rgb(230,87,26)" fg:x="16226" fg:w="36"/><text x="78.3309%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_entry (36 samples, 0.17%)</title><rect x="78.0809%" y="1253" width="0.1732%" height="15" fill="rgb(227,160,17)" fg:x="16226" fg:w="36"/><text x="78.3309%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (36 samples, 0.17%)</title><rect x="78.0809%" y="1237" width="0.1732%" height="15" fill="rgb(244,85,34)" fg:x="16226" fg:w="36"/><text x="78.3309%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (3 samples, 0.01%)</title><rect x="78.2397%" y="1221" width="0.0144%" height="15" fill="rgb(207,70,0)" fg:x="16259" fg:w="3"/><text x="78.4897%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3 samples, 0.01%)</title><rect x="78.2397%" y="1205" width="0.0144%" height="15" fill="rgb(223,129,7)" fg:x="16259" fg:w="3"/><text x="78.4897%" y="1215.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.01%)</title><rect x="78.2397%" y="1189" width="0.0144%" height="15" fill="rgb(246,105,7)" fg:x="16259" fg:w="3"/><text x="78.4897%" y="1199.50"></text></g><g><title>&lt;revm::evm::Evm&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::code (87 samples, 0.42%)</title><rect x="77.8548%" y="1333" width="0.4187%" height="15" fill="rgb(215,154,42)" fg:x="16179" fg:w="87"/><text x="78.1048%" y="1343.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::code (87 samples, 0.42%)</title><rect x="77.8548%" y="1317" width="0.4187%" height="15" fill="rgb(220,215,30)" fg:x="16179" fg:w="87"/><text x="78.1048%" y="1327.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (84 samples, 0.40%)</title><rect x="77.8692%" y="1301" width="0.4042%" height="15" fill="rgb(228,81,51)" fg:x="16182" fg:w="84"/><text x="78.1192%" y="1311.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (82 samples, 0.39%)</title><rect x="77.8788%" y="1285" width="0.3946%" height="15" fill="rgb(247,71,54)" fg:x="16184" fg:w="82"/><text x="78.1288%" y="1295.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.02%)</title><rect x="78.2542%" y="1269" width="0.0192%" height="15" fill="rgb(234,176,34)" fg:x="16262" fg:w="4"/><text x="78.5042%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.02%)</title><rect x="78.2542%" y="1253" width="0.0192%" height="15" fill="rgb(241,103,54)" fg:x="16262" fg:w="4"/><text x="78.5042%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.02%)</title><rect x="78.2542%" y="1237" width="0.0192%" height="15" fill="rgb(228,22,34)" fg:x="16262" fg:w="4"/><text x="78.5042%" y="1247.50"></text></g><g><title>revm_interpreter::instructions::host::extcodesize (90 samples, 0.43%)</title><rect x="77.8548%" y="1349" width="0.4331%" height="15" fill="rgb(241,179,48)" fg:x="16179" fg:w="90"/><text x="78.1048%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (3 samples, 0.01%)</title><rect x="78.2734%" y="1333" width="0.0144%" height="15" fill="rgb(235,167,37)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloy_primitives::bytes_::Bytes&gt; (3 samples, 0.01%)</title><rect x="78.2734%" y="1317" width="0.0144%" height="15" fill="rgb(213,109,30)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.01%)</title><rect x="78.2734%" y="1301" width="0.0144%" height="15" fill="rgb(222,172,16)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1311.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.2734%" y="1285" width="0.0144%" height="15" fill="rgb(233,192,5)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1295.50"></text></g><g><title>bytes::bytes::shared_drop (3 samples, 0.01%)</title><rect x="78.2734%" y="1269" width="0.0144%" height="15" fill="rgb(247,189,41)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1279.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.01%)</title><rect x="78.2734%" y="1253" width="0.0144%" height="15" fill="rgb(218,134,47)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1263.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (3 samples, 0.01%)</title><rect x="78.2734%" y="1237" width="0.0144%" height="15" fill="rgb(216,29,3)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1247.50"></text></g><g><title>bytes::bytes::release_shared (3 samples, 0.01%)</title><rect x="78.2734%" y="1221" width="0.0144%" height="15" fill="rgb(246,140,12)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="78.2734%" y="1205" width="0.0144%" height="15" fill="rgb(230,136,11)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="78.2734%" y="1189" width="0.0144%" height="15" fill="rgb(247,22,47)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1199.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="78.2734%" y="1173" width="0.0144%" height="15" fill="rgb(218,84,22)" fg:x="16266" fg:w="3"/><text x="78.5234%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.04%)</title><rect x="78.3023%" y="1285" width="0.0385%" height="15" fill="rgb(216,87,39)" fg:x="16272" fg:w="8"/><text x="78.5523%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.03%)</title><rect x="78.3119%" y="1269" width="0.0289%" height="15" fill="rgb(221,178,8)" fg:x="16274" fg:w="6"/><text x="78.5619%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="78.3119%" y="1253" width="0.0289%" height="15" fill="rgb(230,42,11)" fg:x="16274" fg:w="6"/><text x="78.5619%" y="1263.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="78.3264%" y="1237" width="0.0144%" height="15" fill="rgb(237,229,4)" fg:x="16277" fg:w="3"/><text x="78.5764%" y="1247.50"></text></g><g><title>&lt;revm::evm::Evm&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::log (9 samples, 0.04%)</title><rect x="78.3023%" y="1333" width="0.0433%" height="15" fill="rgb(222,31,33)" fg:x="16272" fg:w="9"/><text x="78.5523%" y="1343.50"></text></g><g><title>revm::journaled_state::JournaledState::log (9 samples, 0.04%)</title><rect x="78.3023%" y="1317" width="0.0433%" height="15" fill="rgb(210,17,39)" fg:x="16272" fg:w="9"/><text x="78.5523%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.04%)</title><rect x="78.3023%" y="1301" width="0.0433%" height="15" fill="rgb(244,93,20)" fg:x="16272" fg:w="9"/><text x="78.5523%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="78.3504%" y="1333" width="0.0144%" height="15" fill="rgb(210,40,47)" fg:x="16282" fg:w="3"/><text x="78.6004%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="78.3504%" y="1317" width="0.0144%" height="15" fill="rgb(239,211,47)" fg:x="16282" fg:w="3"/><text x="78.6004%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="78.3504%" y="1301" width="0.0144%" height="15" fill="rgb(251,223,49)" fg:x="16282" fg:w="3"/><text x="78.6004%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="78.3504%" y="1285" width="0.0144%" height="15" fill="rgb(221,149,5)" fg:x="16282" fg:w="3"/><text x="78.6004%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::host::log (20 samples, 0.10%)</title><rect x="78.2879%" y="1349" width="0.0962%" height="15" fill="rgb(219,224,51)" fg:x="16269" fg:w="20"/><text x="78.5379%" y="1359.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.03%)</title><rect x="78.4130%" y="1301" width="0.0289%" height="15" fill="rgb(223,7,8)" fg:x="16295" fg:w="6"/><text x="78.6630%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (3 samples, 0.01%)</title><rect x="78.4900%" y="1253" width="0.0144%" height="15" fill="rgb(241,217,22)" fg:x="16311" fg:w="3"/><text x="78.7400%" y="1263.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.4900%" y="1237" width="0.0144%" height="15" fill="rgb(248,209,0)" fg:x="16311" fg:w="3"/><text x="78.7400%" y="1247.50"></text></g><g><title>heed::txn::abort_txn (3 samples, 0.01%)</title><rect x="78.4900%" y="1221" width="0.0144%" height="15" fill="rgb(217,205,4)" fg:x="16311" fg:w="3"/><text x="78.7400%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,hashbrown::map::HashMap&lt;ruint::Uint&lt;256_usize,4_usize&gt;,db::CacheVal&lt;ruint::Uint&lt;256_usize,4_usize&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="78.5044%" y="1253" width="0.0337%" height="15" fill="rgb(228,124,39)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1263.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="78.5044%" y="1237" width="0.0337%" height="15" fill="rgb(250,116,42)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1247.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (7 samples, 0.03%)</title><rect x="78.5044%" y="1221" width="0.0337%" height="15" fill="rgb(223,202,9)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.03%)</title><rect x="78.5044%" y="1205" width="0.0337%" height="15" fill="rgb(242,222,40)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.03%)</title><rect x="78.5044%" y="1189" width="0.0337%" height="15" fill="rgb(229,99,46)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1199.50"></text></g><g><title>__aarch64_swp4_rel (7 samples, 0.03%)</title><rect x="78.5044%" y="1173" width="0.0337%" height="15" fill="rgb(225,56,46)" fg:x="16314" fg:w="7"/><text x="78.7544%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="78.5573%" y="1173" width="0.0192%" height="15" fill="rgb(227,94,5)" fg:x="16325" fg:w="4"/><text x="78.8073%" y="1183.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.02%)</title><rect x="78.5573%" y="1157" width="0.0192%" height="15" fill="rgb(205,112,38)" fg:x="16325" fg:w="4"/><text x="78.8073%" y="1167.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="78.5766%" y="1109" width="0.0241%" height="15" fill="rgb(231,133,46)" fg:x="16329" fg:w="5"/><text x="78.8266%" y="1119.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="78.5766%" y="1093" width="0.0241%" height="15" fill="rgb(217,16,9)" fg:x="16329" fg:w="5"/><text x="78.8266%" y="1103.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (5 samples, 0.02%)</title><rect x="78.5766%" y="1077" width="0.0241%" height="15" fill="rgb(249,173,9)" fg:x="16329" fg:w="5"/><text x="78.8266%" y="1087.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (5 samples, 0.02%)</title><rect x="78.5766%" y="1061" width="0.0241%" height="15" fill="rgb(205,163,53)" fg:x="16329" fg:w="5"/><text x="78.8266%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (19 samples, 0.09%)</title><rect x="78.5766%" y="1173" width="0.0914%" height="15" fill="rgb(217,54,41)" fg:x="16329" fg:w="19"/><text x="78.8266%" y="1183.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.09%)</title><rect x="78.5766%" y="1157" width="0.0914%" height="15" fill="rgb(228,216,12)" fg:x="16329" fg:w="19"/><text x="78.8266%" y="1167.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (19 samples, 0.09%)</title><rect x="78.5766%" y="1141" width="0.0914%" height="15" fill="rgb(244,228,15)" fg:x="16329" fg:w="19"/><text x="78.8266%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.09%)</title><rect x="78.5766%" y="1125" width="0.0914%" height="15" fill="rgb(221,176,53)" fg:x="16329" fg:w="19"/><text x="78.8266%" y="1135.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.07%)</title><rect x="78.6006%" y="1109" width="0.0674%" height="15" fill="rgb(205,94,34)" fg:x="16334" fg:w="14"/><text x="78.8506%" y="1119.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (14 samples, 0.07%)</title><rect x="78.6006%" y="1093" width="0.0674%" height="15" fill="rgb(213,110,48)" fg:x="16334" fg:w="14"/><text x="78.8506%" y="1103.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (14 samples, 0.07%)</title><rect x="78.6006%" y="1077" width="0.0674%" height="15" fill="rgb(236,142,28)" fg:x="16334" fg:w="14"/><text x="78.8506%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (34 samples, 0.16%)</title><rect x="78.5429%" y="1253" width="0.1636%" height="15" fill="rgb(225,135,29)" fg:x="16322" fg:w="34"/><text x="78.7929%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.16%)</title><rect x="78.5429%" y="1237" width="0.1636%" height="15" fill="rgb(252,45,31)" fg:x="16322" fg:w="34"/><text x="78.7929%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.15%)</title><rect x="78.5525%" y="1221" width="0.1540%" height="15" fill="rgb(211,187,50)" fg:x="16324" fg:w="32"/><text x="78.8025%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (32 samples, 0.15%)</title><rect x="78.5525%" y="1205" width="0.1540%" height="15" fill="rgb(229,109,7)" fg:x="16324" fg:w="32"/><text x="78.8025%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (32 samples, 0.15%)</title><rect x="78.5525%" y="1189" width="0.1540%" height="15" fill="rgb(251,131,51)" fg:x="16324" fg:w="32"/><text x="78.8025%" y="1199.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (8 samples, 0.04%)</title><rect x="78.6680%" y="1173" width="0.0385%" height="15" fill="rgb(251,180,35)" fg:x="16348" fg:w="8"/><text x="78.9180%" y="1183.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (8 samples, 0.04%)</title><rect x="78.6680%" y="1157" width="0.0385%" height="15" fill="rgb(211,46,32)" fg:x="16348" fg:w="8"/><text x="78.9180%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="78.7161%" y="1253" width="0.0192%" height="15" fill="rgb(248,123,17)" fg:x="16358" fg:w="4"/><text x="78.9661%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.02%)</title><rect x="78.7161%" y="1237" width="0.0192%" height="15" fill="rgb(227,141,18)" fg:x="16358" fg:w="4"/><text x="78.9661%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="78.7161%" y="1221" width="0.0192%" height="15" fill="rgb(216,102,9)" fg:x="16358" fg:w="4"/><text x="78.9661%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="78.7161%" y="1205" width="0.0192%" height="15" fill="rgb(253,47,13)" fg:x="16358" fg:w="4"/><text x="78.9661%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="78.7161%" y="1189" width="0.0192%" height="15" fill="rgb(226,93,23)" fg:x="16358" fg:w="4"/><text x="78.9661%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="78.7450%" y="1093" width="0.0144%" height="15" fill="rgb(247,104,17)" fg:x="16364" fg:w="3"/><text x="78.9950%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.01%)</title><rect x="78.7450%" y="1077" width="0.0144%" height="15" fill="rgb(233,203,26)" fg:x="16364" fg:w="3"/><text x="78.9950%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="78.7450%" y="1061" width="0.0144%" height="15" fill="rgb(244,98,49)" fg:x="16364" fg:w="3"/><text x="78.9950%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="78.7450%" y="1125" width="0.0289%" height="15" fill="rgb(235,134,22)" fg:x="16364" fg:w="6"/><text x="78.9950%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="78.7450%" y="1109" width="0.0289%" height="15" fill="rgb(221,70,32)" fg:x="16364" fg:w="6"/><text x="78.9950%" y="1119.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (3 samples, 0.01%)</title><rect x="78.7594%" y="1093" width="0.0144%" height="15" fill="rgb(238,15,50)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="78.7594%" y="1077" width="0.0144%" height="15" fill="rgb(215,221,48)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="78.7594%" y="1061" width="0.0144%" height="15" fill="rgb(236,73,3)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.7594%" y="1045" width="0.0144%" height="15" fill="rgb(250,107,11)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="78.7594%" y="1029" width="0.0144%" height="15" fill="rgb(242,39,14)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1039.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.7594%" y="1013" width="0.0144%" height="15" fill="rgb(248,164,37)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="78.7594%" y="997" width="0.0144%" height="15" fill="rgb(217,60,12)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.7594%" y="981" width="0.0144%" height="15" fill="rgb(240,125,29)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="78.7594%" y="965" width="0.0144%" height="15" fill="rgb(208,207,28)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="78.7594%" y="949" width="0.0144%" height="15" fill="rgb(209,159,27)" fg:x="16367" fg:w="3"/><text x="79.0094%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.03%)</title><rect x="78.7450%" y="1157" width="0.0337%" height="15" fill="rgb(251,176,53)" fg:x="16364" fg:w="7"/><text x="78.9950%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.03%)</title><rect x="78.7450%" y="1141" width="0.0337%" height="15" fill="rgb(211,85,7)" fg:x="16364" fg:w="7"/><text x="78.9950%" y="1151.50"></text></g><g><title>&lt;db::UintEncodeDecode&lt;_,_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (14 samples, 0.07%)</title><rect x="78.7354%" y="1237" width="0.0674%" height="15" fill="rgb(216,64,54)" fg:x="16362" fg:w="14"/><text x="78.9854%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.06%)</title><rect x="78.7402%" y="1221" width="0.0626%" height="15" fill="rgb(217,54,24)" fg:x="16363" fg:w="13"/><text x="78.9902%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.06%)</title><rect x="78.7402%" y="1205" width="0.0626%" height="15" fill="rgb(208,206,53)" fg:x="16363" fg:w="13"/><text x="78.9902%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.06%)</title><rect x="78.7402%" y="1189" width="0.0626%" height="15" fill="rgb(251,74,39)" fg:x="16363" fg:w="13"/><text x="78.9902%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.06%)</title><rect x="78.7402%" y="1173" width="0.0626%" height="15" fill="rgb(226,47,5)" fg:x="16363" fg:w="13"/><text x="78.9902%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="78.7883%" y="1157" width="0.0144%" height="15" fill="rgb(234,111,33)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="78.7883%" y="1141" width="0.0144%" height="15" fill="rgb(251,14,10)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="78.7883%" y="1125" width="0.0144%" height="15" fill="rgb(232,43,0)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="78.7883%" y="1109" width="0.0144%" height="15" fill="rgb(222,68,43)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="78.7883%" y="1093" width="0.0144%" height="15" fill="rgb(217,24,23)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="78.7883%" y="1077" width="0.0144%" height="15" fill="rgb(229,209,14)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="78.7883%" y="1061" width="0.0144%" height="15" fill="rgb(250,149,48)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1071.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="78.7883%" y="1045" width="0.0144%" height="15" fill="rgb(210,120,37)" fg:x="16373" fg:w="3"/><text x="79.0383%" y="1055.50"></text></g><g><title>mdb_node_search (3 samples, 0.01%)</title><rect x="78.8124%" y="1205" width="0.0144%" height="15" fill="rgb(210,21,8)" fg:x="16378" fg:w="3"/><text x="79.0624%" y="1215.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (28 samples, 0.13%)</title><rect x="78.7354%" y="1253" width="0.1347%" height="15" fill="rgb(243,145,7)" fg:x="16362" fg:w="28"/><text x="78.9854%" y="1263.50"></text></g><g><title>mdb_get (14 samples, 0.07%)</title><rect x="78.8028%" y="1237" width="0.0674%" height="15" fill="rgb(238,178,32)" fg:x="16376" fg:w="14"/><text x="79.0528%" y="1247.50"></text></g><g><title>mdb_cursor_set (12 samples, 0.06%)</title><rect x="78.8124%" y="1221" width="0.0577%" height="15" fill="rgb(222,4,10)" fg:x="16378" fg:w="12"/><text x="79.0624%" y="1231.50"></text></g><g><title>mdb_page_search (9 samples, 0.04%)</title><rect x="78.8268%" y="1205" width="0.0433%" height="15" fill="rgb(239,7,37)" fg:x="16381" fg:w="9"/><text x="79.0768%" y="1215.50"></text></g><g><title>mdb_page_search_root (9 samples, 0.04%)</title><rect x="78.8268%" y="1189" width="0.0433%" height="15" fill="rgb(215,31,37)" fg:x="16381" fg:w="9"/><text x="79.0768%" y="1199.50"></text></g><g><title>[libc.so.6] (42 samples, 0.20%)</title><rect x="78.8701%" y="1205" width="0.2021%" height="15" fill="rgb(224,83,33)" fg:x="16390" fg:w="42"/><text x="79.1201%" y="1215.50"></text></g><g><title>el0t_64_sync (3 samples, 0.01%)</title><rect x="79.0578%" y="1189" width="0.0144%" height="15" fill="rgb(239,55,3)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1199.50"></text></g><g><title>el0t_64_sync_handler (3 samples, 0.01%)</title><rect x="79.0578%" y="1173" width="0.0144%" height="15" fill="rgb(247,92,11)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1183.50"></text></g><g><title>el0_da (3 samples, 0.01%)</title><rect x="79.0578%" y="1157" width="0.0144%" height="15" fill="rgb(239,200,7)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1167.50"></text></g><g><title>do_mem_abort (3 samples, 0.01%)</title><rect x="79.0578%" y="1141" width="0.0144%" height="15" fill="rgb(227,115,8)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1151.50"></text></g><g><title>do_translation_fault (3 samples, 0.01%)</title><rect x="79.0578%" y="1125" width="0.0144%" height="15" fill="rgb(215,189,27)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1135.50"></text></g><g><title>do_page_fault (3 samples, 0.01%)</title><rect x="79.0578%" y="1109" width="0.0144%" height="15" fill="rgb(251,216,39)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1119.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="79.0578%" y="1093" width="0.0144%" height="15" fill="rgb(207,29,47)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1103.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="79.0578%" y="1077" width="0.0144%" height="15" fill="rgb(210,71,34)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1087.50"></text></g><g><title>handle_pte_fault (3 samples, 0.01%)</title><rect x="79.0578%" y="1061" width="0.0144%" height="15" fill="rgb(253,217,51)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1071.50"></text></g><g><title>do_anonymous_page (3 samples, 0.01%)</title><rect x="79.0578%" y="1045" width="0.0144%" height="15" fill="rgb(222,117,46)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1055.50"></text></g><g><title>alloc_zeroed_user_highpage_movable (3 samples, 0.01%)</title><rect x="79.0578%" y="1029" width="0.0144%" height="15" fill="rgb(226,132,6)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1039.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="79.0578%" y="1013" width="0.0144%" height="15" fill="rgb(254,145,51)" fg:x="16429" fg:w="3"/><text x="79.3078%" y="1023.50"></text></g><g><title>__libc_calloc (3 samples, 0.01%)</title><rect x="79.0722%" y="1205" width="0.0144%" height="15" fill="rgb(231,199,27)" fg:x="16432" fg:w="3"/><text x="79.3222%" y="1215.50"></text></g><g><title>heed::env::Env::read_txn (48 samples, 0.23%)</title><rect x="78.8701%" y="1253" width="0.2310%" height="15" fill="rgb(245,158,14)" fg:x="16390" fg:w="48"/><text x="79.1201%" y="1263.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (48 samples, 0.23%)</title><rect x="78.8701%" y="1237" width="0.2310%" height="15" fill="rgb(240,113,14)" fg:x="16390" fg:w="48"/><text x="79.1201%" y="1247.50"></text></g><g><title>mdb_txn_begin (48 samples, 0.23%)</title><rect x="78.8701%" y="1221" width="0.2310%" height="15" fill="rgb(210,20,13)" fg:x="16390" fg:w="48"/><text x="79.1201%" y="1231.50"></text></g><g><title>mdb_txn_renew0 (3 samples, 0.01%)</title><rect x="79.0867%" y="1205" width="0.0144%" height="15" fill="rgb(241,144,13)" fg:x="16435" fg:w="3"/><text x="79.3367%" y="1215.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::storage (137 samples, 0.66%)</title><rect x="78.4803%" y="1285" width="0.6593%" height="15" fill="rgb(235,43,34)" fg:x="16309" fg:w="137"/><text x="78.7303%" y="1295.50"></text></g><g><title>db::DB::read_from_account_memory_map (136 samples, 0.65%)</title><rect x="78.4852%" y="1269" width="0.6544%" height="15" fill="rgb(208,36,20)" fg:x="16310" fg:w="136"/><text x="78.7352%" y="1279.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.04%)</title><rect x="79.1011%" y="1253" width="0.0385%" height="15" fill="rgb(239,204,10)" fg:x="16438" fg:w="8"/><text x="79.3511%" y="1263.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (6 samples, 0.03%)</title><rect x="79.1107%" y="1237" width="0.0289%" height="15" fill="rgb(217,84,43)" fg:x="16440" fg:w="6"/><text x="79.3607%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (6 samples, 0.03%)</title><rect x="79.1107%" y="1221" width="0.0289%" height="15" fill="rgb(241,170,50)" fg:x="16440" fg:w="6"/><text x="79.3607%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.03%)</title><rect x="79.1107%" y="1205" width="0.0289%" height="15" fill="rgb(226,205,29)" fg:x="16440" fg:w="6"/><text x="79.3607%" y="1215.50"></text></g><g><title>__aarch64_cas4_acq (6 samples, 0.03%)</title><rect x="79.1107%" y="1189" width="0.0289%" height="15" fill="rgb(233,113,1)" fg:x="16440" fg:w="6"/><text x="79.3607%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.11%)</title><rect x="79.1396%" y="1285" width="0.1107%" height="15" fill="rgb(253,98,13)" fg:x="16446" fg:w="23"/><text x="79.3896%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.11%)</title><rect x="79.1444%" y="1269" width="0.1059%" height="15" fill="rgb(211,115,12)" fg:x="16447" fg:w="22"/><text x="79.3944%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.11%)</title><rect x="79.1444%" y="1253" width="0.1059%" height="15" fill="rgb(208,12,16)" fg:x="16447" fg:w="22"/><text x="79.3944%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.10%)</title><rect x="79.1492%" y="1237" width="0.1011%" height="15" fill="rgb(237,193,54)" fg:x="16448" fg:w="21"/><text x="79.3992%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.10%)</title><rect x="79.1492%" y="1221" width="0.1011%" height="15" fill="rgb(243,22,42)" fg:x="16448" fg:w="21"/><text x="79.3992%" y="1231.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.10%)</title><rect x="79.1492%" y="1205" width="0.1011%" height="15" fill="rgb(233,151,36)" fg:x="16448" fg:w="21"/><text x="79.3992%" y="1215.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.10%)</title><rect x="79.1492%" y="1189" width="0.1011%" height="15" fill="rgb(237,57,45)" fg:x="16448" fg:w="21"/><text x="79.3992%" y="1199.50"></text></g><g><title>realloc (21 samples, 0.10%)</title><rect x="79.1492%" y="1173" width="0.1011%" height="15" fill="rgb(221,88,17)" fg:x="16448" fg:w="21"/><text x="79.3992%" y="1183.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="79.1588%" y="1157" width="0.0914%" height="15" fill="rgb(230,79,15)" fg:x="16450" fg:w="19"/><text x="79.4088%" y="1167.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="79.1781%" y="1141" width="0.0722%" height="15" fill="rgb(213,57,13)" fg:x="16454" fg:w="15"/><text x="79.4281%" y="1151.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="79.2358%" y="1125" width="0.0144%" height="15" fill="rgb(222,116,39)" fg:x="16466" fg:w="3"/><text x="79.4858%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="79.2503%" y="1253" width="0.0144%" height="15" fill="rgb(245,107,2)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1263.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::hash::Hash&gt;::hash (3 samples, 0.01%)</title><rect x="79.2503%" y="1237" width="0.0144%" height="15" fill="rgb(238,1,10)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1247.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::hash::Hash&gt;::hash (3 samples, 0.01%)</title><rect x="79.2503%" y="1221" width="0.0144%" height="15" fill="rgb(249,4,48)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1231.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.01%)</title><rect x="79.2503%" y="1205" width="0.0144%" height="15" fill="rgb(223,151,18)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.01%)</title><rect x="79.2503%" y="1189" width="0.0144%" height="15" fill="rgb(227,65,43)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.01%)</title><rect x="79.2503%" y="1173" width="0.0144%" height="15" fill="rgb(218,40,45)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1183.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="79.2503%" y="1157" width="0.0144%" height="15" fill="rgb(252,121,31)" fg:x="16469" fg:w="3"/><text x="79.5003%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.03%)</title><rect x="79.2840%" y="1205" width="0.0289%" height="15" fill="rgb(219,158,43)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1215.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.03%)</title><rect x="79.2840%" y="1189" width="0.0289%" height="15" fill="rgb(231,162,42)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1199.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.03%)</title><rect x="79.2840%" y="1173" width="0.0289%" height="15" fill="rgb(217,179,25)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.03%)</title><rect x="79.2840%" y="1157" width="0.0289%" height="15" fill="rgb(206,212,31)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1167.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="79.2840%" y="1141" width="0.0289%" height="15" fill="rgb(235,144,12)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1151.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="79.2840%" y="1125" width="0.0289%" height="15" fill="rgb(213,51,10)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1135.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (6 samples, 0.03%)</title><rect x="79.2840%" y="1109" width="0.0289%" height="15" fill="rgb(231,145,14)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1119.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.03%)</title><rect x="79.2840%" y="1093" width="0.0289%" height="15" fill="rgb(235,15,28)" fg:x="16476" fg:w="6"/><text x="79.5340%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (18 samples, 0.09%)</title><rect x="79.2647%" y="1253" width="0.0866%" height="15" fill="rgb(237,206,10)" fg:x="16472" fg:w="18"/><text x="79.5147%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.09%)</title><rect x="79.2647%" y="1237" width="0.0866%" height="15" fill="rgb(236,227,27)" fg:x="16472" fg:w="18"/><text x="79.5147%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (18 samples, 0.09%)</title><rect x="79.2647%" y="1221" width="0.0866%" height="15" fill="rgb(246,83,35)" fg:x="16472" fg:w="18"/><text x="79.5147%" y="1231.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (8 samples, 0.04%)</title><rect x="79.3128%" y="1205" width="0.0385%" height="15" fill="rgb(220,136,24)" fg:x="16482" fg:w="8"/><text x="79.5628%" y="1215.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (8 samples, 0.04%)</title><rect x="79.3128%" y="1189" width="0.0385%" height="15" fill="rgb(217,3,25)" fg:x="16482" fg:w="8"/><text x="79.5628%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (22 samples, 0.11%)</title><rect x="79.2503%" y="1285" width="0.1059%" height="15" fill="rgb(239,24,14)" fg:x="16469" fg:w="22"/><text x="79.5003%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (22 samples, 0.11%)</title><rect x="79.2503%" y="1269" width="0.1059%" height="15" fill="rgb(244,16,53)" fg:x="16469" fg:w="22"/><text x="79.5003%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (3 samples, 0.01%)</title><rect x="79.3802%" y="1173" width="0.0144%" height="15" fill="rgb(208,175,44)" fg:x="16496" fg:w="3"/><text x="79.6302%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (3 samples, 0.01%)</title><rect x="79.3802%" y="1157" width="0.0144%" height="15" fill="rgb(252,18,48)" fg:x="16496" fg:w="3"/><text x="79.6302%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3 samples, 0.01%)</title><rect x="79.3802%" y="1141" width="0.0144%" height="15" fill="rgb(234,199,32)" fg:x="16496" fg:w="3"/><text x="79.6302%" y="1151.50"></text></g><g><title>hashbrown::raw::neon::Group::match_empty_or_deleted (3 samples, 0.01%)</title><rect x="79.3802%" y="1125" width="0.0144%" height="15" fill="rgb(225,77,54)" fg:x="16496" fg:w="3"/><text x="79.6302%" y="1135.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcltz_s8 (3 samples, 0.01%)</title><rect x="79.3802%" y="1109" width="0.0144%" height="15" fill="rgb(225,42,25)" fg:x="16496" fg:w="3"/><text x="79.6302%" y="1119.50"></text></g><g><title>&lt;revm::evm::Evm&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::sload (215 samples, 1.03%)</title><rect x="78.4082%" y="1333" width="1.0346%" height="15" fill="rgb(242,227,46)" fg:x="16294" fg:w="215"/><text x="78.6582%" y="1343.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::sload (215 samples, 1.03%)</title><rect x="78.4082%" y="1317" width="1.0346%" height="15" fill="rgb(246,197,35)" fg:x="16294" fg:w="215"/><text x="78.6582%" y="1327.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (207 samples, 1.00%)</title><rect x="78.4467%" y="1301" width="0.9961%" height="15" fill="rgb(215,159,26)" fg:x="16302" fg:w="207"/><text x="78.6967%" y="1311.50"></text></g><g><title>hashbrown::map::VacantEntry&lt;K,V,S,A&gt;::insert (18 samples, 0.09%)</title><rect x="79.3561%" y="1285" width="0.0866%" height="15" fill="rgb(212,194,50)" fg:x="16491" fg:w="18"/><text x="79.6061%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_entry (18 samples, 0.09%)</title><rect x="79.3561%" y="1269" width="0.0866%" height="15" fill="rgb(246,132,1)" fg:x="16491" fg:w="18"/><text x="79.6061%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.09%)</title><rect x="79.3561%" y="1253" width="0.0866%" height="15" fill="rgb(217,71,7)" fg:x="16491" fg:w="18"/><text x="79.6061%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17 samples, 0.08%)</title><rect x="79.3610%" y="1237" width="0.0818%" height="15" fill="rgb(252,59,32)" fg:x="16492" fg:w="17"/><text x="79.6110%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.08%)</title><rect x="79.3658%" y="1221" width="0.0770%" height="15" fill="rgb(253,204,25)" fg:x="16493" fg:w="16"/><text x="79.6158%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (14 samples, 0.07%)</title><rect x="79.3754%" y="1205" width="0.0674%" height="15" fill="rgb(232,21,16)" fg:x="16495" fg:w="14"/><text x="79.6254%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (14 samples, 0.07%)</title><rect x="79.3754%" y="1189" width="0.0674%" height="15" fill="rgb(248,90,29)" fg:x="16495" fg:w="14"/><text x="79.6254%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (10 samples, 0.05%)</title><rect x="79.3946%" y="1173" width="0.0481%" height="15" fill="rgb(249,223,7)" fg:x="16499" fg:w="10"/><text x="79.6446%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (10 samples, 0.05%)</title><rect x="79.3946%" y="1157" width="0.0481%" height="15" fill="rgb(231,119,42)" fg:x="16499" fg:w="10"/><text x="79.6446%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (8 samples, 0.04%)</title><rect x="79.4043%" y="1141" width="0.0385%" height="15" fill="rgb(215,41,35)" fg:x="16501" fg:w="8"/><text x="79.6543%" y="1151.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.03%)</title><rect x="79.4139%" y="1125" width="0.0289%" height="15" fill="rgb(220,44,45)" fg:x="16503" fg:w="6"/><text x="79.6639%" y="1135.50"></text></g><g><title>&lt;allocator_api2::stable::alloc::global::Global as allocator_api2::stable::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="79.4139%" y="1109" width="0.0289%" height="15" fill="rgb(253,197,36)" fg:x="16503" fg:w="6"/><text x="79.6639%" y="1119.50"></text></g><g><title>allocator_api2::stable::alloc::global::Global::alloc_impl (6 samples, 0.03%)</title><rect x="79.4139%" y="1093" width="0.0289%" height="15" fill="rgb(245,225,54)" fg:x="16503" fg:w="6"/><text x="79.6639%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="79.4139%" y="1077" width="0.0289%" height="15" fill="rgb(239,94,37)" fg:x="16503" fg:w="6"/><text x="79.6639%" y="1087.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="79.4187%" y="1061" width="0.0241%" height="15" fill="rgb(242,217,10)" fg:x="16504" fg:w="5"/><text x="79.6687%" y="1071.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (3 samples, 0.01%)</title><rect x="79.4428%" y="1333" width="0.0144%" height="15" fill="rgb(250,193,7)" fg:x="16509" fg:w="3"/><text x="79.6928%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::host::sload (225 samples, 1.08%)</title><rect x="78.3841%" y="1349" width="1.0827%" height="15" fill="rgb(230,104,19)" fg:x="16289" fg:w="225"/><text x="78.6341%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.03%)</title><rect x="79.4957%" y="1285" width="0.0289%" height="15" fill="rgb(230,181,4)" fg:x="16520" fg:w="6"/><text x="79.7457%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.03%)</title><rect x="79.4957%" y="1269" width="0.0289%" height="15" fill="rgb(216,219,49)" fg:x="16520" fg:w="6"/><text x="79.7457%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="79.5053%" y="1253" width="0.0192%" height="15" fill="rgb(254,144,0)" fg:x="16522" fg:w="4"/><text x="79.7553%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="79.5053%" y="1237" width="0.0192%" height="15" fill="rgb(205,209,38)" fg:x="16522" fg:w="4"/><text x="79.7553%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="79.5053%" y="1221" width="0.0192%" height="15" fill="rgb(240,21,42)" fg:x="16522" fg:w="4"/><text x="79.7553%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.01%)</title><rect x="79.5101%" y="1205" width="0.0144%" height="15" fill="rgb(241,132,3)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1215.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.01%)</title><rect x="79.5101%" y="1189" width="0.0144%" height="15" fill="rgb(225,14,2)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1199.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.01%)</title><rect x="79.5101%" y="1173" width="0.0144%" height="15" fill="rgb(210,141,35)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="79.5101%" y="1157" width="0.0144%" height="15" fill="rgb(251,14,44)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1167.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="79.5101%" y="1141" width="0.0144%" height="15" fill="rgb(247,48,18)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1151.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="79.5101%" y="1125" width="0.0144%" height="15" fill="rgb(225,0,40)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1135.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.01%)</title><rect x="79.5101%" y="1109" width="0.0144%" height="15" fill="rgb(221,31,33)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1119.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.01%)</title><rect x="79.5101%" y="1093" width="0.0144%" height="15" fill="rgb(237,42,40)" fg:x="16523" fg:w="3"/><text x="79.7601%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (5 samples, 0.02%)</title><rect x="79.5342%" y="1269" width="0.0241%" height="15" fill="rgb(233,51,29)" fg:x="16528" fg:w="5"/><text x="79.7842%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="79.5342%" y="1253" width="0.0241%" height="15" fill="rgb(226,58,20)" fg:x="16528" fg:w="5"/><text x="79.7842%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="79.5342%" y="1237" width="0.0241%" height="15" fill="rgb(208,98,7)" fg:x="16528" fg:w="5"/><text x="79.7842%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.01%)</title><rect x="79.5438%" y="1221" width="0.0144%" height="15" fill="rgb(228,143,44)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1231.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.01%)</title><rect x="79.5438%" y="1205" width="0.0144%" height="15" fill="rgb(246,55,38)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1215.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.01%)</title><rect x="79.5438%" y="1189" width="0.0144%" height="15" fill="rgb(247,87,16)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="79.5438%" y="1173" width="0.0144%" height="15" fill="rgb(234,129,42)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1183.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="79.5438%" y="1157" width="0.0144%" height="15" fill="rgb(220,82,16)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1167.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.01%)</title><rect x="79.5438%" y="1141" width="0.0144%" height="15" fill="rgb(211,88,4)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1151.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.01%)</title><rect x="79.5438%" y="1125" width="0.0144%" height="15" fill="rgb(248,151,21)" fg:x="16530" fg:w="3"/><text x="79.7938%" y="1135.50"></text></g><g><title>&lt;revm::evm::Evm&lt;EXT,DB&gt; as revm_interpreter::host::Host&gt;::sstore (22 samples, 0.11%)</title><rect x="79.4764%" y="1333" width="0.1059%" height="15" fill="rgb(238,163,6)" fg:x="16516" fg:w="22"/><text x="79.7264%" y="1343.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::sstore (22 samples, 0.11%)</title><rect x="79.4764%" y="1317" width="0.1059%" height="15" fill="rgb(209,183,11)" fg:x="16516" fg:w="22"/><text x="79.7264%" y="1327.50"></text></g><g><title>revm::journaled_state::JournaledState::sstore (20 samples, 0.10%)</title><rect x="79.4861%" y="1301" width="0.0962%" height="15" fill="rgb(219,37,20)" fg:x="16518" fg:w="20"/><text x="79.7361%" y="1311.50"></text></g><g><title>revm::journaled_state::JournaledState::sload (12 samples, 0.06%)</title><rect x="79.5246%" y="1285" width="0.0577%" height="15" fill="rgb(210,158,4)" fg:x="16526" fg:w="12"/><text x="79.7746%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.02%)</title><rect x="79.5583%" y="1269" width="0.0241%" height="15" fill="rgb(221,167,53)" fg:x="16533" fg:w="5"/><text x="79.8083%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.02%)</title><rect x="79.5583%" y="1253" width="0.0241%" height="15" fill="rgb(237,151,45)" fg:x="16533" fg:w="5"/><text x="79.8083%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="79.5631%" y="1237" width="0.0192%" height="15" fill="rgb(231,39,3)" fg:x="16534" fg:w="4"/><text x="79.8131%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="79.5631%" y="1221" width="0.0192%" height="15" fill="rgb(212,167,28)" fg:x="16534" fg:w="4"/><text x="79.8131%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="79.5631%" y="1205" width="0.0192%" height="15" fill="rgb(232,178,8)" fg:x="16534" fg:w="4"/><text x="79.8131%" y="1215.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="79.5679%" y="1189" width="0.0144%" height="15" fill="rgb(225,151,20)" fg:x="16535" fg:w="3"/><text x="79.8179%" y="1199.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="79.5679%" y="1173" width="0.0144%" height="15" fill="rgb(238,3,37)" fg:x="16535" fg:w="3"/><text x="79.8179%" y="1183.50"></text></g><g><title>revm_interpreter::gas::calc::sstore_cost (3 samples, 0.01%)</title><rect x="79.5823%" y="1333" width="0.0144%" height="15" fill="rgb(251,147,42)" fg:x="16538" fg:w="3"/><text x="79.8323%" y="1343.50"></text></g><g><title>revm_interpreter::gas::calc::istanbul_sstore_cost (3 samples, 0.01%)</title><rect x="79.5823%" y="1317" width="0.0144%" height="15" fill="rgb(208,173,10)" fg:x="16538" fg:w="3"/><text x="79.8323%" y="1327.50"></text></g><g><title>&lt;ruint::Uint&lt;_,_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="79.5823%" y="1301" width="0.0144%" height="15" fill="rgb(246,225,4)" fg:x="16538" fg:w="3"/><text x="79.8323%" y="1311.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.01%)</title><rect x="79.5823%" y="1285" width="0.0144%" height="15" fill="rgb(248,102,6)" fg:x="16538" fg:w="3"/><text x="79.8323%" y="1295.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.01%)</title><rect x="79.5823%" y="1269" width="0.0144%" height="15" fill="rgb(232,6,21)" fg:x="16538" fg:w="3"/><text x="79.8323%" y="1279.50"></text></g><g><title>revm_interpreter::instructions::host::sstore (31 samples, 0.15%)</title><rect x="79.4668%" y="1349" width="0.1492%" height="15" fill="rgb(221,179,22)" fg:x="16514" fg:w="31"/><text x="79.7168%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::shared_memory::SharedMemory::get_u256 (3 samples, 0.01%)</title><rect x="79.6256%" y="1333" width="0.0144%" height="15" fill="rgb(252,50,20)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1343.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.01%)</title><rect x="79.6256%" y="1317" width="0.0144%" height="15" fill="rgb(222,56,38)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1327.50"></text></g><g><title>alloy_primitives::bits::fixed::&lt;impl core::convert::From&lt;alloy_primitives::bits::fixed::FixedBytes&lt;32_usize&gt;&gt; for ruint::Uint&lt;256_usize,4_usize&gt;&gt;::from (3 samples, 0.01%)</title><rect x="79.6256%" y="1301" width="0.0144%" height="15" fill="rgb(206,193,29)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1311.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from_be_bytes (3 samples, 0.01%)</title><rect x="79.6256%" y="1285" width="0.0144%" height="15" fill="rgb(239,192,45)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1295.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from_be_slice (3 samples, 0.01%)</title><rect x="79.6256%" y="1269" width="0.0144%" height="15" fill="rgb(254,18,36)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1279.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::try_from_be_slice (3 samples, 0.01%)</title><rect x="79.6256%" y="1253" width="0.0144%" height="15" fill="rgb(221,127,11)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (3 samples, 0.01%)</title><rect x="79.6256%" y="1237" width="0.0144%" height="15" fill="rgb(234,146,35)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1247.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (3 samples, 0.01%)</title><rect x="79.6256%" y="1221" width="0.0144%" height="15" fill="rgb(254,201,37)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1231.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (3 samples, 0.01%)</title><rect x="79.6256%" y="1205" width="0.0144%" height="15" fill="rgb(211,202,23)" fg:x="16547" fg:w="3"/><text x="79.8756%" y="1215.50"></text></g><g><title>revm_interpreter::instructions::memory::mload (8 samples, 0.04%)</title><rect x="79.6160%" y="1349" width="0.0385%" height="15" fill="rgb(237,91,2)" fg:x="16545" fg:w="8"/><text x="79.8660%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::push (3 samples, 0.01%)</title><rect x="79.6401%" y="1333" width="0.0144%" height="15" fill="rgb(226,228,36)" fg:x="16550" fg:w="3"/><text x="79.8901%" y="1343.50"></text></g><g><title>revm_interpreter::gas::Gas::record_memory (7 samples, 0.03%)</title><rect x="79.6834%" y="1333" width="0.0337%" height="15" fill="rgb(213,63,50)" fg:x="16559" fg:w="7"/><text x="79.9334%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (5 samples, 0.02%)</title><rect x="79.6930%" y="1317" width="0.0241%" height="15" fill="rgb(235,194,19)" fg:x="16561" fg:w="5"/><text x="79.9430%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::memory::mstore (19 samples, 0.09%)</title><rect x="79.6545%" y="1349" width="0.0914%" height="15" fill="rgb(207,204,18)" fg:x="16553" fg:w="19"/><text x="79.9045%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop2_unsafe (3 samples, 0.01%)</title><rect x="79.7315%" y="1333" width="0.0144%" height="15" fill="rgb(248,8,7)" fg:x="16569" fg:w="3"/><text x="79.9815%" y="1343.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::pop_unsafe (3 samples, 0.01%)</title><rect x="79.7315%" y="1317" width="0.0144%" height="15" fill="rgb(223,145,47)" fg:x="16569" fg:w="3"/><text x="79.9815%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.01%)</title><rect x="79.7315%" y="1301" width="0.0144%" height="15" fill="rgb(228,84,11)" fg:x="16569" fg:w="3"/><text x="79.9815%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.01%)</title><rect x="79.7315%" y="1285" width="0.0144%" height="15" fill="rgb(218,76,45)" fg:x="16569" fg:w="3"/><text x="79.9815%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="79.7315%" y="1269" width="0.0144%" height="15" fill="rgb(223,80,15)" fg:x="16569" fg:w="3"/><text x="79.9815%" y="1279.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (37 samples, 0.18%)</title><rect x="79.7459%" y="1333" width="0.1780%" height="15" fill="rgb(219,218,33)" fg:x="16572" fg:w="37"/><text x="79.9959%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (19 samples, 0.09%)</title><rect x="79.8325%" y="1317" width="0.0914%" height="15" fill="rgb(208,51,11)" fg:x="16590" fg:w="19"/><text x="80.0825%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.02%)</title><rect x="79.9528%" y="1317" width="0.0192%" height="15" fill="rgb(229,165,39)" fg:x="16615" fg:w="4"/><text x="80.2028%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.02%)</title><rect x="79.9528%" y="1301" width="0.0192%" height="15" fill="rgb(241,100,24)" fg:x="16615" fg:w="4"/><text x="80.2028%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.08%)</title><rect x="79.9769%" y="1317" width="0.0818%" height="15" fill="rgb(228,14,23)" fg:x="16620" fg:w="17"/><text x="80.2269%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::stack::dup (68 samples, 0.33%)</title><rect x="79.7459%" y="1349" width="0.3272%" height="15" fill="rgb(247,116,52)" fg:x="16572" fg:w="68"/><text x="79.9959%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::dup (31 samples, 0.15%)</title><rect x="79.9240%" y="1333" width="0.1492%" height="15" fill="rgb(216,149,33)" fg:x="16609" fg:w="31"/><text x="80.1740%" y="1343.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.01%)</title><rect x="80.0587%" y="1317" width="0.0144%" height="15" fill="rgb(238,142,29)" fg:x="16637" fg:w="3"/><text x="80.3087%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::stack::pop (16 samples, 0.08%)</title><rect x="80.0731%" y="1349" width="0.0770%" height="15" fill="rgb(224,83,40)" fg:x="16640" fg:w="16"/><text x="80.3231%" y="1359.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (16 samples, 0.08%)</title><rect x="80.0731%" y="1333" width="0.0770%" height="15" fill="rgb(234,165,11)" fg:x="16640" fg:w="16"/><text x="80.3231%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.01%)</title><rect x="80.1838%" y="1333" width="0.0144%" height="15" fill="rgb(215,96,23)" fg:x="16663" fg:w="3"/><text x="80.4338%" y="1343.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (30 samples, 0.14%)</title><rect x="80.1983%" y="1333" width="0.1444%" height="15" fill="rgb(233,179,26)" fg:x="16666" fg:w="30"/><text x="80.4483%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (19 samples, 0.09%)</title><rect x="80.2512%" y="1317" width="0.0914%" height="15" fill="rgb(225,129,33)" fg:x="16677" fg:w="19"/><text x="80.5012%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.03%)</title><rect x="80.3859%" y="1317" width="0.0337%" height="15" fill="rgb(237,49,13)" fg:x="16705" fg:w="7"/><text x="80.6359%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::stack::push (63 samples, 0.30%)</title><rect x="80.1501%" y="1349" width="0.3032%" height="15" fill="rgb(211,3,31)" fg:x="16656" fg:w="63"/><text x="80.4001%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::push_slice (23 samples, 0.11%)</title><rect x="80.3426%" y="1333" width="0.1107%" height="15" fill="rgb(216,152,19)" fg:x="16696" fg:w="23"/><text x="80.5926%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.03%)</title><rect x="80.4244%" y="1317" width="0.0289%" height="15" fill="rgb(251,121,35)" fg:x="16713" fg:w="6"/><text x="80.6744%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="80.4244%" y="1301" width="0.0289%" height="15" fill="rgb(210,217,47)" fg:x="16713" fg:w="6"/><text x="80.6744%" y="1311.50"></text></g><g><title>revm_interpreter::gas::Gas::record_cost (17 samples, 0.08%)</title><rect x="80.4629%" y="1333" width="0.0818%" height="15" fill="rgb(244,116,22)" fg:x="16721" fg:w="17"/><text x="80.7129%" y="1343.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (8 samples, 0.04%)</title><rect x="80.5062%" y="1317" width="0.0385%" height="15" fill="rgb(228,17,21)" fg:x="16730" fg:w="8"/><text x="80.7562%" y="1327.50"></text></g><g><title>core::intrinsics::copy (12 samples, 0.06%)</title><rect x="80.5736%" y="1285" width="0.0577%" height="15" fill="rgb(240,149,34)" fg:x="16744" fg:w="12"/><text x="80.8236%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::stack::swap (45 samples, 0.22%)</title><rect x="80.4533%" y="1349" width="0.2165%" height="15" fill="rgb(208,125,47)" fg:x="16719" fg:w="45"/><text x="80.7033%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::swap (26 samples, 0.13%)</title><rect x="80.5447%" y="1333" width="0.1251%" height="15" fill="rgb(249,186,39)" fg:x="16738" fg:w="26"/><text x="80.7947%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (22 samples, 0.11%)</title><rect x="80.5640%" y="1317" width="0.1059%" height="15" fill="rgb(240,220,33)" fg:x="16742" fg:w="22"/><text x="80.8140%" y="1327.50"></text></g><g><title>core::ptr::swap (20 samples, 0.10%)</title><rect x="80.5736%" y="1301" width="0.0962%" height="15" fill="rgb(243,110,23)" fg:x="16744" fg:w="20"/><text x="80.8236%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.04%)</title><rect x="80.6313%" y="1285" width="0.0385%" height="15" fill="rgb(219,163,46)" fg:x="16756" fg:w="8"/><text x="80.8813%" y="1295.50"></text></g><g><title>revm_interpreter::instructions::system::calldatacopy (6 samples, 0.03%)</title><rect x="80.6698%" y="1349" width="0.0289%" height="15" fill="rgb(216,126,30)" fg:x="16764" fg:w="6"/><text x="80.9198%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::shared_memory::SharedMemory::set_data (3 samples, 0.01%)</title><rect x="80.6843%" y="1333" width="0.0144%" height="15" fill="rgb(208,139,11)" fg:x="16767" fg:w="3"/><text x="80.9343%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.02%)</title><rect x="80.7083%" y="1333" width="0.0192%" height="15" fill="rgb(213,118,36)" fg:x="16772" fg:w="4"/><text x="80.9583%" y="1343.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="80.7083%" y="1317" width="0.0192%" height="15" fill="rgb(226,43,17)" fg:x="16772" fg:w="4"/><text x="80.9583%" y="1327.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="80.7083%" y="1301" width="0.0192%" height="15" fill="rgb(254,217,4)" fg:x="16772" fg:w="4"/><text x="80.9583%" y="1311.50"></text></g><g><title>revm_interpreter::instructions::system::calldataload (14 samples, 0.07%)</title><rect x="80.6987%" y="1349" width="0.0674%" height="15" fill="rgb(210,134,47)" fg:x="16770" fg:w="14"/><text x="80.9487%" y="1359.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.02%)</title><rect x="80.7709%" y="1317" width="0.0241%" height="15" fill="rgb(237,24,49)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1327.50"></text></g><g><title>alloy_primitives::bits::fixed::&lt;impl core::convert::From&lt;alloy_primitives::bits::fixed::FixedBytes&lt;32_usize&gt;&gt; for ruint::Uint&lt;256_usize,4_usize&gt;&gt;::from (5 samples, 0.02%)</title><rect x="80.7709%" y="1301" width="0.0241%" height="15" fill="rgb(251,39,46)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1311.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from_be_bytes (5 samples, 0.02%)</title><rect x="80.7709%" y="1285" width="0.0241%" height="15" fill="rgb(251,220,3)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1295.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::from_be_slice (5 samples, 0.02%)</title><rect x="80.7709%" y="1269" width="0.0241%" height="15" fill="rgb(228,105,12)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1279.50"></text></g><g><title>ruint::bytes::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::try_from_be_slice (5 samples, 0.02%)</title><rect x="80.7709%" y="1253" width="0.0241%" height="15" fill="rgb(215,196,1)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (5 samples, 0.02%)</title><rect x="80.7709%" y="1237" width="0.0241%" height="15" fill="rgb(214,33,39)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1247.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (5 samples, 0.02%)</title><rect x="80.7709%" y="1221" width="0.0241%" height="15" fill="rgb(220,19,52)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1231.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (5 samples, 0.02%)</title><rect x="80.7709%" y="1205" width="0.0241%" height="15" fill="rgb(221,78,38)" fg:x="16785" fg:w="5"/><text x="81.0209%" y="1215.50"></text></g><g><title>revm_interpreter::instructions::system::caller (7 samples, 0.03%)</title><rect x="80.7661%" y="1349" width="0.0337%" height="15" fill="rgb(253,30,16)" fg:x="16784" fg:w="7"/><text x="81.0161%" y="1359.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::push_b256 (6 samples, 0.03%)</title><rect x="80.7709%" y="1333" width="0.0289%" height="15" fill="rgb(242,65,0)" fg:x="16785" fg:w="6"/><text x="81.0209%" y="1343.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (129 samples, 0.62%)</title><rect x="80.8431%" y="1301" width="0.6208%" height="15" fill="rgb(235,201,12)" fg:x="16800" fg:w="129"/><text x="81.0931%" y="1311.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (129 samples, 0.62%)</title><rect x="80.8431%" y="1285" width="0.6208%" height="15" fill="rgb(233,161,9)" fg:x="16800" fg:w="129"/><text x="81.0931%" y="1295.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (129 samples, 0.62%)</title><rect x="80.8431%" y="1269" width="0.6208%" height="15" fill="rgb(241,207,41)" fg:x="16800" fg:w="129"/><text x="81.0931%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (126 samples, 0.61%)</title><rect x="80.8575%" y="1253" width="0.6063%" height="15" fill="rgb(212,69,46)" fg:x="16803" fg:w="126"/><text x="81.1075%" y="1263.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (126 samples, 0.61%)</title><rect x="80.8575%" y="1237" width="0.6063%" height="15" fill="rgb(239,69,45)" fg:x="16803" fg:w="126"/><text x="81.1075%" y="1247.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (125 samples, 0.60%)</title><rect x="80.8623%" y="1221" width="0.6015%" height="15" fill="rgb(242,117,48)" fg:x="16804" fg:w="125"/><text x="81.1123%" y="1231.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (125 samples, 0.60%)</title><rect x="80.8623%" y="1205" width="0.6015%" height="15" fill="rgb(228,41,36)" fg:x="16804" fg:w="125"/><text x="81.1123%" y="1215.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (125 samples, 0.60%)</title><rect x="80.8623%" y="1189" width="0.6015%" height="15" fill="rgb(212,3,32)" fg:x="16804" fg:w="125"/><text x="81.1123%" y="1199.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (125 samples, 0.60%)</title><rect x="80.8623%" y="1173" width="0.6015%" height="15" fill="rgb(233,41,49)" fg:x="16804" fg:w="125"/><text x="81.1123%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.06%)</title><rect x="81.4061%" y="1157" width="0.0577%" height="15" fill="rgb(252,170,49)" fg:x="16917" fg:w="12"/><text x="81.6561%" y="1167.50"></text></g><g><title>alloy_primitives::utils::Keccak256::new (3 samples, 0.01%)</title><rect x="81.4638%" y="1301" width="0.0144%" height="15" fill="rgb(229,53,26)" fg:x="16929" fg:w="3"/><text x="81.7138%" y="1311.50"></text></g><g><title>tiny_keccak::keccak::Keccak::v256 (3 samples, 0.01%)</title><rect x="81.4638%" y="1285" width="0.0144%" height="15" fill="rgb(217,157,12)" fg:x="16929" fg:w="3"/><text x="81.7138%" y="1295.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::run (1,335 samples, 6.42%)</title><rect x="75.0782%" y="1397" width="6.4241%" height="15" fill="rgb(227,17,9)" fg:x="15602" fg:w="1335"/><text x="75.3282%" y="1407.50">revm_int..</text></g><g><title>revm_interpreter::interpreter::Interpreter::step (1,322 samples, 6.36%)</title><rect x="75.1408%" y="1381" width="6.3616%" height="15" fill="rgb(218,84,12)" fg:x="15615" fg:w="1322"/><text x="75.3908%" y="1391.50">revm_int..</text></g><g><title>core::ops::function::Fn::call (1,178 samples, 5.67%)</title><rect x="75.8337%" y="1365" width="5.6686%" height="15" fill="rgb(212,79,24)" fg:x="15759" fg:w="1178"/><text x="76.0837%" y="1375.50">core::o..</text></g><g><title>revm_interpreter::instructions::system::keccak256 (143 samples, 0.69%)</title><rect x="80.8142%" y="1349" width="0.6881%" height="15" fill="rgb(217,222,37)" fg:x="16794" fg:w="143"/><text x="81.0642%" y="1359.50"></text></g><g><title>alloy_primitives::utils::keccak256 (143 samples, 0.69%)</title><rect x="80.8142%" y="1333" width="0.6881%" height="15" fill="rgb(246,208,8)" fg:x="16794" fg:w="143"/><text x="81.0642%" y="1343.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (142 samples, 0.68%)</title><rect x="80.8190%" y="1317" width="0.6833%" height="15" fill="rgb(244,133,10)" fg:x="16795" fg:w="142"/><text x="81.0690%" y="1327.50"></text></g><g><title>alloy_primitives::utils::Keccak256::update (5 samples, 0.02%)</title><rect x="81.4783%" y="1301" width="0.0241%" height="15" fill="rgb(209,219,41)" fg:x="16932" fg:w="5"/><text x="81.7283%" y="1311.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (5 samples, 0.02%)</title><rect x="81.4783%" y="1285" width="0.0241%" height="15" fill="rgb(253,175,45)" fg:x="16932" fg:w="5"/><text x="81.7283%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.02%)</title><rect x="81.4831%" y="1269" width="0.0192%" height="15" fill="rgb(235,100,37)" fg:x="16933" fg:w="4"/><text x="81.7331%" y="1279.50"></text></g><g><title>revm_interpreter::interpreter::shared_memory::SharedMemory::new (7 samples, 0.03%)</title><rect x="81.5071%" y="1397" width="0.0337%" height="15" fill="rgb(225,87,19)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1407.50"></text></g><g><title>revm_interpreter::interpreter::shared_memory::SharedMemory::with_capacity (7 samples, 0.03%)</title><rect x="81.5071%" y="1381" width="0.0337%" height="15" fill="rgb(217,152,17)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.03%)</title><rect x="81.5071%" y="1365" width="0.0337%" height="15" fill="rgb(235,72,13)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="81.5071%" y="1349" width="0.0337%" height="15" fill="rgb(233,140,18)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="81.5071%" y="1333" width="0.0337%" height="15" fill="rgb(207,212,28)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.03%)</title><rect x="81.5071%" y="1317" width="0.0337%" height="15" fill="rgb(220,130,25)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="81.5071%" y="1301" width="0.0337%" height="15" fill="rgb(205,55,34)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="81.5071%" y="1285" width="0.0337%" height="15" fill="rgb(237,54,35)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="81.5071%" y="1269" width="0.0337%" height="15" fill="rgb(208,67,23)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1279.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="81.5071%" y="1253" width="0.0337%" height="15" fill="rgb(206,207,50)" fg:x="16938" fg:w="7"/><text x="81.7571%" y="1263.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="81.5120%" y="1237" width="0.0289%" height="15" fill="rgb(213,211,42)" fg:x="16939" fg:w="6"/><text x="81.7620%" y="1247.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::run_the_loop (1,970 samples, 9.48%)</title><rect x="72.0658%" y="1413" width="9.4798%" height="15" fill="rgb(252,197,50)" fg:x="14976" fg:w="1970"/><text x="72.3158%" y="1423.50">revm::evm::Evm..</text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::set_instruction_table (17 samples, 0.08%)</title><rect x="81.5456%" y="1413" width="0.0818%" height="15" fill="rgb(251,211,41)" fg:x="16946" fg:w="17"/><text x="81.7956%" y="1423.50"></text></g><g><title>[libc.so.6] (17 samples, 0.08%)</title><rect x="81.5456%" y="1397" width="0.0818%" height="15" fill="rgb(229,211,5)" fg:x="16946" fg:w="17"/><text x="81.7956%" y="1407.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::start_the_loop (2,002 samples, 9.63%)</title><rect x="71.9985%" y="1429" width="9.6338%" height="15" fill="rgb(239,36,31)" fg:x="14962" fg:w="2002"/><text x="72.2485%" y="1439.50">revm::evm::Evm..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="81.6563%" y="1365" width="0.0144%" height="15" fill="rgb(248,67,31)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1375.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="81.6563%" y="1349" width="0.0144%" height="15" fill="rgb(249,55,44)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="81.6563%" y="1333" width="0.0144%" height="15" fill="rgb(216,82,12)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="81.6563%" y="1317" width="0.0144%" height="15" fill="rgb(242,174,1)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="81.6563%" y="1301" width="0.0144%" height="15" fill="rgb(208,120,29)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1311.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="81.6563%" y="1285" width="0.0144%" height="15" fill="rgb(221,105,43)" fg:x="16969" fg:w="3"/><text x="81.9063%" y="1295.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::load_account (4 samples, 0.02%)</title><rect x="81.6708%" y="1365" width="0.0192%" height="15" fill="rgb(234,124,22)" fg:x="16972" fg:w="4"/><text x="81.9208%" y="1375.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account_exist (3 samples, 0.01%)</title><rect x="81.6756%" y="1349" width="0.0144%" height="15" fill="rgb(212,23,30)" fg:x="16973" fg:w="3"/><text x="81.9256%" y="1359.50"></text></g><g><title>revm::frame::FrameOrResult::new_call_frame (4 samples, 0.02%)</title><rect x="81.6900%" y="1365" width="0.0192%" height="15" fill="rgb(219,122,53)" fg:x="16976" fg:w="4"/><text x="81.9400%" y="1375.50"></text></g><g><title>revm::frame::Frame::new_call (4 samples, 0.02%)</title><rect x="81.6900%" y="1349" width="0.0192%" height="15" fill="rgb(248,84,24)" fg:x="16976" fg:w="4"/><text x="81.9400%" y="1359.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="81.6900%" y="1333" width="0.0192%" height="15" fill="rgb(245,115,18)" fg:x="16976" fg:w="4"/><text x="81.9400%" y="1343.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="81.6948%" y="1317" width="0.0144%" height="15" fill="rgb(227,176,51)" fg:x="16977" fg:w="3"/><text x="81.9448%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="81.6948%" y="1301" width="0.0144%" height="15" fill="rgb(229,63,42)" fg:x="16977" fg:w="3"/><text x="81.9448%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="81.6948%" y="1285" width="0.0144%" height="15" fill="rgb(247,202,24)" fg:x="16977" fg:w="3"/><text x="81.9448%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="81.6948%" y="1269" width="0.0144%" height="15" fill="rgb(244,173,20)" fg:x="16977" fg:w="3"/><text x="81.9448%" y="1279.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="81.6948%" y="1253" width="0.0144%" height="15" fill="rgb(242,81,47)" fg:x="16977" fg:w="3"/><text x="81.9448%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (3 samples, 0.01%)</title><rect x="81.7141%" y="1301" width="0.0144%" height="15" fill="rgb(231,185,54)" fg:x="16981" fg:w="3"/><text x="81.9641%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.06%)</title><rect x="81.7285%" y="1301" width="0.0577%" height="15" fill="rgb(243,55,32)" fg:x="16984" fg:w="12"/><text x="81.9785%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.06%)</title><rect x="81.7285%" y="1285" width="0.0577%" height="15" fill="rgb(208,167,19)" fg:x="16984" fg:w="12"/><text x="81.9785%" y="1295.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.06%)</title><rect x="81.7285%" y="1269" width="0.0577%" height="15" fill="rgb(231,72,35)" fg:x="16984" fg:w="12"/><text x="81.9785%" y="1279.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.06%)</title><rect x="81.7285%" y="1253" width="0.0577%" height="15" fill="rgb(250,173,51)" fg:x="16984" fg:w="12"/><text x="81.9785%" y="1263.50"></text></g><g><title>realloc (10 samples, 0.05%)</title><rect x="81.7381%" y="1237" width="0.0481%" height="15" fill="rgb(209,5,22)" fg:x="16986" fg:w="10"/><text x="81.9881%" y="1247.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="81.7574%" y="1221" width="0.0289%" height="15" fill="rgb(250,174,19)" fg:x="16990" fg:w="6"/><text x="82.0074%" y="1231.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="81.7574%" y="1205" width="0.0289%" height="15" fill="rgb(217,3,49)" fg:x="16990" fg:w="6"/><text x="82.0074%" y="1215.50"></text></g><g><title>revm::journaled_state::JournaledState::checkpoint (17 samples, 0.08%)</title><rect x="81.7093%" y="1365" width="0.0818%" height="15" fill="rgb(218,225,5)" fg:x="16980" fg:w="17"/><text x="81.9593%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.08%)</title><rect x="81.7141%" y="1349" width="0.0770%" height="15" fill="rgb(236,89,11)" fg:x="16981" fg:w="16"/><text x="81.9641%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.08%)</title><rect x="81.7141%" y="1333" width="0.0770%" height="15" fill="rgb(206,33,28)" fg:x="16981" fg:w="16"/><text x="81.9641%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.08%)</title><rect x="81.7141%" y="1317" width="0.0770%" height="15" fill="rgb(241,56,42)" fg:x="16981" fg:w="16"/><text x="81.9641%" y="1327.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="81.8151%" y="1333" width="0.0144%" height="15" fill="rgb(222,44,11)" fg:x="17002" fg:w="3"/><text x="82.0651%" y="1343.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::default::Default&gt;::default (7 samples, 0.03%)</title><rect x="81.8584%" y="1269" width="0.0337%" height="15" fill="rgb(234,111,20)" fg:x="17011" fg:w="7"/><text x="82.1084%" y="1279.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (7 samples, 0.03%)</title><rect x="81.8584%" y="1253" width="0.0337%" height="15" fill="rgb(237,77,6)" fg:x="17011" fg:w="7"/><text x="82.1084%" y="1263.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (5 samples, 0.02%)</title><rect x="81.8681%" y="1237" width="0.0241%" height="15" fill="rgb(235,111,23)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1247.50"></text></g><g><title>tap::pipe::Pipe::pipe (5 samples, 0.02%)</title><rect x="81.8681%" y="1221" width="0.0241%" height="15" fill="rgb(251,135,29)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="81.8681%" y="1205" width="0.0241%" height="15" fill="rgb(217,57,1)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="81.8681%" y="1189" width="0.0241%" height="15" fill="rgb(249,119,31)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="81.8681%" y="1173" width="0.0241%" height="15" fill="rgb(233,164,33)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="81.8681%" y="1157" width="0.0241%" height="15" fill="rgb(250,217,43)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="81.8681%" y="1141" width="0.0241%" height="15" fill="rgb(232,154,50)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="81.8681%" y="1125" width="0.0241%" height="15" fill="rgb(227,190,8)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="81.8681%" y="1109" width="0.0241%" height="15" fill="rgb(209,217,32)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="81.8681%" y="1093" width="0.0241%" height="15" fill="rgb(243,203,50)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1103.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="81.8681%" y="1077" width="0.0241%" height="15" fill="rgb(232,152,27)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1087.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="81.8681%" y="1061" width="0.0241%" height="15" fill="rgb(240,34,29)" fg:x="17013" fg:w="5"/><text x="82.1181%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (12 samples, 0.06%)</title><rect x="81.8536%" y="1301" width="0.0577%" height="15" fill="rgb(215,185,52)" fg:x="17010" fg:w="12"/><text x="82.1036%" y="1311.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash::{{closure}} (12 samples, 0.06%)</title><rect x="81.8536%" y="1285" width="0.0577%" height="15" fill="rgb(240,89,49)" fg:x="17010" fg:w="12"/><text x="82.1036%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (4 samples, 0.02%)</title><rect x="81.8921%" y="1269" width="0.0192%" height="15" fill="rgb(225,12,52)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (4 samples, 0.02%)</title><rect x="81.8921%" y="1253" width="0.0192%" height="15" fill="rgb(239,128,45)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (4 samples, 0.02%)</title><rect x="81.8921%" y="1237" width="0.0192%" height="15" fill="rgb(211,78,47)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (4 samples, 0.02%)</title><rect x="81.8921%" y="1221" width="0.0192%" height="15" fill="rgb(232,31,21)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="81.8921%" y="1205" width="0.0192%" height="15" fill="rgb(222,168,14)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="81.8921%" y="1189" width="0.0192%" height="15" fill="rgb(209,128,24)" fg:x="17018" fg:w="4"/><text x="82.1421%" y="1199.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash (20 samples, 0.10%)</title><rect x="81.8488%" y="1317" width="0.0962%" height="15" fill="rgb(249,35,13)" fg:x="17009" fg:w="20"/><text x="82.0988%" y="1327.50"></text></g><g><title>db::DB::read_from_code_map (7 samples, 0.03%)</title><rect x="81.9114%" y="1301" width="0.0337%" height="15" fill="rgb(218,7,2)" fg:x="17022" fg:w="7"/><text x="82.1614%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.02%)</title><rect x="81.9210%" y="1285" width="0.0241%" height="15" fill="rgb(238,107,27)" fg:x="17024" fg:w="5"/><text x="82.1710%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="81.9210%" y="1269" width="0.0241%" height="15" fill="rgb(217,88,38)" fg:x="17024" fg:w="5"/><text x="82.1710%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.02%)</title><rect x="81.9210%" y="1253" width="0.0241%" height="15" fill="rgb(230,207,0)" fg:x="17024" fg:w="5"/><text x="82.1710%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="81.9210%" y="1237" width="0.0241%" height="15" fill="rgb(249,64,54)" fg:x="17024" fg:w="5"/><text x="82.1710%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="81.9210%" y="1221" width="0.0241%" height="15" fill="rgb(231,7,11)" fg:x="17024" fg:w="5"/><text x="82.1710%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (4 samples, 0.02%)</title><rect x="81.9450%" y="1317" width="0.0192%" height="15" fill="rgb(205,149,21)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (4 samples, 0.02%)</title><rect x="81.9450%" y="1301" width="0.0192%" height="15" fill="rgb(215,126,34)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (4 samples, 0.02%)</title><rect x="81.9450%" y="1285" width="0.0192%" height="15" fill="rgb(241,132,45)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (4 samples, 0.02%)</title><rect x="81.9450%" y="1269" width="0.0192%" height="15" fill="rgb(252,69,32)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="81.9450%" y="1253" width="0.0192%" height="15" fill="rgb(232,204,19)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="81.9450%" y="1237" width="0.0192%" height="15" fill="rgb(249,15,47)" fg:x="17029" fg:w="4"/><text x="82.1950%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="81.9499%" y="1221" width="0.0144%" height="15" fill="rgb(209,227,23)" fg:x="17030" fg:w="3"/><text x="82.1999%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="81.9499%" y="1205" width="0.0144%" height="15" fill="rgb(248,92,24)" fg:x="17030" fg:w="3"/><text x="82.1999%" y="1215.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="81.9499%" y="1189" width="0.0144%" height="15" fill="rgb(247,59,2)" fg:x="17030" fg:w="3"/><text x="82.1999%" y="1199.50"></text></g><g><title>db::CacheVal&lt;T&gt;::get_current (3 samples, 0.01%)</title><rect x="81.9787%" y="1301" width="0.0144%" height="15" fill="rgb(221,30,5)" fg:x="17036" fg:w="3"/><text x="82.2287%" y="1311.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="81.9787%" y="1285" width="0.0144%" height="15" fill="rgb(208,108,53)" fg:x="17036" fg:w="3"/><text x="82.2287%" y="1295.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="81.9787%" y="1269" width="0.0144%" height="15" fill="rgb(211,183,26)" fg:x="17036" fg:w="3"/><text x="82.2287%" y="1279.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::basic (37 samples, 0.18%)</title><rect x="81.8296%" y="1333" width="0.1780%" height="15" fill="rgb(232,132,4)" fg:x="17005" fg:w="37"/><text x="82.0796%" y="1343.50"></text></g><g><title>db::DB::read_from_account_map (9 samples, 0.04%)</title><rect x="81.9643%" y="1317" width="0.0433%" height="15" fill="rgb(253,128,37)" fg:x="17033" fg:w="9"/><text x="82.2143%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.01%)</title><rect x="81.9932%" y="1301" width="0.0144%" height="15" fill="rgb(221,58,24)" fg:x="17039" fg:w="3"/><text x="82.2432%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="81.9932%" y="1285" width="0.0144%" height="15" fill="rgb(230,54,45)" fg:x="17039" fg:w="3"/><text x="82.2432%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.01%)</title><rect x="81.9932%" y="1269" width="0.0144%" height="15" fill="rgb(254,21,18)" fg:x="17039" fg:w="3"/><text x="82.2432%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="81.9932%" y="1253" width="0.0144%" height="15" fill="rgb(221,108,0)" fg:x="17039" fg:w="3"/><text x="82.2432%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.01%)</title><rect x="81.9932%" y="1237" width="0.0144%" height="15" fill="rgb(206,95,1)" fg:x="17039" fg:w="3"/><text x="82.2432%" y="1247.50"></text></g><g><title>revm::journaled_state::JournaledState::load_code (55 samples, 0.26%)</title><rect x="81.7911%" y="1365" width="0.2647%" height="15" fill="rgb(237,52,5)" fg:x="16997" fg:w="55"/><text x="82.0411%" y="1375.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (55 samples, 0.26%)</title><rect x="81.7911%" y="1349" width="0.2647%" height="15" fill="rgb(218,150,34)" fg:x="16997" fg:w="55"/><text x="82.0411%" y="1359.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.03%)</title><rect x="82.0269%" y="1333" width="0.0289%" height="15" fill="rgb(235,194,28)" fg:x="17046" fg:w="6"/><text x="82.2769%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.03%)</title><rect x="82.0269%" y="1317" width="0.0289%" height="15" fill="rgb(245,92,18)" fg:x="17046" fg:w="6"/><text x="82.2769%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.03%)</title><rect x="82.0269%" y="1301" width="0.0289%" height="15" fill="rgb(253,203,53)" fg:x="17046" fg:w="6"/><text x="82.2769%" y="1311.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.03%)</title><rect x="82.0269%" y="1285" width="0.0289%" height="15" fill="rgb(249,185,47)" fg:x="17046" fg:w="6"/><text x="82.2769%" y="1295.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="82.0317%" y="1269" width="0.0241%" height="15" fill="rgb(252,194,52)" fg:x="17047" fg:w="5"/><text x="82.2817%" y="1279.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="82.0317%" y="1253" width="0.0241%" height="15" fill="rgb(210,53,36)" fg:x="17047" fg:w="5"/><text x="82.2817%" y="1263.50"></text></g><g><title>revm::journaled_state::JournaledState::touch (3 samples, 0.01%)</title><rect x="82.0557%" y="1365" width="0.0144%" height="15" fill="rgb(237,37,25)" fg:x="17052" fg:w="3"/><text x="82.3057%" y="1375.50"></text></g><g><title>revm::journaled_state::JournaledState::transfer (12 samples, 0.06%)</title><rect x="82.0702%" y="1365" width="0.0577%" height="15" fill="rgb(242,116,27)" fg:x="17055" fg:w="12"/><text x="82.3202%" y="1375.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (9 samples, 0.04%)</title><rect x="82.0846%" y="1349" width="0.0433%" height="15" fill="rgb(213,185,26)" fg:x="17058" fg:w="9"/><text x="82.3346%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (5 samples, 0.02%)</title><rect x="82.1038%" y="1333" width="0.0241%" height="15" fill="rgb(225,204,8)" fg:x="17062" fg:w="5"/><text x="82.3538%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="82.1038%" y="1317" width="0.0241%" height="15" fill="rgb(254,111,37)" fg:x="17062" fg:w="5"/><text x="82.3538%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="82.1038%" y="1301" width="0.0241%" height="15" fill="rgb(242,35,9)" fg:x="17062" fg:w="5"/><text x="82.3538%" y="1311.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="82.1135%" y="1285" width="0.0144%" height="15" fill="rgb(232,138,49)" fg:x="17064" fg:w="3"/><text x="82.3635%" y="1295.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="82.1135%" y="1269" width="0.0144%" height="15" fill="rgb(247,56,4)" fg:x="17064" fg:w="3"/><text x="82.3635%" y="1279.50"></text></g><g><title>revm_interpreter::interpreter::Interpreter::new (15 samples, 0.07%)</title><rect x="82.1279%" y="1365" width="0.0722%" height="15" fill="rgb(226,179,17)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1375.50"></text></g><g><title>revm_interpreter::interpreter::stack::Stack::new (15 samples, 0.07%)</title><rect x="82.1279%" y="1349" width="0.0722%" height="15" fill="rgb(216,163,45)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.07%)</title><rect x="82.1279%" y="1333" width="0.0722%" height="15" fill="rgb(211,157,3)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.07%)</title><rect x="82.1279%" y="1317" width="0.0722%" height="15" fill="rgb(234,44,20)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.07%)</title><rect x="82.1279%" y="1301" width="0.0722%" height="15" fill="rgb(254,138,23)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.07%)</title><rect x="82.1279%" y="1285" width="0.0722%" height="15" fill="rgb(206,119,39)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.07%)</title><rect x="82.1279%" y="1269" width="0.0722%" height="15" fill="rgb(231,105,52)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="82.1279%" y="1253" width="0.0722%" height="15" fill="rgb(250,20,5)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="82.1279%" y="1237" width="0.0722%" height="15" fill="rgb(215,198,30)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1247.50"></text></g><g><title>malloc (15 samples, 0.07%)</title><rect x="82.1279%" y="1221" width="0.0722%" height="15" fill="rgb(246,142,8)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1231.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="82.1279%" y="1205" width="0.0722%" height="15" fill="rgb(243,26,38)" fg:x="17067" fg:w="15"/><text x="82.3779%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="87.2047%" y="1301" width="0.0192%" height="15" fill="rgb(205,133,28)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="87.2047%" y="1285" width="0.0192%" height="15" fill="rgb(212,34,0)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1295.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="87.2047%" y="1269" width="0.0192%" height="15" fill="rgb(251,226,22)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="87.2047%" y="1253" width="0.0192%" height="15" fill="rgb(252,119,9)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="87.2047%" y="1237" width="0.0192%" height="15" fill="rgb(213,150,50)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="87.2047%" y="1221" width="0.0192%" height="15" fill="rgb(212,24,39)" fg:x="18122" fg:w="4"/><text x="87.4547%" y="1231.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::add (17 samples, 0.08%)</title><rect x="87.2239%" y="1269" width="0.0818%" height="15" fill="rgb(213,46,39)" fg:x="18126" fg:w="17"/><text x="87.4739%" y="1279.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;M,T,O&gt;::offset (17 samples, 0.08%)</title><rect x="87.2239%" y="1253" width="0.0818%" height="15" fill="rgb(239,106,12)" fg:x="18126" fg:w="17"/><text x="87.4739%" y="1263.50"></text></g><g><title>bitvec::index::BitIdx&lt;R&gt;::offset (17 samples, 0.08%)</title><rect x="87.2239%" y="1237" width="0.0818%" height="15" fill="rgb(249,229,21)" fg:x="18126" fg:w="17"/><text x="87.4739%" y="1247.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::set_unchecked (58 samples, 0.28%)</title><rect x="87.2239%" y="1301" width="0.2791%" height="15" fill="rgb(212,158,3)" fg:x="18126" fg:w="58"/><text x="87.4739%" y="1311.50"></text></g><g><title>bitvec::slice::BitSlice&lt;T,O&gt;::replace_unchecked (58 samples, 0.28%)</title><rect x="87.2239%" y="1285" width="0.2791%" height="15" fill="rgb(253,26,48)" fg:x="18126" fg:w="58"/><text x="87.4739%" y="1295.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;wyz::comu::Mut,T,O&gt;::replace (41 samples, 0.20%)</title><rect x="87.3057%" y="1269" width="0.1973%" height="15" fill="rgb(238,178,20)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1279.50"></text></g><g><title>bitvec::ptr::single::BitPtr&lt;wyz::comu::Frozen&lt;M&gt;,T,O&gt;::frozen_write_bit (41 samples, 0.20%)</title><rect x="87.3057%" y="1253" width="0.1973%" height="15" fill="rgb(208,86,15)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1263.50"></text></g><g><title>bitvec::access::BitAccess::write_bit (41 samples, 0.20%)</title><rect x="87.3057%" y="1237" width="0.1973%" height="15" fill="rgb(239,42,53)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1247.50"></text></g><g><title>bitvec::index::BitIdx&lt;R&gt;::select (41 samples, 0.20%)</title><rect x="87.3057%" y="1221" width="0.1973%" height="15" fill="rgb(245,226,8)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1231.50"></text></g><g><title>&lt;bitvec::order::Lsb0 as bitvec::order::BitOrder&gt;::select (41 samples, 0.20%)</title><rect x="87.3057%" y="1205" width="0.1973%" height="15" fill="rgb(216,176,32)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1215.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shl&gt;::shl (41 samples, 0.20%)</title><rect x="87.3057%" y="1189" width="0.1973%" height="15" fill="rgb(231,186,21)" fg:x="18143" fg:w="41"/><text x="87.5557%" y="1199.50"></text></g><g><title>bitvec::vec::api::&lt;impl bitvec::vec::BitVec&lt;T,O&gt;&gt;::with_capacity (10 samples, 0.05%)</title><rect x="87.5030%" y="1285" width="0.0481%" height="15" fill="rgb(205,95,49)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1295.50"></text></g><g><title>tap::pipe::Pipe::pipe (10 samples, 0.05%)</title><rect x="87.5030%" y="1269" width="0.0481%" height="15" fill="rgb(217,145,8)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.05%)</title><rect x="87.5030%" y="1253" width="0.0481%" height="15" fill="rgb(239,144,48)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.05%)</title><rect x="87.5030%" y="1237" width="0.0481%" height="15" fill="rgb(214,189,23)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="87.5030%" y="1221" width="0.0481%" height="15" fill="rgb(229,157,17)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.05%)</title><rect x="87.5030%" y="1205" width="0.0481%" height="15" fill="rgb(230,5,48)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.05%)</title><rect x="87.5030%" y="1189" width="0.0481%" height="15" fill="rgb(224,156,48)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.05%)</title><rect x="87.5030%" y="1173" width="0.0481%" height="15" fill="rgb(223,14,29)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.05%)</title><rect x="87.5030%" y="1157" width="0.0481%" height="15" fill="rgb(229,96,36)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.05%)</title><rect x="87.5030%" y="1141" width="0.0481%" height="15" fill="rgb(231,102,53)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1151.50"></text></g><g><title>malloc (10 samples, 0.05%)</title><rect x="87.5030%" y="1125" width="0.0481%" height="15" fill="rgb(210,77,38)" fg:x="18184" fg:w="10"/><text x="87.7530%" y="1135.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="87.5223%" y="1109" width="0.0289%" height="15" fill="rgb(235,131,6)" fg:x="18188" fg:w="6"/><text x="87.7723%" y="1119.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::repeat (15 samples, 0.07%)</title><rect x="87.5030%" y="1301" width="0.0722%" height="15" fill="rgb(252,55,38)" fg:x="18184" fg:w="15"/><text x="87.7530%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill_with (5 samples, 0.02%)</title><rect x="87.5511%" y="1285" width="0.0241%" height="15" fill="rgb(246,38,14)" fg:x="18194" fg:w="5"/><text x="87.8011%" y="1295.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="87.5511%" y="1269" width="0.0241%" height="15" fill="rgb(242,27,5)" fg:x="18194" fg:w="5"/><text x="87.8011%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (157 samples, 0.76%)</title><rect x="87.5752%" y="1301" width="0.7555%" height="15" fill="rgb(228,65,35)" fg:x="18199" fg:w="157"/><text x="87.8252%" y="1311.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (29 samples, 0.14%)</title><rect x="88.3307%" y="1301" width="0.1396%" height="15" fill="rgb(245,93,11)" fg:x="18356" fg:w="29"/><text x="88.5807%" y="1311.50"></text></g><g><title>revm_interpreter::interpreter::analysis::analyze (1,301 samples, 6.26%)</title><rect x="82.2145%" y="1317" width="6.2605%" height="15" fill="rgb(213,1,31)" fg:x="17085" fg:w="1301"/><text x="82.4645%" y="1327.50">revm_int..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.20%)</title><rect x="88.4847%" y="1301" width="0.1973%" height="15" fill="rgb(237,205,14)" fg:x="18388" fg:w="41"/><text x="88.7347%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.20%)</title><rect x="88.4847%" y="1285" width="0.1973%" height="15" fill="rgb(232,118,45)" fg:x="18388" fg:w="41"/><text x="88.7347%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.20%)</title><rect x="88.4847%" y="1269" width="0.1973%" height="15" fill="rgb(218,5,6)" fg:x="18388" fg:w="41"/><text x="88.7347%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.20%)</title><rect x="88.4847%" y="1253" width="0.1973%" height="15" fill="rgb(251,87,51)" fg:x="18388" fg:w="41"/><text x="88.7347%" y="1263.50"></text></g><g><title>[libc.so.6] (41 samples, 0.20%)</title><rect x="88.4847%" y="1237" width="0.1973%" height="15" fill="rgb(207,225,20)" fg:x="18388" fg:w="41"/><text x="88.7347%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.06%)</title><rect x="88.6820%" y="1301" width="0.0577%" height="15" fill="rgb(222,78,54)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.06%)</title><rect x="88.6820%" y="1285" width="0.0577%" height="15" fill="rgb(232,85,16)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.06%)</title><rect x="88.6820%" y="1269" width="0.0577%" height="15" fill="rgb(244,25,33)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.06%)</title><rect x="88.6820%" y="1253" width="0.0577%" height="15" fill="rgb(233,24,36)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.06%)</title><rect x="88.6820%" y="1237" width="0.0577%" height="15" fill="rgb(253,49,54)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.06%)</title><rect x="88.6820%" y="1221" width="0.0577%" height="15" fill="rgb(245,12,22)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.06%)</title><rect x="88.6820%" y="1205" width="0.0577%" height="15" fill="rgb(253,141,28)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1215.50"></text></g><g><title>malloc (12 samples, 0.06%)</title><rect x="88.6820%" y="1189" width="0.0577%" height="15" fill="rgb(225,207,27)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1199.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="88.6820%" y="1173" width="0.0577%" height="15" fill="rgb(220,84,2)" fg:x="18429" fg:w="12"/><text x="88.9320%" y="1183.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="88.7253%" y="1157" width="0.0144%" height="15" fill="rgb(224,37,37)" fg:x="18438" fg:w="3"/><text x="88.9753%" y="1167.50"></text></g><g><title>revm_interpreter::interpreter::contract::Contract::new_with_context (1,362 samples, 6.55%)</title><rect x="82.2001%" y="1365" width="6.5541%" height="15" fill="rgb(220,143,18)" fg:x="17082" fg:w="1362"/><text x="82.4501%" y="1375.50">revm_inte..</text></g><g><title>revm_interpreter::interpreter::contract::Contract::new (1,362 samples, 6.55%)</title><rect x="82.2001%" y="1349" width="6.5541%" height="15" fill="rgb(210,88,33)" fg:x="17082" fg:w="1362"/><text x="82.4501%" y="1359.50">revm_inte..</text></g><g><title>revm_interpreter::interpreter::analysis::to_analysed (1,362 samples, 6.55%)</title><rect x="82.2001%" y="1333" width="6.5541%" height="15" fill="rgb(219,87,51)" fg:x="17082" fg:w="1362"/><text x="82.4501%" y="1343.50">revm_inte..</text></g><g><title>revm_primitives::bytecode::Bytecode::to_checked (58 samples, 0.28%)</title><rect x="88.4750%" y="1317" width="0.2791%" height="15" fill="rgb(211,7,35)" fg:x="18386" fg:w="58"/><text x="88.7250%" y="1327.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::call (1,483 samples, 7.14%)</title><rect x="81.6323%" y="1429" width="7.1363%" height="15" fill="rgb(232,77,2)" fg:x="16964" fg:w="1483"/><text x="81.8823%" y="1439.50">revm::hand..</text></g><g><title>core::ops::function::Fn::call (1,483 samples, 7.14%)</title><rect x="81.6323%" y="1413" width="7.1363%" height="15" fill="rgb(249,94,25)" fg:x="16964" fg:w="1483"/><text x="81.8823%" y="1423.50">core::ops:..</text></g><g><title>revm::handler::mainnet::execution::call (1,483 samples, 7.14%)</title><rect x="81.6323%" y="1397" width="7.1363%" height="15" fill="rgb(215,112,2)" fg:x="16964" fg:w="1483"/><text x="81.8823%" y="1407.50">revm::hand..</text></g><g><title>revm::context::EvmContext&lt;DB&gt;::make_call_frame (1,481 samples, 7.13%)</title><rect x="81.6419%" y="1381" width="7.1267%" height="15" fill="rgb(226,115,48)" fg:x="16966" fg:w="1481"/><text x="81.8919%" y="1391.50">revm::cont..</text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.03%)</title><rect x="88.8119%" y="1365" width="0.0337%" height="15" fill="rgb(249,196,10)" fg:x="18456" fg:w="7"/><text x="89.0619%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="88.8119%" y="1349" width="0.0337%" height="15" fill="rgb(237,109,14)" fg:x="18456" fg:w="7"/><text x="89.0619%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="88.8119%" y="1333" width="0.0337%" height="15" fill="rgb(217,103,53)" fg:x="18456" fg:w="7"/><text x="89.0619%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="88.8119%" y="1317" width="0.0337%" height="15" fill="rgb(244,137,9)" fg:x="18456" fg:w="7"/><text x="89.0619%" y="1327.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="88.8119%" y="1301" width="0.0337%" height="15" fill="rgb(227,201,3)" fg:x="18456" fg:w="7"/><text x="89.0619%" y="1311.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="88.8167%" y="1285" width="0.0289%" height="15" fill="rgb(243,94,6)" fg:x="18457" fg:w="6"/><text x="89.0667%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.07%)</title><rect x="88.8456%" y="1269" width="0.0674%" height="15" fill="rgb(235,118,5)" fg:x="18463" fg:w="14"/><text x="89.0956%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.07%)</title><rect x="88.8456%" y="1253" width="0.0674%" height="15" fill="rgb(247,10,30)" fg:x="18463" fg:w="14"/><text x="89.0956%" y="1263.50"></text></g><g><title>free (14 samples, 0.07%)</title><rect x="88.8456%" y="1237" width="0.0674%" height="15" fill="rgb(205,26,28)" fg:x="18463" fg:w="14"/><text x="89.0956%" y="1247.50"></text></g><g><title>[libc.so.6] (13 samples, 0.06%)</title><rect x="88.8504%" y="1221" width="0.0626%" height="15" fill="rgb(206,99,35)" fg:x="18464" fg:w="13"/><text x="89.1004%" y="1231.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="88.8889%" y="1205" width="0.0241%" height="15" fill="rgb(238,130,40)" fg:x="18472" fg:w="5"/><text x="89.1389%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.07%)</title><rect x="88.8456%" y="1349" width="0.0722%" height="15" fill="rgb(224,126,31)" fg:x="18463" fg:w="15"/><text x="89.0956%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;revm::journaled_state::JournalEntry&gt;]&gt; (15 samples, 0.07%)</title><rect x="88.8456%" y="1333" width="0.0722%" height="15" fill="rgb(254,105,17)" fg:x="18463" fg:w="15"/><text x="89.0956%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;revm::journaled_state::JournalEntry&gt;&gt; (15 samples, 0.07%)</title><rect x="88.8456%" y="1317" width="0.0722%" height="15" fill="rgb(216,87,36)" fg:x="18463" fg:w="15"/><text x="89.0956%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;revm::journaled_state::JournalEntry&gt;&gt; (15 samples, 0.07%)</title><rect x="88.8456%" y="1301" width="0.0722%" height="15" fill="rgb(240,21,12)" fg:x="18463" fg:w="15"/><text x="89.0956%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.07%)</title><rect x="88.8456%" y="1285" width="0.0722%" height="15" fill="rgb(245,192,34)" fg:x="18463" fg:w="15"/><text x="89.0956%" y="1295.50"></text></g><g><title>revm::journaled_state::JournaledState::finalize (23 samples, 0.11%)</title><rect x="88.8119%" y="1381" width="0.1107%" height="15" fill="rgb(226,100,49)" fg:x="18456" fg:w="23"/><text x="89.0619%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;revm::journaled_state::JournalEntry&gt;&gt;&gt; (16 samples, 0.08%)</title><rect x="88.8456%" y="1365" width="0.0770%" height="15" fill="rgb(245,188,27)" fg:x="18463" fg:w="16"/><text x="89.0956%" y="1375.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::output (31 samples, 0.15%)</title><rect x="88.7782%" y="1429" width="0.1492%" height="15" fill="rgb(212,170,8)" fg:x="18449" fg:w="31"/><text x="89.0282%" y="1439.50"></text></g><g><title>core::ops::function::Fn::call (31 samples, 0.15%)</title><rect x="88.7782%" y="1413" width="0.1492%" height="15" fill="rgb(217,113,29)" fg:x="18449" fg:w="31"/><text x="89.0282%" y="1423.50"></text></g><g><title>revm::handler::mainnet::post_execution::output (28 samples, 0.13%)</title><rect x="88.7926%" y="1397" width="0.1347%" height="15" fill="rgb(237,30,3)" fg:x="18452" fg:w="28"/><text x="89.0426%" y="1407.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::reimburse_caller (7 samples, 0.03%)</title><rect x="88.9274%" y="1429" width="0.0337%" height="15" fill="rgb(227,19,28)" fg:x="18480" fg:w="7"/><text x="89.1774%" y="1439.50"></text></g><g><title>revm::handler::mainnet::post_execution::reimburse_caller (7 samples, 0.03%)</title><rect x="88.9274%" y="1413" width="0.0337%" height="15" fill="rgb(239,172,45)" fg:x="18480" fg:w="7"/><text x="89.1774%" y="1423.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (7 samples, 0.03%)</title><rect x="88.9274%" y="1397" width="0.0337%" height="15" fill="rgb(254,55,39)" fg:x="18480" fg:w="7"/><text x="89.1774%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (5 samples, 0.02%)</title><rect x="88.9370%" y="1381" width="0.0241%" height="15" fill="rgb(249,208,12)" fg:x="18482" fg:w="5"/><text x="89.1870%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="88.9370%" y="1365" width="0.0241%" height="15" fill="rgb(240,52,13)" fg:x="18482" fg:w="5"/><text x="89.1870%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="88.9370%" y="1349" width="0.0241%" height="15" fill="rgb(252,149,13)" fg:x="18482" fg:w="5"/><text x="89.1870%" y="1359.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="88.9466%" y="1333" width="0.0144%" height="15" fill="rgb(232,81,48)" fg:x="18484" fg:w="3"/><text x="89.1966%" y="1343.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="88.9466%" y="1317" width="0.0144%" height="15" fill="rgb(222,144,2)" fg:x="18484" fg:w="3"/><text x="89.1966%" y="1327.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::reward_beneficiary (5 samples, 0.02%)</title><rect x="88.9611%" y="1429" width="0.0241%" height="15" fill="rgb(216,81,32)" fg:x="18487" fg:w="5"/><text x="89.2111%" y="1439.50"></text></g><g><title>revm::handler::mainnet::post_execution::reward_beneficiary (4 samples, 0.02%)</title><rect x="88.9659%" y="1413" width="0.0192%" height="15" fill="rgb(244,78,51)" fg:x="18488" fg:w="4"/><text x="89.2159%" y="1423.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (4 samples, 0.02%)</title><rect x="88.9659%" y="1397" width="0.0192%" height="15" fill="rgb(217,66,21)" fg:x="18488" fg:w="4"/><text x="89.2159%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (4 samples, 0.02%)</title><rect x="88.9659%" y="1381" width="0.0192%" height="15" fill="rgb(247,101,42)" fg:x="18488" fg:w="4"/><text x="89.2159%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="88.9659%" y="1365" width="0.0192%" height="15" fill="rgb(227,81,39)" fg:x="18488" fg:w="4"/><text x="89.2159%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="88.9659%" y="1349" width="0.0192%" height="15" fill="rgb(220,223,44)" fg:x="18488" fg:w="4"/><text x="89.2159%" y="1359.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="88.9707%" y="1333" width="0.0144%" height="15" fill="rgb(205,218,2)" fg:x="18489" fg:w="3"/><text x="89.2207%" y="1343.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="88.9707%" y="1317" width="0.0144%" height="15" fill="rgb(212,207,28)" fg:x="18489" fg:w="3"/><text x="89.2207%" y="1327.50"></text></g><g><title>revm::handler::mainnet::pre_execution::deduct_caller_inner (5 samples, 0.02%)</title><rect x="88.9899%" y="1397" width="0.0241%" height="15" fill="rgb(224,12,41)" fg:x="18493" fg:w="5"/><text x="89.2399%" y="1407.50"></text></g><g><title>ruint::mul::&lt;impl ruint::Uint&lt;_,_&gt;&gt;::saturating_mul (3 samples, 0.01%)</title><rect x="88.9996%" y="1381" width="0.0144%" height="15" fill="rgb(216,118,12)" fg:x="18495" fg:w="3"/><text x="89.2496%" y="1391.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::deduct_caller (15 samples, 0.07%)</title><rect x="88.9851%" y="1429" width="0.0722%" height="15" fill="rgb(252,97,46)" fg:x="18492" fg:w="15"/><text x="89.2351%" y="1439.50"></text></g><g><title>revm::handler::mainnet::pre_execution::deduct_caller (14 samples, 0.07%)</title><rect x="88.9899%" y="1413" width="0.0674%" height="15" fill="rgb(244,206,19)" fg:x="18493" fg:w="14"/><text x="89.2399%" y="1423.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (9 samples, 0.04%)</title><rect x="89.0140%" y="1397" width="0.0433%" height="15" fill="rgb(231,84,31)" fg:x="18498" fg:w="9"/><text x="89.2640%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (8 samples, 0.04%)</title><rect x="89.0188%" y="1381" width="0.0385%" height="15" fill="rgb(244,133,0)" fg:x="18499" fg:w="8"/><text x="89.2688%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="89.0284%" y="1365" width="0.0289%" height="15" fill="rgb(223,15,50)" fg:x="18501" fg:w="6"/><text x="89.2784%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.03%)</title><rect x="89.0284%" y="1349" width="0.0289%" height="15" fill="rgb(250,118,49)" fg:x="18501" fg:w="6"/><text x="89.2784%" y="1359.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (4 samples, 0.02%)</title><rect x="89.0381%" y="1333" width="0.0192%" height="15" fill="rgb(248,25,38)" fg:x="18503" fg:w="4"/><text x="89.2881%" y="1343.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (4 samples, 0.02%)</title><rect x="89.0381%" y="1317" width="0.0192%" height="15" fill="rgb(215,70,14)" fg:x="18503" fg:w="4"/><text x="89.2881%" y="1327.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::default::Default&gt;::default (9 samples, 0.04%)</title><rect x="89.1006%" y="1301" width="0.0433%" height="15" fill="rgb(215,28,15)" fg:x="18516" fg:w="9"/><text x="89.3506%" y="1311.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (9 samples, 0.04%)</title><rect x="89.1006%" y="1285" width="0.0433%" height="15" fill="rgb(243,6,28)" fg:x="18516" fg:w="9"/><text x="89.3506%" y="1295.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (9 samples, 0.04%)</title><rect x="89.1006%" y="1269" width="0.0433%" height="15" fill="rgb(222,130,1)" fg:x="18516" fg:w="9"/><text x="89.3506%" y="1279.50"></text></g><g><title>tap::pipe::Pipe::pipe (8 samples, 0.04%)</title><rect x="89.1054%" y="1253" width="0.0385%" height="15" fill="rgb(236,166,44)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.04%)</title><rect x="89.1054%" y="1237" width="0.0385%" height="15" fill="rgb(221,108,14)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.04%)</title><rect x="89.1054%" y="1221" width="0.0385%" height="15" fill="rgb(252,3,45)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.04%)</title><rect x="89.1054%" y="1205" width="0.0385%" height="15" fill="rgb(237,68,30)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.04%)</title><rect x="89.1054%" y="1189" width="0.0385%" height="15" fill="rgb(211,79,22)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.04%)</title><rect x="89.1054%" y="1173" width="0.0385%" height="15" fill="rgb(252,185,21)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.04%)</title><rect x="89.1054%" y="1157" width="0.0385%" height="15" fill="rgb(225,189,26)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.04%)</title><rect x="89.1054%" y="1141" width="0.0385%" height="15" fill="rgb(241,30,40)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.04%)</title><rect x="89.1054%" y="1125" width="0.0385%" height="15" fill="rgb(235,215,44)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1135.50"></text></g><g><title>malloc (8 samples, 0.04%)</title><rect x="89.1054%" y="1109" width="0.0385%" height="15" fill="rgb(205,8,29)" fg:x="18517" fg:w="8"/><text x="89.3554%" y="1119.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="89.1151%" y="1093" width="0.0289%" height="15" fill="rgb(241,137,42)" fg:x="18519" fg:w="6"/><text x="89.3651%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (10 samples, 0.05%)</title><rect x="89.1006%" y="1333" width="0.0481%" height="15" fill="rgb(237,155,2)" fg:x="18516" fg:w="10"/><text x="89.3506%" y="1343.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash::{{closure}} (10 samples, 0.05%)</title><rect x="89.1006%" y="1317" width="0.0481%" height="15" fill="rgb(245,29,42)" fg:x="18516" fg:w="10"/><text x="89.3506%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (5 samples, 0.02%)</title><rect x="89.1632%" y="1317" width="0.0241%" height="15" fill="rgb(234,101,35)" fg:x="18529" fg:w="5"/><text x="89.4132%" y="1327.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="89.1680%" y="1301" width="0.0192%" height="15" fill="rgb(228,64,37)" fg:x="18530" fg:w="4"/><text x="89.4180%" y="1311.50"></text></g><g><title>heed::txn::abort_txn (4 samples, 0.02%)</title><rect x="89.1680%" y="1285" width="0.0192%" height="15" fill="rgb(217,214,36)" fg:x="18530" fg:w="4"/><text x="89.4180%" y="1295.50"></text></g><g><title>mdb_txn_end (3 samples, 0.01%)</title><rect x="89.1728%" y="1269" width="0.0144%" height="15" fill="rgb(243,70,3)" fg:x="18531" fg:w="3"/><text x="89.4228%" y="1279.50"></text></g><g><title>&lt;db::BEncodeDecode&lt;_&gt; as heed_traits::BytesEncode&gt;::bytes_encode (4 samples, 0.02%)</title><rect x="89.1921%" y="1301" width="0.0192%" height="15" fill="rgb(253,158,52)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="89.1921%" y="1285" width="0.0192%" height="15" fill="rgb(234,111,54)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="89.1921%" y="1269" width="0.0192%" height="15" fill="rgb(217,70,32)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="89.1921%" y="1253" width="0.0192%" height="15" fill="rgb(234,18,33)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="89.1921%" y="1237" width="0.0192%" height="15" fill="rgb(234,12,49)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="89.1921%" y="1221" width="0.0192%" height="15" fill="rgb(236,10,21)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="89.1921%" y="1205" width="0.0192%" height="15" fill="rgb(248,182,45)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="89.1921%" y="1189" width="0.0192%" height="15" fill="rgb(217,95,36)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="89.1921%" y="1173" width="0.0192%" height="15" fill="rgb(212,110,31)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="89.1921%" y="1157" width="0.0192%" height="15" fill="rgb(206,32,53)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="89.1921%" y="1141" width="0.0192%" height="15" fill="rgb(246,141,37)" fg:x="18535" fg:w="4"/><text x="89.4421%" y="1151.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="89.1969%" y="1125" width="0.0144%" height="15" fill="rgb(219,16,7)" fg:x="18536" fg:w="3"/><text x="89.4469%" y="1135.50"></text></g><g><title>mdb_node_search (6 samples, 0.03%)</title><rect x="89.2257%" y="1253" width="0.0289%" height="15" fill="rgb(230,205,45)" fg:x="18542" fg:w="6"/><text x="89.4757%" y="1263.50"></text></g><g><title>mdb_cmp_memn (5 samples, 0.02%)</title><rect x="89.2305%" y="1237" width="0.0241%" height="15" fill="rgb(231,43,49)" fg:x="18543" fg:w="5"/><text x="89.4805%" y="1247.50"></text></g><g><title>mdb_cursor_init (9 samples, 0.04%)</title><rect x="89.2209%" y="1285" width="0.0433%" height="15" fill="rgb(212,106,34)" fg:x="18541" fg:w="9"/><text x="89.4709%" y="1295.50"></text></g><g><title>mdb_page_search (9 samples, 0.04%)</title><rect x="89.2209%" y="1269" width="0.0433%" height="15" fill="rgb(206,83,17)" fg:x="18541" fg:w="9"/><text x="89.4709%" y="1279.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="89.2690%" y="1269" width="0.0192%" height="15" fill="rgb(244,154,49)" fg:x="18551" fg:w="4"/><text x="89.5190%" y="1279.50"></text></g><g><title>mdb_cmp_memn (3 samples, 0.01%)</title><rect x="89.2739%" y="1253" width="0.0144%" height="15" fill="rgb(244,149,49)" fg:x="18552" fg:w="3"/><text x="89.5239%" y="1263.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (21 samples, 0.10%)</title><rect x="89.1921%" y="1317" width="0.1011%" height="15" fill="rgb(227,134,18)" fg:x="18535" fg:w="21"/><text x="89.4421%" y="1327.50"></text></g><g><title>mdb_get (15 samples, 0.07%)</title><rect x="89.2209%" y="1301" width="0.0722%" height="15" fill="rgb(237,116,36)" fg:x="18541" fg:w="15"/><text x="89.4709%" y="1311.50"></text></g><g><title>mdb_cursor_set (6 samples, 0.03%)</title><rect x="89.2642%" y="1285" width="0.0289%" height="15" fill="rgb(205,129,40)" fg:x="18550" fg:w="6"/><text x="89.5142%" y="1295.50"></text></g><g><title>[libc.so.6] (330 samples, 1.59%)</title><rect x="89.2979%" y="1269" width="1.5880%" height="15" fill="rgb(236,178,4)" fg:x="18557" fg:w="330"/><text x="89.5479%" y="1279.50"></text></g><g><title>__libc_calloc (8 samples, 0.04%)</title><rect x="90.8859%" y="1269" width="0.0385%" height="15" fill="rgb(251,76,53)" fg:x="18887" fg:w="8"/><text x="91.1359%" y="1279.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="90.8859%" y="1253" width="0.0385%" height="15" fill="rgb(242,92,40)" fg:x="18887" fg:w="8"/><text x="91.1359%" y="1263.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash (386 samples, 1.86%)</title><rect x="89.1006%" y="1349" width="1.8575%" height="15" fill="rgb(209,45,30)" fg:x="18516" fg:w="386"/><text x="89.3506%" y="1359.50">&lt;..</text></g><g><title>db::DB::read_from_code_map (376 samples, 1.81%)</title><rect x="89.1487%" y="1333" width="1.8093%" height="15" fill="rgb(218,157,36)" fg:x="18526" fg:w="376"/><text x="89.3987%" y="1343.50">d..</text></g><g><title>heed::env::Env::read_txn (346 samples, 1.66%)</title><rect x="89.2931%" y="1317" width="1.6650%" height="15" fill="rgb(222,186,16)" fg:x="18556" fg:w="346"/><text x="89.5431%" y="1327.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (346 samples, 1.66%)</title><rect x="89.2931%" y="1301" width="1.6650%" height="15" fill="rgb(254,72,35)" fg:x="18556" fg:w="346"/><text x="89.5431%" y="1311.50"></text></g><g><title>mdb_txn_begin (346 samples, 1.66%)</title><rect x="89.2931%" y="1285" width="1.6650%" height="15" fill="rgb(224,25,35)" fg:x="18556" fg:w="346"/><text x="89.5431%" y="1295.50"></text></g><g><title>mdb_txn_renew0 (7 samples, 0.03%)</title><rect x="90.9244%" y="1269" width="0.0337%" height="15" fill="rgb(206,135,52)" fg:x="18895" fg:w="7"/><text x="91.1744%" y="1279.50"></text></g><g><title>db::CacheVal&lt;T&gt;::get_current (6 samples, 0.03%)</title><rect x="90.9821%" y="1333" width="0.0289%" height="15" fill="rgb(229,174,47)" fg:x="18907" fg:w="6"/><text x="91.2321%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="90.9821%" y="1317" width="0.0289%" height="15" fill="rgb(242,184,21)" fg:x="18907" fg:w="6"/><text x="91.2321%" y="1327.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="90.9918%" y="1301" width="0.0192%" height="15" fill="rgb(213,22,45)" fg:x="18909" fg:w="4"/><text x="91.2418%" y="1311.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::basic (401 samples, 1.93%)</title><rect x="89.0910%" y="1365" width="1.9296%" height="15" fill="rgb(237,81,54)" fg:x="18514" fg:w="401"/><text x="89.3410%" y="1375.50">&lt;..</text></g><g><title>db::DB::read_from_account_map (11 samples, 0.05%)</title><rect x="90.9677%" y="1349" width="0.0529%" height="15" fill="rgb(248,177,18)" fg:x="18904" fg:w="11"/><text x="91.2177%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.01%)</title><rect x="91.0206%" y="1365" width="0.0144%" height="15" fill="rgb(254,31,16)" fg:x="18915" fg:w="3"/><text x="91.2706%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (3 samples, 0.01%)</title><rect x="91.0351%" y="1365" width="0.0144%" height="15" fill="rgb(235,20,31)" fg:x="18918" fg:w="3"/><text x="91.2851%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::Account&gt; (3 samples, 0.01%)</title><rect x="91.0351%" y="1349" width="0.0144%" height="15" fill="rgb(240,56,43)" fg:x="18918" fg:w="3"/><text x="91.2851%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::AccountInfo&gt; (3 samples, 0.01%)</title><rect x="91.0351%" y="1333" width="0.0144%" height="15" fill="rgb(237,197,51)" fg:x="18918" fg:w="3"/><text x="91.2851%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (3 samples, 0.01%)</title><rect x="91.0351%" y="1317" width="0.0144%" height="15" fill="rgb(241,162,44)" fg:x="18918" fg:w="3"/><text x="91.2851%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (7 samples, 0.03%)</title><rect x="91.0495%" y="1365" width="0.0337%" height="15" fill="rgb(224,23,20)" fg:x="18921" fg:w="7"/><text x="91.2995%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="91.0591%" y="1349" width="0.0241%" height="15" fill="rgb(250,109,34)" fg:x="18923" fg:w="5"/><text x="91.3091%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.02%)</title><rect x="91.0591%" y="1333" width="0.0241%" height="15" fill="rgb(214,175,50)" fg:x="18923" fg:w="5"/><text x="91.3091%" y="1343.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (5 samples, 0.02%)</title><rect x="91.0591%" y="1317" width="0.0241%" height="15" fill="rgb(213,182,5)" fg:x="18923" fg:w="5"/><text x="91.3091%" y="1327.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5 samples, 0.02%)</title><rect x="91.0591%" y="1301" width="0.0241%" height="15" fill="rgb(209,199,19)" fg:x="18923" fg:w="5"/><text x="91.3091%" y="1311.50"></text></g><g><title>hashbrown::map::VacantEntry&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="91.0832%" y="1365" width="0.0144%" height="15" fill="rgb(236,224,42)" fg:x="18928" fg:w="3"/><text x="91.3332%" y="1375.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="91.1169%" y="1157" width="0.0241%" height="15" fill="rgb(246,226,29)" fg:x="18935" fg:w="5"/><text x="91.3669%" y="1167.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="91.1217%" y="1141" width="0.0192%" height="15" fill="rgb(227,223,11)" fg:x="18936" fg:w="4"/><text x="91.3717%" y="1151.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_accounts (434 samples, 2.09%)</title><rect x="89.0573%" y="1429" width="2.0884%" height="15" fill="rgb(219,7,51)" fg:x="18507" fg:w="434"/><text x="89.3073%" y="1439.50">r..</text></g><g><title>core::ops::function::Fn::call (433 samples, 2.08%)</title><rect x="89.0621%" y="1413" width="2.0836%" height="15" fill="rgb(245,167,10)" fg:x="18508" fg:w="433"/><text x="89.3121%" y="1423.50">c..</text></g><g><title>revm::handler::mainnet::pre_execution::load_accounts (433 samples, 2.08%)</title><rect x="89.0621%" y="1397" width="2.0836%" height="15" fill="rgb(237,224,16)" fg:x="18508" fg:w="433"/><text x="89.3121%" y="1407.50">r..</text></g><g><title>revm::journaled_state::JournaledState::initial_account_load (432 samples, 2.08%)</title><rect x="89.0669%" y="1381" width="2.0788%" height="15" fill="rgb(226,132,13)" fg:x="18509" fg:w="432"/><text x="89.3169%" y="1391.50">r..</text></g><g><title>revm_primitives::state::Account::new_not_existing (10 samples, 0.05%)</title><rect x="91.0976%" y="1365" width="0.0481%" height="15" fill="rgb(214,140,3)" fg:x="18931" fg:w="10"/><text x="91.3476%" y="1375.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::default::Default&gt;::default (10 samples, 0.05%)</title><rect x="91.0976%" y="1349" width="0.0481%" height="15" fill="rgb(221,177,4)" fg:x="18931" fg:w="10"/><text x="91.3476%" y="1359.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (10 samples, 0.05%)</title><rect x="91.0976%" y="1333" width="0.0481%" height="15" fill="rgb(238,139,3)" fg:x="18931" fg:w="10"/><text x="91.3476%" y="1343.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (8 samples, 0.04%)</title><rect x="91.1073%" y="1317" width="0.0385%" height="15" fill="rgb(216,17,39)" fg:x="18933" fg:w="8"/><text x="91.3573%" y="1327.50"></text></g><g><title>tap::pipe::Pipe::pipe (6 samples, 0.03%)</title><rect x="91.1169%" y="1301" width="0.0289%" height="15" fill="rgb(238,120,9)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.03%)</title><rect x="91.1169%" y="1285" width="0.0289%" height="15" fill="rgb(244,92,53)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.03%)</title><rect x="91.1169%" y="1269" width="0.0289%" height="15" fill="rgb(224,148,33)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="91.1169%" y="1253" width="0.0289%" height="15" fill="rgb(243,6,36)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="91.1169%" y="1237" width="0.0289%" height="15" fill="rgb(230,102,11)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.03%)</title><rect x="91.1169%" y="1221" width="0.0289%" height="15" fill="rgb(234,148,36)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="91.1169%" y="1205" width="0.0289%" height="15" fill="rgb(251,153,25)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="91.1169%" y="1189" width="0.0289%" height="15" fill="rgb(215,129,8)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="91.1169%" y="1173" width="0.0289%" height="15" fill="rgb(224,128,35)" fg:x="18935" fg:w="6"/><text x="91.3669%" y="1183.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.02%)</title><rect x="91.1554%" y="1317" width="0.0192%" height="15" fill="rgb(237,56,52)" fg:x="18943" fg:w="4"/><text x="91.4054%" y="1327.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="91.1602%" y="1301" width="0.0144%" height="15" fill="rgb(234,213,19)" fg:x="18944" fg:w="3"/><text x="91.4102%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.03%)</title><rect x="91.1506%" y="1349" width="0.0289%" height="15" fill="rgb(252,82,23)" fg:x="18942" fg:w="6"/><text x="91.4006%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.03%)</title><rect x="91.1506%" y="1333" width="0.0289%" height="15" fill="rgb(254,201,21)" fg:x="18942" fg:w="6"/><text x="91.4006%" y="1343.50"></text></g><g><title>&lt;revm_precompile::Precompiles as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="91.1506%" y="1397" width="0.0433%" height="15" fill="rgb(250,186,11)" fg:x="18942" fg:w="9"/><text x="91.4006%" y="1407.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="91.1506%" y="1381" width="0.0433%" height="15" fill="rgb(211,174,5)" fg:x="18942" fg:w="9"/><text x="91.4006%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="91.1506%" y="1365" width="0.0433%" height="15" fill="rgb(214,121,10)" fg:x="18942" fg:w="9"/><text x="91.4006%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.01%)</title><rect x="91.1794%" y="1349" width="0.0144%" height="15" fill="rgb(241,66,2)" fg:x="18948" fg:w="3"/><text x="91.4294%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.01%)</title><rect x="91.1794%" y="1333" width="0.0144%" height="15" fill="rgb(220,167,19)" fg:x="18948" fg:w="3"/><text x="91.4294%" y="1343.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (14 samples, 0.07%)</title><rect x="91.1939%" y="1397" width="0.0674%" height="15" fill="rgb(231,54,50)" fg:x="18951" fg:w="14"/><text x="91.4439%" y="1407.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::str::traits::FromStr&gt;::from_str (14 samples, 0.07%)</title><rect x="91.1939%" y="1381" width="0.0674%" height="15" fill="rgb(239,217,53)" fg:x="18951" fg:w="14"/><text x="91.4439%" y="1391.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::str::traits::FromStr&gt;::from_str (13 samples, 0.06%)</title><rect x="91.1987%" y="1365" width="0.0626%" height="15" fill="rgb(248,8,0)" fg:x="18952" fg:w="13"/><text x="91.4487%" y="1375.50"></text></g><g><title>const_hex::decode_to_slice (12 samples, 0.06%)</title><rect x="91.2035%" y="1349" width="0.0577%" height="15" fill="rgb(229,118,37)" fg:x="18953" fg:w="12"/><text x="91.4535%" y="1359.50"></text></g><g><title>const_hex::decode_to_slice_inner (12 samples, 0.06%)</title><rect x="91.2035%" y="1333" width="0.0577%" height="15" fill="rgb(253,223,43)" fg:x="18953" fg:w="12"/><text x="91.4535%" y="1343.50"></text></g><g><title>const_hex::decode_checked (11 samples, 0.05%)</title><rect x="91.2083%" y="1317" width="0.0529%" height="15" fill="rgb(211,77,36)" fg:x="18954" fg:w="11"/><text x="91.4583%" y="1327.50"></text></g><g><title>const_hex::arch::generic::decode_checked (11 samples, 0.05%)</title><rect x="91.2083%" y="1301" width="0.0529%" height="15" fill="rgb(219,3,53)" fg:x="18954" fg:w="11"/><text x="91.4583%" y="1311.50"></text></g><g><title>const_hex::arch::generic::decode_maybe_check (11 samples, 0.05%)</title><rect x="91.2083%" y="1285" width="0.0529%" height="15" fill="rgb(244,45,42)" fg:x="18954" fg:w="11"/><text x="91.4583%" y="1295.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (3 samples, 0.01%)</title><rect x="91.2612%" y="1397" width="0.0144%" height="15" fill="rgb(225,95,27)" fg:x="18965" fg:w="3"/><text x="91.5112%" y="1407.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::load_precompiles (31 samples, 0.15%)</title><rect x="91.1458%" y="1429" width="0.1492%" height="15" fill="rgb(207,74,8)" fg:x="18941" fg:w="31"/><text x="91.3958%" y="1439.50"></text></g><g><title>server::evm::precompiles::load_precompiles (30 samples, 0.14%)</title><rect x="91.1506%" y="1413" width="0.1444%" height="15" fill="rgb(243,63,36)" fg:x="18942" fg:w="30"/><text x="91.4006%" y="1423.50"></text></g><g><title>revm_precompile::Precompiles::extend (4 samples, 0.02%)</title><rect x="91.2757%" y="1397" width="0.0192%" height="15" fill="rgb(211,180,12)" fg:x="18968" fg:w="4"/><text x="91.5257%" y="1407.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="91.2757%" y="1381" width="0.0192%" height="15" fill="rgb(254,166,49)" fg:x="18968" fg:w="4"/><text x="91.5257%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="91.2805%" y="1365" width="0.0144%" height="15" fill="rgb(205,19,0)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="91.2805%" y="1349" width="0.0144%" height="15" fill="rgb(224,172,32)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1359.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="91.2805%" y="1333" width="0.0144%" height="15" fill="rgb(254,136,30)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="91.2805%" y="1317" width="0.0144%" height="15" fill="rgb(246,19,35)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.01%)</title><rect x="91.2805%" y="1301" width="0.0144%" height="15" fill="rgb(219,24,36)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1311.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (3 samples, 0.01%)</title><rect x="91.2805%" y="1285" width="0.0144%" height="15" fill="rgb(251,55,1)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1295.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.01%)</title><rect x="91.2805%" y="1269" width="0.0144%" height="15" fill="rgb(218,117,39)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1279.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.01%)</title><rect x="91.2805%" y="1253" width="0.0144%" height="15" fill="rgb(248,169,11)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.01%)</title><rect x="91.2805%" y="1237" width="0.0144%" height="15" fill="rgb(244,40,44)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.01%)</title><rect x="91.2805%" y="1221" width="0.0144%" height="15" fill="rgb(234,62,37)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="91.2805%" y="1205" width="0.0144%" height="15" fill="rgb(207,117,42)" fg:x="18969" fg:w="3"/><text x="91.5305%" y="1215.50"></text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_preverified_inner (4,069 samples, 19.58%)</title><rect x="71.7675%" y="1445" width="19.5804%" height="15" fill="rgb(213,43,2)" fg:x="14914" fg:w="4069"/><text x="72.0175%" y="1455.50">revm::evm::Evm&lt;EXT,DB&gt;::transac..</text></g><g><title>revm_interpreter::inner_models::CallInputs::new_boxed (11 samples, 0.05%)</title><rect x="91.2949%" y="1429" width="0.0529%" height="15" fill="rgb(244,202,51)" fg:x="18972" fg:w="11"/><text x="91.5449%" y="1439.50"></text></g><g><title>revm_interpreter::inner_models::CallInputs::new (8 samples, 0.04%)</title><rect x="91.3094%" y="1413" width="0.0385%" height="15" fill="rgb(253,174,46)" fg:x="18975" fg:w="8"/><text x="91.5594%" y="1423.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="91.3286%" y="1397" width="0.0192%" height="15" fill="rgb(251,23,1)" fg:x="18979" fg:w="4"/><text x="91.5786%" y="1407.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="91.3286%" y="1381" width="0.0192%" height="15" fill="rgb(253,26,1)" fg:x="18979" fg:w="4"/><text x="91.5786%" y="1391.50"></text></g><g><title>bytes::bytes::shared_clone (4 samples, 0.02%)</title><rect x="91.3286%" y="1365" width="0.0192%" height="15" fill="rgb(216,89,31)" fg:x="18979" fg:w="4"/><text x="91.5786%" y="1375.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (4 samples, 0.02%)</title><rect x="91.3286%" y="1349" width="0.0192%" height="15" fill="rgb(209,109,5)" fg:x="18979" fg:w="4"/><text x="91.5786%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.02%)</title><rect x="91.3286%" y="1333" width="0.0192%" height="15" fill="rgb(229,63,13)" fg:x="18979" fg:w="4"/><text x="91.5786%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="91.3334%" y="1317" width="0.0144%" height="15" fill="rgb(238,137,54)" fg:x="18980" fg:w="3"/><text x="91.5834%" y="1327.50"></text></g><g><title>__aarch64_ldadd8_relax (3 samples, 0.01%)</title><rect x="91.3334%" y="1301" width="0.0144%" height="15" fill="rgb(228,1,9)" fg:x="18980" fg:w="3"/><text x="91.5834%" y="1311.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::initial_tx_gas (10 samples, 0.05%)</title><rect x="91.3527%" y="1445" width="0.0481%" height="15" fill="rgb(249,120,48)" fg:x="18984" fg:w="10"/><text x="91.6027%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.04%)</title><rect x="91.3575%" y="1429" width="0.0433%" height="15" fill="rgb(209,72,36)" fg:x="18985" fg:w="9"/><text x="91.6075%" y="1439.50"></text></g><g><title>revm::handler::mainnet::validation::validate_initial_tx_gas (8 samples, 0.04%)</title><rect x="91.3623%" y="1413" width="0.0385%" height="15" fill="rgb(247,98,49)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1423.50"></text></g><g><title>revm_interpreter::gas::calc::validate_initial_tx_gas (8 samples, 0.04%)</title><rect x="91.3623%" y="1397" width="0.0385%" height="15" fill="rgb(233,75,36)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (8 samples, 0.04%)</title><rect x="91.3623%" y="1381" width="0.0385%" height="15" fill="rgb(225,14,24)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.04%)</title><rect x="91.3623%" y="1365" width="0.0385%" height="15" fill="rgb(237,193,20)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1375.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.04%)</title><rect x="91.3623%" y="1349" width="0.0385%" height="15" fill="rgb(239,122,19)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="91.3623%" y="1333" width="0.0385%" height="15" fill="rgb(231,220,10)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.04%)</title><rect x="91.3623%" y="1317" width="0.0385%" height="15" fill="rgb(220,66,15)" fg:x="18986" fg:w="8"/><text x="91.6123%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.01%)</title><rect x="91.3864%" y="1301" width="0.0144%" height="15" fill="rgb(215,171,52)" fg:x="18991" fg:w="3"/><text x="91.6364%" y="1311.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="91.4393%" y="1397" width="0.0241%" height="15" fill="rgb(241,169,50)" fg:x="19002" fg:w="5"/><text x="91.6893%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.03%)</title><rect x="91.4682%" y="1365" width="0.0337%" height="15" fill="rgb(236,189,0)" fg:x="19008" fg:w="7"/><text x="91.7182%" y="1375.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash::{{closure}} (6 samples, 0.03%)</title><rect x="91.4730%" y="1349" width="0.0289%" height="15" fill="rgb(217,147,20)" fg:x="19009" fg:w="6"/><text x="91.7230%" y="1359.50"></text></g><g><title>&lt;revm_primitives::bytecode::Bytecode as core::default::Default&gt;::default (6 samples, 0.03%)</title><rect x="91.4730%" y="1333" width="0.0289%" height="15" fill="rgb(206,188,39)" fg:x="19009" fg:w="6"/><text x="91.7230%" y="1343.50"></text></g><g><title>revm_primitives::bytecode::Bytecode::new (6 samples, 0.03%)</title><rect x="91.4730%" y="1317" width="0.0289%" height="15" fill="rgb(227,118,25)" fg:x="19009" fg:w="6"/><text x="91.7230%" y="1327.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::from_bitslice (5 samples, 0.02%)</title><rect x="91.4778%" y="1301" width="0.0241%" height="15" fill="rgb(248,171,40)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1311.50"></text></g><g><title>tap::pipe::Pipe::pipe (5 samples, 0.02%)</title><rect x="91.4778%" y="1285" width="0.0241%" height="15" fill="rgb(251,90,54)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="91.4778%" y="1269" width="0.0241%" height="15" fill="rgb(234,11,46)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="91.4778%" y="1253" width="0.0241%" height="15" fill="rgb(229,134,13)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="91.4778%" y="1237" width="0.0241%" height="15" fill="rgb(223,129,3)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="91.4778%" y="1221" width="0.0241%" height="15" fill="rgb(221,124,13)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="91.4778%" y="1205" width="0.0241%" height="15" fill="rgb(234,3,18)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="91.4778%" y="1189" width="0.0241%" height="15" fill="rgb(249,199,20)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="91.4778%" y="1173" width="0.0241%" height="15" fill="rgb(224,134,6)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="91.4778%" y="1157" width="0.0241%" height="15" fill="rgb(254,83,26)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1167.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="91.4778%" y="1141" width="0.0241%" height="15" fill="rgb(217,88,9)" fg:x="19010" fg:w="5"/><text x="91.7278%" y="1151.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="91.4826%" y="1125" width="0.0192%" height="15" fill="rgb(225,73,2)" fg:x="19011" fg:w="4"/><text x="91.7326%" y="1135.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="91.5067%" y="1301" width="0.0192%" height="15" fill="rgb(226,44,39)" fg:x="19016" fg:w="4"/><text x="91.7567%" y="1311.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="91.5067%" y="1285" width="0.0192%" height="15" fill="rgb(228,53,17)" fg:x="19016" fg:w="4"/><text x="91.7567%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;heed::txn::RoTxn&gt; (5 samples, 0.02%)</title><rect x="91.5067%" y="1349" width="0.0241%" height="15" fill="rgb(212,27,27)" fg:x="19016" fg:w="5"/><text x="91.7567%" y="1359.50"></text></g><g><title>&lt;heed::txn::RoTxn&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="91.5067%" y="1333" width="0.0241%" height="15" fill="rgb(241,50,6)" fg:x="19016" fg:w="5"/><text x="91.7567%" y="1343.50"></text></g><g><title>heed::txn::abort_txn (5 samples, 0.02%)</title><rect x="91.5067%" y="1317" width="0.0241%" height="15" fill="rgb(225,28,51)" fg:x="19016" fg:w="5"/><text x="91.7567%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.02%)</title><rect x="91.5307%" y="1349" width="0.0192%" height="15" fill="rgb(215,33,16)" fg:x="19021" fg:w="4"/><text x="91.7807%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.02%)</title><rect x="91.5307%" y="1333" width="0.0192%" height="15" fill="rgb(243,40,39)" fg:x="19021" fg:w="4"/><text x="91.7807%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.02%)</title><rect x="91.5307%" y="1317" width="0.0192%" height="15" fill="rgb(225,11,42)" fg:x="19021" fg:w="4"/><text x="91.7807%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="91.5307%" y="1301" width="0.0192%" height="15" fill="rgb(241,220,38)" fg:x="19021" fg:w="4"/><text x="91.7807%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="91.5307%" y="1285" width="0.0192%" height="15" fill="rgb(244,52,35)" fg:x="19021" fg:w="4"/><text x="91.7807%" y="1295.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (3 samples, 0.01%)</title><rect x="91.5355%" y="1269" width="0.0144%" height="15" fill="rgb(246,42,46)" fg:x="19022" fg:w="3"/><text x="91.7855%" y="1279.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (3 samples, 0.01%)</title><rect x="91.5355%" y="1253" width="0.0144%" height="15" fill="rgb(205,184,13)" fg:x="19022" fg:w="3"/><text x="91.7855%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;[u8]&gt;&gt; (5 samples, 0.02%)</title><rect x="91.5644%" y="1333" width="0.0241%" height="15" fill="rgb(209,48,36)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="91.5644%" y="1317" width="0.0241%" height="15" fill="rgb(244,34,51)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="91.5644%" y="1301" width="0.0241%" height="15" fill="rgb(221,107,33)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="91.5644%" y="1285" width="0.0241%" height="15" fill="rgb(224,203,12)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="91.5644%" y="1269" width="0.0241%" height="15" fill="rgb(230,215,18)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="91.5644%" y="1253" width="0.0241%" height="15" fill="rgb(206,185,35)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1263.50"></text></g><g><title>free (5 samples, 0.02%)</title><rect x="91.5644%" y="1237" width="0.0241%" height="15" fill="rgb(228,140,34)" fg:x="19028" fg:w="5"/><text x="91.8144%" y="1247.50"></text></g><g><title>mdb_cursor_init (6 samples, 0.03%)</title><rect x="91.5885%" y="1317" width="0.0289%" height="15" fill="rgb(208,93,13)" fg:x="19033" fg:w="6"/><text x="91.8385%" y="1327.50"></text></g><g><title>mdb_page_search (6 samples, 0.03%)</title><rect x="91.5885%" y="1301" width="0.0289%" height="15" fill="rgb(221,193,39)" fg:x="19033" fg:w="6"/><text x="91.8385%" y="1311.50"></text></g><g><title>mdb_node_search (4 samples, 0.02%)</title><rect x="91.5981%" y="1285" width="0.0192%" height="15" fill="rgb(241,132,34)" fg:x="19035" fg:w="4"/><text x="91.8481%" y="1295.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (18 samples, 0.09%)</title><rect x="91.5500%" y="1349" width="0.0866%" height="15" fill="rgb(221,141,10)" fg:x="19025" fg:w="18"/><text x="91.8000%" y="1359.50"></text></g><g><title>mdb_get (10 samples, 0.05%)</title><rect x="91.5885%" y="1333" width="0.0481%" height="15" fill="rgb(226,90,31)" fg:x="19033" fg:w="10"/><text x="91.8385%" y="1343.50"></text></g><g><title>mdb_cursor_set (4 samples, 0.02%)</title><rect x="91.6173%" y="1317" width="0.0192%" height="15" fill="rgb(243,75,5)" fg:x="19039" fg:w="4"/><text x="91.8673%" y="1327.50"></text></g><g><title>[libc.so.6] (361 samples, 1.74%)</title><rect x="91.6510%" y="1301" width="1.7372%" height="15" fill="rgb(227,156,21)" fg:x="19046" fg:w="361"/><text x="91.9010%" y="1311.50"></text></g><g><title>__libc_calloc (58 samples, 0.28%)</title><rect x="93.3882%" y="1301" width="0.2791%" height="15" fill="rgb(250,195,8)" fg:x="19407" fg:w="58"/><text x="93.6382%" y="1311.50"></text></g><g><title>[libc.so.6] (57 samples, 0.27%)</title><rect x="93.3930%" y="1285" width="0.2743%" height="15" fill="rgb(220,134,5)" fg:x="19408" fg:w="57"/><text x="93.6430%" y="1295.50"></text></g><g><title>[libc.so.6] (33 samples, 0.16%)</title><rect x="93.5085%" y="1269" width="0.1588%" height="15" fill="rgb(246,106,34)" fg:x="19432" fg:w="33"/><text x="93.7585%" y="1279.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="93.6095%" y="1253" width="0.0577%" height="15" fill="rgb(205,1,4)" fg:x="19453" fg:w="12"/><text x="93.8595%" y="1263.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::code_by_hash (464 samples, 2.23%)</title><rect x="91.4682%" y="1381" width="2.2328%" height="15" fill="rgb(224,151,29)" fg:x="19008" fg:w="464"/><text x="91.7182%" y="1391.50">&lt;..</text></g><g><title>db::DB::read_from_code_map (457 samples, 2.20%)</title><rect x="91.5019%" y="1365" width="2.1991%" height="15" fill="rgb(251,196,0)" fg:x="19015" fg:w="457"/><text x="91.7519%" y="1375.50">d..</text></g><g><title>heed::env::Env::read_txn (429 samples, 2.06%)</title><rect x="91.6366%" y="1349" width="2.0644%" height="15" fill="rgb(212,127,0)" fg:x="19043" fg:w="429"/><text x="91.8866%" y="1359.50">h..</text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (429 samples, 2.06%)</title><rect x="91.6366%" y="1333" width="2.0644%" height="15" fill="rgb(236,71,53)" fg:x="19043" fg:w="429"/><text x="91.8866%" y="1343.50">h..</text></g><g><title>mdb_txn_begin (429 samples, 2.06%)</title><rect x="91.6366%" y="1317" width="2.0644%" height="15" fill="rgb(227,99,0)" fg:x="19043" fg:w="429"/><text x="91.8866%" y="1327.50">m..</text></g><g><title>mdb_txn_renew0 (6 samples, 0.03%)</title><rect x="93.6721%" y="1301" width="0.0289%" height="15" fill="rgb(239,89,21)" fg:x="19466" fg:w="6"/><text x="93.9221%" y="1311.50"></text></g><g><title>db::CacheVal&lt;T&gt;::get_current (4 samples, 0.02%)</title><rect x="93.7250%" y="1365" width="0.0192%" height="15" fill="rgb(243,122,19)" fg:x="19477" fg:w="4"/><text x="93.9750%" y="1375.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="93.7250%" y="1349" width="0.0192%" height="15" fill="rgb(229,192,45)" fg:x="19477" fg:w="4"/><text x="93.9750%" y="1359.50"></text></g><g><title>&lt;revm_primitives::state::AccountInfo as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="93.7298%" y="1333" width="0.0144%" height="15" fill="rgb(235,165,35)" fg:x="19478" fg:w="3"/><text x="93.9798%" y="1343.50"></text></g><g><title>heed::database::Database&lt;KC,DC&gt;::get (6 samples, 0.03%)</title><rect x="93.7539%" y="1365" width="0.0289%" height="15" fill="rgb(253,202,0)" fg:x="19483" fg:w="6"/><text x="94.0039%" y="1375.50"></text></g><g><title>mdb_get (6 samples, 0.03%)</title><rect x="93.7539%" y="1349" width="0.0289%" height="15" fill="rgb(235,51,20)" fg:x="19483" fg:w="6"/><text x="94.0039%" y="1359.50"></text></g><g><title>mdb_cursor_set (4 samples, 0.02%)</title><rect x="93.7635%" y="1333" width="0.0192%" height="15" fill="rgb(218,95,46)" fg:x="19485" fg:w="4"/><text x="94.0135%" y="1343.50"></text></g><g><title>mdb_page_search (4 samples, 0.02%)</title><rect x="93.7635%" y="1317" width="0.0192%" height="15" fill="rgb(212,81,10)" fg:x="19485" fg:w="4"/><text x="94.0135%" y="1327.50"></text></g><g><title>mdb_page_search_root (4 samples, 0.02%)</title><rect x="93.7635%" y="1301" width="0.0192%" height="15" fill="rgb(240,59,0)" fg:x="19485" fg:w="4"/><text x="94.0135%" y="1311.50"></text></g><g><title>[libc.so.6] (16 samples, 0.08%)</title><rect x="93.7876%" y="1317" width="0.0770%" height="15" fill="rgb(212,191,42)" fg:x="19490" fg:w="16"/><text x="94.0376%" y="1327.50"></text></g><g><title>heed::env::Env::read_txn (19 samples, 0.09%)</title><rect x="93.7828%" y="1365" width="0.0914%" height="15" fill="rgb(233,140,3)" fg:x="19489" fg:w="19"/><text x="94.0328%" y="1375.50"></text></g><g><title>heed::txn::RoTxn&lt;T&gt;::new (19 samples, 0.09%)</title><rect x="93.7828%" y="1349" width="0.0914%" height="15" fill="rgb(215,69,23)" fg:x="19489" fg:w="19"/><text x="94.0328%" y="1359.50"></text></g><g><title>mdb_txn_begin (19 samples, 0.09%)</title><rect x="93.7828%" y="1333" width="0.0914%" height="15" fill="rgb(240,202,20)" fg:x="19489" fg:w="19"/><text x="94.0328%" y="1343.50"></text></g><g><title>&lt;db::DB as revm_primitives::db::Database&gt;::basic (502 samples, 2.42%)</title><rect x="91.4634%" y="1397" width="2.4157%" height="15" fill="rgb(209,146,50)" fg:x="19007" fg:w="502"/><text x="91.7134%" y="1407.50">&lt;d..</text></g><g><title>db::DB::read_from_account_map (35 samples, 0.17%)</title><rect x="93.7106%" y="1381" width="0.1684%" height="15" fill="rgb(253,102,54)" fg:x="19474" fg:w="35"/><text x="93.9606%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="93.8838%" y="1381" width="0.0192%" height="15" fill="rgb(250,173,47)" fg:x="19510" fg:w="4"/><text x="94.1338%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="93.8838%" y="1365" width="0.0192%" height="15" fill="rgb(232,142,7)" fg:x="19510" fg:w="4"/><text x="94.1338%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="93.8886%" y="1349" width="0.0144%" height="15" fill="rgb(230,157,47)" fg:x="19511" fg:w="3"/><text x="94.1386%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.03%)</title><rect x="93.8790%" y="1397" width="0.0289%" height="15" fill="rgb(214,177,35)" fg:x="19509" fg:w="6"/><text x="94.1290%" y="1407.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (6 samples, 0.03%)</title><rect x="93.9079%" y="1397" width="0.0289%" height="15" fill="rgb(234,119,46)" fg:x="19515" fg:w="6"/><text x="94.1579%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="93.9175%" y="1381" width="0.0192%" height="15" fill="rgb(241,180,50)" fg:x="19517" fg:w="4"/><text x="94.1675%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.02%)</title><rect x="93.9175%" y="1365" width="0.0192%" height="15" fill="rgb(221,54,25)" fg:x="19517" fg:w="4"/><text x="94.1675%" y="1375.50"></text></g><g><title>hashbrown::raw::neon::Group::match_byte (4 samples, 0.02%)</title><rect x="93.9175%" y="1349" width="0.0192%" height="15" fill="rgb(209,157,44)" fg:x="19517" fg:w="4"/><text x="94.1675%" y="1359.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (4 samples, 0.02%)</title><rect x="93.9175%" y="1333" width="0.0192%" height="15" fill="rgb(246,115,41)" fg:x="19517" fg:w="4"/><text x="94.1675%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="93.9368%" y="1349" width="0.0192%" height="15" fill="rgb(229,86,1)" fg:x="19521" fg:w="4"/><text x="94.1868%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="93.9368%" y="1333" width="0.0192%" height="15" fill="rgb(240,108,53)" fg:x="19521" fg:w="4"/><text x="94.1868%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.02%)</title><rect x="93.9368%" y="1317" width="0.0192%" height="15" fill="rgb(227,134,2)" fg:x="19521" fg:w="4"/><text x="94.1868%" y="1327.50"></text></g><g><title>hashbrown::map::VacantEntry&lt;K,V,S,A&gt;::insert (9 samples, 0.04%)</title><rect x="93.9368%" y="1397" width="0.0433%" height="15" fill="rgb(213,129,25)" fg:x="19521" fg:w="9"/><text x="94.1868%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_entry (9 samples, 0.04%)</title><rect x="93.9368%" y="1381" width="0.0433%" height="15" fill="rgb(226,35,21)" fg:x="19521" fg:w="9"/><text x="94.1868%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 0.04%)</title><rect x="93.9368%" y="1365" width="0.0433%" height="15" fill="rgb(208,129,26)" fg:x="19521" fg:w="9"/><text x="94.1868%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (5 samples, 0.02%)</title><rect x="93.9560%" y="1349" width="0.0241%" height="15" fill="rgb(224,83,6)" fg:x="19525" fg:w="5"/><text x="94.2060%" y="1359.50"></text></g><g><title>revm::journaled_state::JournaledState::load_account (535 samples, 2.57%)</title><rect x="91.4152%" y="1413" width="2.5745%" height="15" fill="rgb(227,52,39)" fg:x="18997" fg:w="535"/><text x="91.6652%" y="1423.50">re..</text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact_commit (5,016 samples, 24.14%)</title><rect x="69.8763%" y="1477" width="24.1374%" height="15" fill="rgb(241,30,17)" fg:x="14521" fg:w="5016"/><text x="70.1263%" y="1487.50">revm::evm::Evm&lt;EXT,DB&gt;::transact_commit</text></g><g><title>revm::evm::Evm&lt;EXT,DB&gt;::transact (4,623 samples, 22.25%)</title><rect x="71.7675%" y="1461" width="22.2463%" height="15" fill="rgb(246,186,42)" fg:x="14914" fg:w="4623"/><text x="72.0175%" y="1471.50">revm::evm::Evm&lt;EXT,DB&gt;::transact</text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::tx_against_state (543 samples, 2.61%)</title><rect x="91.4008%" y="1445" width="2.6130%" height="15" fill="rgb(221,169,15)" fg:x="18994" fg:w="543"/><text x="91.6508%" y="1455.50">re..</text></g><g><title>revm::handler::mainnet::validation::validate_tx_against_state (543 samples, 2.61%)</title><rect x="91.4008%" y="1429" width="2.6130%" height="15" fill="rgb(235,108,21)" fg:x="18994" fg:w="543"/><text x="91.6508%" y="1439.50">re..</text></g><g><title>revm_primitives::env::Env::validate_tx_against_state (5 samples, 0.02%)</title><rect x="93.9897%" y="1413" width="0.0241%" height="15" fill="rgb(219,148,30)" fg:x="19532" fg:w="5"/><text x="94.2397%" y="1423.50"></text></g><g><title>[libc.so.6] (18 samples, 0.09%)</title><rect x="94.0138%" y="1461" width="0.0866%" height="15" fill="rgb(220,109,5)" fg:x="19537" fg:w="18"/><text x="94.2638%" y="1471.50"></text></g><g><title>[libc.so.6] (31 samples, 0.15%)</title><rect x="94.1004%" y="1445" width="0.1492%" height="15" fill="rgb(213,203,48)" fg:x="19555" fg:w="31"/><text x="94.3504%" y="1455.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::build (32 samples, 0.15%)</title><rect x="94.1004%" y="1461" width="0.1540%" height="15" fill="rgb(244,71,33)" fg:x="19555" fg:w="32"/><text x="94.3504%" y="1471.50"></text></g><g><title>[libc.so.6] (20 samples, 0.10%)</title><rect x="94.2544%" y="1445" width="0.0962%" height="15" fill="rgb(209,23,2)" fg:x="19587" fg:w="20"/><text x="94.5044%" y="1455.50"></text></g><g><title>server::evm::modify_evm_with_tx_env (72 samples, 0.35%)</title><rect x="94.0138%" y="1477" width="0.3465%" height="15" fill="rgb(219,97,7)" fg:x="19537" fg:w="72"/><text x="94.2638%" y="1487.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::modify_tx_env (22 samples, 0.11%)</title><rect x="94.2544%" y="1461" width="0.1059%" height="15" fill="rgb(216,161,23)" fg:x="19587" fg:w="22"/><text x="94.5044%" y="1471.50"></text></g><g><title>server::get_latest_block_height (3 samples, 0.01%)</title><rect x="94.3602%" y="1477" width="0.0144%" height="15" fill="rgb(207,45,42)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1487.50"></text></g><g><title>db::DB::get_latest_block_hash (3 samples, 0.01%)</title><rect x="94.3602%" y="1461" width="0.0144%" height="15" fill="rgb(241,61,4)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;core::option::Option&lt;(ruint::Uint&lt;256_usize,4_usize&gt;,alloy_primitives::bits::fixed::FixedBytes&lt;32_usize&gt;)&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="94.3602%" y="1445" width="0.0144%" height="15" fill="rgb(236,170,1)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1455.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="94.3602%" y="1429" width="0.0144%" height="15" fill="rgb(239,72,5)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1439.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.01%)</title><rect x="94.3602%" y="1413" width="0.0144%" height="15" fill="rgb(214,13,50)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (3 samples, 0.01%)</title><rect x="94.3602%" y="1397" width="0.0144%" height="15" fill="rgb(224,88,9)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="94.3602%" y="1381" width="0.0144%" height="15" fill="rgb(238,192,34)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1391.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.01%)</title><rect x="94.3602%" y="1365" width="0.0144%" height="15" fill="rgb(217,203,50)" fg:x="19609" fg:w="3"/><text x="94.6102%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.13%)</title><rect x="94.3795%" y="1333" width="0.1251%" height="15" fill="rgb(241,123,32)" fg:x="19613" fg:w="26"/><text x="94.6295%" y="1343.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.13%)</title><rect x="94.3795%" y="1317" width="0.1251%" height="15" fill="rgb(248,151,39)" fg:x="19613" fg:w="26"/><text x="94.6295%" y="1327.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.13%)</title><rect x="94.3795%" y="1301" width="0.1251%" height="15" fill="rgb(208,89,6)" fg:x="19613" fg:w="26"/><text x="94.6295%" y="1311.50"></text></g><g><title>realloc (26 samples, 0.13%)</title><rect x="94.3795%" y="1285" width="0.1251%" height="15" fill="rgb(254,43,26)" fg:x="19613" fg:w="26"/><text x="94.6295%" y="1295.50"></text></g><g><title>[libc.so.6] (23 samples, 0.11%)</title><rect x="94.3939%" y="1269" width="0.1107%" height="15" fill="rgb(216,158,13)" fg:x="19616" fg:w="23"/><text x="94.6439%" y="1279.50"></text></g><g><title>[libc.so.6] (17 samples, 0.08%)</title><rect x="94.4228%" y="1253" width="0.0818%" height="15" fill="rgb(212,47,37)" fg:x="19622" fg:w="17"/><text x="94.6728%" y="1263.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="94.4902%" y="1237" width="0.0144%" height="15" fill="rgb(254,16,10)" fg:x="19636" fg:w="3"/><text x="94.7402%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28 samples, 0.13%)</title><rect x="94.3747%" y="1461" width="0.1347%" height="15" fill="rgb(223,228,16)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 0.13%)</title><rect x="94.3747%" y="1445" width="0.1347%" height="15" fill="rgb(249,108,50)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28 samples, 0.13%)</title><rect x="94.3747%" y="1429" width="0.1347%" height="15" fill="rgb(208,220,5)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.13%)</title><rect x="94.3747%" y="1413" width="0.1347%" height="15" fill="rgb(217,89,48)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.13%)</title><rect x="94.3747%" y="1397" width="0.1347%" height="15" fill="rgb(212,113,41)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.13%)</title><rect x="94.3747%" y="1381" width="0.1347%" height="15" fill="rgb(231,127,5)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.13%)</title><rect x="94.3747%" y="1365" width="0.1347%" height="15" fill="rgb(217,141,17)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.13%)</title><rect x="94.3747%" y="1349" width="0.1347%" height="15" fill="rgb(245,125,54)" fg:x="19612" fg:w="28"/><text x="94.6247%" y="1359.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_raw (62 samples, 0.30%)</title><rect x="94.5094%" y="1429" width="0.2983%" height="15" fill="rgb(248,125,3)" fg:x="19640" fg:w="62"/><text x="94.7594%" y="1439.50"></text></g><g><title>alloy_primitives::utils::Keccak256::finalize_into_array (62 samples, 0.30%)</title><rect x="94.5094%" y="1413" width="0.2983%" height="15" fill="rgb(236,119,51)" fg:x="19640" fg:w="62"/><text x="94.7594%" y="1423.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (62 samples, 0.30%)</title><rect x="94.5094%" y="1397" width="0.2983%" height="15" fill="rgb(239,99,8)" fg:x="19640" fg:w="62"/><text x="94.7594%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (61 samples, 0.29%)</title><rect x="94.5142%" y="1381" width="0.2935%" height="15" fill="rgb(224,228,4)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1391.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (61 samples, 0.29%)</title><rect x="94.5142%" y="1365" width="0.2935%" height="15" fill="rgb(220,131,45)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1375.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (61 samples, 0.29%)</title><rect x="94.5142%" y="1349" width="0.2935%" height="15" fill="rgb(215,62,5)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (61 samples, 0.29%)</title><rect x="94.5142%" y="1333" width="0.2935%" height="15" fill="rgb(253,12,24)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1343.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (61 samples, 0.29%)</title><rect x="94.5142%" y="1317" width="0.2935%" height="15" fill="rgb(248,120,50)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1327.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (61 samples, 0.29%)</title><rect x="94.5142%" y="1301" width="0.2935%" height="15" fill="rgb(245,194,10)" fg:x="19641" fg:w="61"/><text x="94.7642%" y="1311.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.02%)</title><rect x="94.7885%" y="1285" width="0.0192%" height="15" fill="rgb(241,149,38)" fg:x="19698" fg:w="4"/><text x="95.0385%" y="1295.50"></text></g><g><title>tiny_keccak::Buffer::xorin (7 samples, 0.03%)</title><rect x="94.8174%" y="1381" width="0.0337%" height="15" fill="rgb(219,215,7)" fg:x="19704" fg:w="7"/><text x="95.0674%" y="1391.50"></text></g><g><title>tiny_keccak::Buffer::execute (7 samples, 0.03%)</title><rect x="94.8174%" y="1365" width="0.0337%" height="15" fill="rgb(208,120,31)" fg:x="19704" fg:w="7"/><text x="95.0674%" y="1375.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (7 samples, 0.03%)</title><rect x="94.8174%" y="1349" width="0.0337%" height="15" fill="rgb(244,30,8)" fg:x="19704" fg:w="7"/><text x="95.0674%" y="1359.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="94.8366%" y="1333" width="0.0144%" height="15" fill="rgb(238,35,44)" fg:x="19708" fg:w="3"/><text x="95.0866%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="94.8366%" y="1317" width="0.0144%" height="15" fill="rgb(243,218,37)" fg:x="19708" fg:w="3"/><text x="95.0866%" y="1327.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.01%)</title><rect x="94.8366%" y="1301" width="0.0144%" height="15" fill="rgb(218,169,10)" fg:x="19708" fg:w="3"/><text x="95.0866%" y="1311.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.01%)</title><rect x="94.8366%" y="1285" width="0.0144%" height="15" fill="rgb(221,144,10)" fg:x="19708" fg:w="3"/><text x="95.0866%" y="1295.50"></text></g><g><title>alloy_primitives::utils::keccak256::keccak256 (131 samples, 0.63%)</title><rect x="94.5094%" y="1445" width="0.6304%" height="15" fill="rgb(226,41,38)" fg:x="19640" fg:w="131"/><text x="94.7594%" y="1455.50"></text></g><g><title>alloy_primitives::utils::Keccak256::update (68 samples, 0.33%)</title><rect x="94.8126%" y="1429" width="0.3272%" height="15" fill="rgb(228,3,1)" fg:x="19703" fg:w="68"/><text x="95.0626%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (68 samples, 0.33%)</title><rect x="94.8126%" y="1413" width="0.3272%" height="15" fill="rgb(209,129,12)" fg:x="19703" fg:w="68"/><text x="95.0626%" y="1423.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (67 samples, 0.32%)</title><rect x="94.8174%" y="1397" width="0.3224%" height="15" fill="rgb(213,136,33)" fg:x="19704" fg:w="67"/><text x="95.0674%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (60 samples, 0.29%)</title><rect x="94.8511%" y="1381" width="0.2887%" height="15" fill="rgb(209,181,29)" fg:x="19711" fg:w="60"/><text x="95.1011%" y="1391.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (60 samples, 0.29%)</title><rect x="94.8511%" y="1365" width="0.2887%" height="15" fill="rgb(234,173,18)" fg:x="19711" fg:w="60"/><text x="95.1011%" y="1375.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (60 samples, 0.29%)</title><rect x="94.8511%" y="1349" width="0.2887%" height="15" fill="rgb(227,73,47)" fg:x="19711" fg:w="60"/><text x="95.1011%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.02%)</title><rect x="95.1205%" y="1333" width="0.0192%" height="15" fill="rgb(234,9,34)" fg:x="19767" fg:w="4"/><text x="95.3705%" y="1343.50"></text></g><g><title>alloy_primitives::utils::keccak256 (135 samples, 0.65%)</title><rect x="94.5094%" y="1461" width="0.6496%" height="15" fill="rgb(235,172,15)" fg:x="19640" fg:w="135"/><text x="94.7594%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="95.1398%" y="1445" width="0.0192%" height="15" fill="rgb(245,61,2)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.02%)</title><rect x="95.1398%" y="1429" width="0.0192%" height="15" fill="rgb(238,39,47)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="95.1398%" y="1413" width="0.0192%" height="15" fill="rgb(234,37,24)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="95.1398%" y="1397" width="0.0192%" height="15" fill="rgb(248,223,24)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="95.1398%" y="1381" width="0.0192%" height="15" fill="rgb(223,12,15)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1391.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="95.1398%" y="1365" width="0.0192%" height="15" fill="rgb(249,6,3)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1375.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="95.1398%" y="1349" width="0.0192%" height="15" fill="rgb(237,105,33)" fg:x="19771" fg:w="4"/><text x="95.3898%" y="1359.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.02%)</title><rect x="95.1687%" y="1365" width="0.0192%" height="15" fill="rgb(252,208,35)" fg:x="19777" fg:w="4"/><text x="95.4187%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="95.1687%" y="1349" width="0.0192%" height="15" fill="rgb(215,181,35)" fg:x="19777" fg:w="4"/><text x="95.4187%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="95.1687%" y="1333" width="0.0192%" height="15" fill="rgb(246,212,3)" fg:x="19777" fg:w="4"/><text x="95.4187%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="95.1735%" y="1317" width="0.0144%" height="15" fill="rgb(247,156,24)" fg:x="19778" fg:w="3"/><text x="95.4235%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="95.1735%" y="1301" width="0.0144%" height="15" fill="rgb(248,9,31)" fg:x="19778" fg:w="3"/><text x="95.4235%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="95.1735%" y="1285" width="0.0144%" height="15" fill="rgb(234,26,45)" fg:x="19778" fg:w="3"/><text x="95.4235%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.04%)</title><rect x="95.2120%" y="1317" width="0.0433%" height="15" fill="rgb(249,11,32)" fg:x="19786" fg:w="9"/><text x="95.4620%" y="1327.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (8 samples, 0.04%)</title><rect x="95.2168%" y="1301" width="0.0385%" height="15" fill="rgb(249,162,33)" fg:x="19787" fg:w="8"/><text x="95.4668%" y="1311.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.10%)</title><rect x="95.1927%" y="1333" width="0.0962%" height="15" fill="rgb(232,4,32)" fg:x="19782" fg:w="20"/><text x="95.4427%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.03%)</title><rect x="95.2553%" y="1317" width="0.0337%" height="15" fill="rgb(212,5,45)" fg:x="19795" fg:w="7"/><text x="95.5053%" y="1327.50"></text></g><g><title>core::mem::replace (7 samples, 0.03%)</title><rect x="95.2553%" y="1301" width="0.0337%" height="15" fill="rgb(227,95,13)" fg:x="19795" fg:w="7"/><text x="95.5053%" y="1311.50"></text></g><g><title>core::ptr::read (7 samples, 0.03%)</title><rect x="95.2553%" y="1285" width="0.0337%" height="15" fill="rgb(223,205,10)" fg:x="19795" fg:w="7"/><text x="95.5053%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="95.2890%" y="1285" width="0.0241%" height="15" fill="rgb(222,178,8)" fg:x="19802" fg:w="5"/><text x="95.5390%" y="1295.50"></text></g><g><title>server::add_tx_to_block_wo_mutex (5,782 samples, 27.82%)</title><rect x="67.4992%" y="1493" width="27.8235%" height="15" fill="rgb(216,13,22)" fg:x="14027" fg:w="5782"/><text x="67.7492%" y="1503.50">server::add_tx_to_block_wo_mutex</text></g><g><title>server::types::get_tx_hash (197 samples, 0.95%)</title><rect x="94.3747%" y="1477" width="0.9480%" height="15" fill="rgb(240,167,12)" fg:x="19612" fg:w="197"/><text x="94.6247%" y="1487.50"></text></g><g><title>hex::encode (34 samples, 0.16%)</title><rect x="95.1590%" y="1461" width="0.1636%" height="15" fill="rgb(235,68,35)" fg:x="19775" fg:w="34"/><text x="95.4090%" y="1471.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (34 samples, 0.16%)</title><rect x="95.1590%" y="1445" width="0.1636%" height="15" fill="rgb(253,40,27)" fg:x="19775" fg:w="34"/><text x="95.4090%" y="1455.50"></text></g><g><title>hex::encode_to_iter (34 samples, 0.16%)</title><rect x="95.1590%" y="1429" width="0.1636%" height="15" fill="rgb(214,19,28)" fg:x="19775" fg:w="34"/><text x="95.4090%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.16%)</title><rect x="95.1590%" y="1413" width="0.1636%" height="15" fill="rgb(210,167,45)" fg:x="19775" fg:w="34"/><text x="95.4090%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (34 samples, 0.16%)</title><rect x="95.1590%" y="1397" width="0.1636%" height="15" fill="rgb(232,97,40)" fg:x="19775" fg:w="34"/><text x="95.4090%" y="1407.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (32 samples, 0.15%)</title><rect x="95.1687%" y="1381" width="0.1540%" height="15" fill="rgb(250,35,23)" fg:x="19777" fg:w="32"/><text x="95.4187%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 0.13%)</title><rect x="95.1879%" y="1365" width="0.1347%" height="15" fill="rgb(248,47,53)" fg:x="19781" fg:w="28"/><text x="95.4379%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.13%)</title><rect x="95.1879%" y="1349" width="0.1347%" height="15" fill="rgb(226,58,50)" fg:x="19781" fg:w="28"/><text x="95.4379%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.03%)</title><rect x="95.2890%" y="1333" width="0.0337%" height="15" fill="rgb(217,105,26)" fg:x="19802" fg:w="7"/><text x="95.5390%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (7 samples, 0.03%)</title><rect x="95.2890%" y="1317" width="0.0337%" height="15" fill="rgb(208,64,1)" fg:x="19802" fg:w="7"/><text x="95.5390%" y="1327.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.03%)</title><rect x="95.2890%" y="1301" width="0.0337%" height="15" fill="rgb(214,80,1)" fg:x="19802" fg:w="7"/><text x="95.5390%" y="1311.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="95.3467%" y="1477" width="0.0914%" height="15" fill="rgb(206,175,26)" fg:x="19814" fg:w="19"/><text x="95.5967%" y="1487.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="95.4381%" y="1461" width="0.0144%" height="15" fill="rgb(235,156,37)" fg:x="19833" fg:w="3"/><text x="95.6881%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="95.4381%" y="1477" width="0.0241%" height="15" fill="rgb(213,100,9)" fg:x="19833" fg:w="5"/><text x="95.6881%" y="1487.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="95.4622%" y="1477" width="0.0241%" height="15" fill="rgb(241,15,13)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="95.4622%" y="1461" width="0.0241%" height="15" fill="rgb(205,97,43)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="95.4622%" y="1445" width="0.0241%" height="15" fill="rgb(216,106,32)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="95.4622%" y="1429" width="0.0241%" height="15" fill="rgb(226,200,8)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="95.4622%" y="1413" width="0.0241%" height="15" fill="rgb(244,54,29)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="95.4622%" y="1397" width="0.0241%" height="15" fill="rgb(252,169,12)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1407.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="95.4622%" y="1381" width="0.0241%" height="15" fill="rgb(231,199,11)" fg:x="19838" fg:w="5"/><text x="95.7122%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm_precompile::Precompiles&gt;&gt; (3 samples, 0.01%)</title><rect x="95.4863%" y="1477" width="0.0144%" height="15" fill="rgb(233,191,18)" fg:x="19843" fg:w="3"/><text x="95.7363%" y="1487.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.4863%" y="1461" width="0.0144%" height="15" fill="rgb(215,83,47)" fg:x="19843" fg:w="3"/><text x="95.7363%" y="1471.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::build (11 samples, 0.05%)</title><rect x="95.5007%" y="1477" width="0.0529%" height="15" fill="rgb(251,67,19)" fg:x="19846" fg:w="11"/><text x="95.7507%" y="1487.50"></text></g><g><title>[libc.so.6] (11 samples, 0.05%)</title><rect x="95.5007%" y="1461" width="0.0529%" height="15" fill="rgb(240,7,20)" fg:x="19846" fg:w="11"/><text x="95.7507%" y="1471.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::with_env (16 samples, 0.08%)</title><rect x="95.5536%" y="1477" width="0.0770%" height="15" fill="rgb(210,150,26)" fg:x="19857" fg:w="16"/><text x="95.8036%" y="1487.50"></text></g><g><title>[libc.so.6] (16 samples, 0.08%)</title><rect x="95.5536%" y="1461" width="0.0770%" height="15" fill="rgb(228,75,42)" fg:x="19857" fg:w="16"/><text x="95.8036%" y="1471.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="95.6306%" y="1461" width="0.0577%" height="15" fill="rgb(237,134,48)" fg:x="19873" fg:w="12"/><text x="95.8806%" y="1471.50"></text></g><g><title>[libc.so.6] (28 samples, 0.13%)</title><rect x="95.6980%" y="1445" width="0.1347%" height="15" fill="rgb(205,80,50)" fg:x="19887" fg:w="28"/><text x="95.9480%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;revm::handler::register::HandleRegisters&lt;(),db::DB&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="95.8424%" y="1445" width="0.0192%" height="15" fill="rgb(217,74,48)" fg:x="19917" fg:w="4"/><text x="96.0924%" y="1455.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="95.8424%" y="1429" width="0.0192%" height="15" fill="rgb(205,82,50)" fg:x="19917" fg:w="4"/><text x="96.0924%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="95.8760%" y="1381" width="0.0192%" height="15" fill="rgb(228,1,33)" fg:x="19924" fg:w="4"/><text x="96.1260%" y="1391.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="95.8760%" y="1365" width="0.0192%" height="15" fill="rgb(214,50,23)" fg:x="19924" fg:w="4"/><text x="96.1260%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="95.8760%" y="1349" width="0.0192%" height="15" fill="rgb(210,62,9)" fg:x="19924" fg:w="4"/><text x="96.1260%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="95.8760%" y="1333" width="0.0192%" height="15" fill="rgb(210,104,37)" fg:x="19924" fg:w="4"/><text x="96.1260%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;revm_interpreter::gas::Gas)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (10 samples, 0.05%)</title><rect x="95.8712%" y="1413" width="0.0481%" height="15" fill="rgb(232,104,43)" fg:x="19923" fg:w="10"/><text x="96.1212%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.05%)</title><rect x="95.8712%" y="1397" width="0.0481%" height="15" fill="rgb(244,52,6)" fg:x="19923" fg:w="10"/><text x="96.1212%" y="1407.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="95.9001%" y="1381" width="0.0192%" height="15" fill="rgb(211,174,52)" fg:x="19929" fg:w="4"/><text x="96.1501%" y="1391.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="95.9001%" y="1365" width="0.0192%" height="15" fill="rgb(229,48,4)" fg:x="19929" fg:w="4"/><text x="96.1501%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),db::DB&gt;&gt; (14 samples, 0.07%)</title><rect x="95.8712%" y="1429" width="0.0674%" height="15" fill="rgb(205,155,16)" fg:x="19923" fg:w="14"/><text x="96.1212%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,revm::frame::FrameResult)&gt;+Output = core::result::Result&lt;revm_primitives::result::ResultAndState,revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.9242%" y="1413" width="0.0144%" height="15" fill="rgb(211,141,53)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.9242%" y="1397" width="0.0144%" height="15" fill="rgb(240,148,11)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="95.9242%" y="1381" width="0.0144%" height="15" fill="rgb(214,45,23)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1391.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="95.9242%" y="1365" width="0.0144%" height="15" fill="rgb(248,74,26)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="95.9242%" y="1349" width="0.0144%" height="15" fill="rgb(218,121,16)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.9242%" y="1333" width="0.0144%" height="15" fill="rgb(218,10,47)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1343.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (3 samples, 0.01%)</title><rect x="95.9242%" y="1317" width="0.0144%" height="15" fill="rgb(227,99,14)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1327.50"></text></g><g><title>core::mem::size_of_val_raw (3 samples, 0.01%)</title><rect x="95.9242%" y="1301" width="0.0144%" height="15" fill="rgb(229,83,46)" fg:x="19934" fg:w="3"/><text x="96.1742%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="95.9386%" y="1413" width="0.0289%" height="15" fill="rgb(228,25,1)" fg:x="19937" fg:w="6"/><text x="96.1886%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="95.9386%" y="1397" width="0.0289%" height="15" fill="rgb(252,190,15)" fg:x="19937" fg:w="6"/><text x="96.1886%" y="1407.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="95.9530%" y="1381" width="0.0144%" height="15" fill="rgb(213,103,51)" fg:x="19940" fg:w="3"/><text x="96.2030%" y="1391.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="95.9530%" y="1365" width="0.0144%" height="15" fill="rgb(220,38,44)" fg:x="19940" fg:w="3"/><text x="96.2030%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="95.9723%" y="1381" width="0.0144%" height="15" fill="rgb(210,45,26)" fg:x="19944" fg:w="3"/><text x="96.2223%" y="1391.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="95.9723%" y="1365" width="0.0144%" height="15" fill="rgb(205,95,48)" fg:x="19944" fg:w="3"/><text x="96.2223%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="95.9723%" y="1349" width="0.0144%" height="15" fill="rgb(225,179,37)" fg:x="19944" fg:w="3"/><text x="96.2223%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.9723%" y="1333" width="0.0144%" height="15" fill="rgb(230,209,3)" fg:x="19944" fg:w="3"/><text x="96.2223%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;(),db::DB&gt;&gt; (16 samples, 0.08%)</title><rect x="95.9386%" y="1429" width="0.0770%" height="15" fill="rgb(248,12,46)" fg:x="19937" fg:w="16"/><text x="96.1886%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm_precompile::Precompiles&gt;&gt; (10 samples, 0.05%)</title><rect x="95.9675%" y="1413" width="0.0481%" height="15" fill="rgb(234,18,0)" fg:x="19943" fg:w="10"/><text x="96.2175%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.05%)</title><rect x="95.9675%" y="1397" width="0.0481%" height="15" fill="rgb(238,197,14)" fg:x="19943" fg:w="10"/><text x="96.2175%" y="1407.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="96.0012%" y="1381" width="0.0144%" height="15" fill="rgb(251,162,48)" fg:x="19950" fg:w="3"/><text x="96.2512%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),db::DB&gt;&gt; (8 samples, 0.04%)</title><rect x="96.0156%" y="1429" width="0.0385%" height="15" fill="rgb(237,73,42)" fg:x="19953" fg:w="8"/><text x="96.2656%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="96.0348%" y="1413" width="0.0192%" height="15" fill="rgb(211,108,8)" fg:x="19957" fg:w="4"/><text x="96.2848%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="96.0348%" y="1397" width="0.0192%" height="15" fill="rgb(213,45,22)" fg:x="19957" fg:w="4"/><text x="96.2848%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::evm::Evm&lt;(),db::DB&gt;,(),db::DB&gt;&gt; (46 samples, 0.22%)</title><rect x="95.8616%" y="1445" width="0.2214%" height="15" fill="rgb(252,154,5)" fg:x="19921" fg:w="46"/><text x="96.1116%" y="1455.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="96.0541%" y="1429" width="0.0289%" height="15" fill="rgb(221,79,52)" fg:x="19961" fg:w="6"/><text x="96.3041%" y="1439.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="96.0589%" y="1413" width="0.0241%" height="15" fill="rgb(229,220,36)" fg:x="19962" fg:w="5"/><text x="96.3089%" y="1423.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="96.0637%" y="1397" width="0.0192%" height="15" fill="rgb(211,17,16)" fg:x="19963" fg:w="4"/><text x="96.3137%" y="1407.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="96.0926%" y="1397" width="0.0144%" height="15" fill="rgb(222,55,31)" fg:x="19969" fg:w="3"/><text x="96.3426%" y="1407.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="96.0926%" y="1381" width="0.0144%" height="15" fill="rgb(221,221,31)" fg:x="19969" fg:w="3"/><text x="96.3426%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;mut revm::frame::Frame,&amp;mut revm_interpreter::interpreter::shared_memory::SharedMemory,revm_interpreter::call_outcome::CallOutcome)&gt;+Output = ()&gt;&gt; (6 samples, 0.03%)</title><rect x="96.0830%" y="1429" width="0.0289%" height="15" fill="rgb(227,168,26)" fg:x="19967" fg:w="6"/><text x="96.3330%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="96.0830%" y="1413" width="0.0289%" height="15" fill="rgb(224,139,9)" fg:x="19967" fg:w="6"/><text x="96.3330%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="96.1118%" y="1397" width="0.0192%" height="15" fill="rgb(254,172,0)" fg:x="19973" fg:w="4"/><text x="96.3618%" y="1407.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="96.1118%" y="1381" width="0.0192%" height="15" fill="rgb(235,203,1)" fg:x="19973" fg:w="4"/><text x="96.3618%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="96.1118%" y="1365" width="0.0192%" height="15" fill="rgb(216,205,24)" fg:x="19973" fg:w="4"/><text x="96.3618%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="96.1118%" y="1349" width="0.0192%" height="15" fill="rgb(233,24,6)" fg:x="19973" fg:w="4"/><text x="96.3618%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="96.1166%" y="1333" width="0.0144%" height="15" fill="rgb(244,110,9)" fg:x="19974" fg:w="3"/><text x="96.3666%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="96.1166%" y="1317" width="0.0144%" height="15" fill="rgb(239,222,42)" fg:x="19974" fg:w="3"/><text x="96.3666%" y="1327.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="96.1166%" y="1301" width="0.0144%" height="15" fill="rgb(218,145,13)" fg:x="19974" fg:w="3"/><text x="96.3666%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;mut revm::frame::FrameResult)&gt;+Output = ()&gt;&gt; (7 samples, 0.03%)</title><rect x="96.1118%" y="1429" width="0.0337%" height="15" fill="rgb(207,69,11)" fg:x="19973" fg:w="7"/><text x="96.3618%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="96.1118%" y="1413" width="0.0337%" height="15" fill="rgb(220,223,22)" fg:x="19973" fg:w="7"/><text x="96.3618%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm::frame::CallFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = revm_interpreter::call_outcome::CallOutcome&gt;&gt; (5 samples, 0.02%)</title><rect x="96.1455%" y="1429" width="0.0241%" height="15" fill="rgb(245,102,5)" fg:x="19980" fg:w="5"/><text x="96.3955%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="96.1455%" y="1413" width="0.0241%" height="15" fill="rgb(211,148,2)" fg:x="19980" fg:w="5"/><text x="96.3955%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = revm_interpreter::create_outcome::CreateOutcome&gt;&gt; (5 samples, 0.02%)</title><rect x="96.1696%" y="1429" width="0.0241%" height="15" fill="rgb(241,13,44)" fg:x="19985" fg:w="5"/><text x="96.4196%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="96.1696%" y="1413" width="0.0241%" height="15" fill="rgb(219,137,21)" fg:x="19985" fg:w="5"/><text x="96.4196%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm_interpreter::inner_models::CallInputs&gt;,core::ops::range::Range&lt;usize&gt;)&gt;+Output = revm::frame::FrameOrResult&gt;&gt; (5 samples, 0.02%)</title><rect x="96.1936%" y="1429" width="0.0241%" height="15" fill="rgb(242,206,5)" fg:x="19990" fg:w="5"/><text x="96.4436%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="96.1936%" y="1413" width="0.0241%" height="15" fill="rgb(217,114,22)" fg:x="19990" fg:w="5"/><text x="96.4436%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),db::DB&gt;&gt; (31 samples, 0.15%)</title><rect x="96.0830%" y="1445" width="0.1492%" height="15" fill="rgb(253,206,42)" fg:x="19967" fg:w="31"/><text x="96.3330%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm_interpreter::inner_models::CreateInputs&gt;)&gt;+Output = revm::frame::FrameOrResult&gt;&gt; (3 samples, 0.01%)</title><rect x="96.2177%" y="1429" width="0.0144%" height="15" fill="rgb(236,102,18)" fg:x="19995" fg:w="3"/><text x="96.4677%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="96.2177%" y="1413" width="0.0144%" height="15" fill="rgb(208,59,49)" fg:x="19995" fg:w="3"/><text x="96.4677%" y="1423.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="96.2610%" y="1429" width="0.0385%" height="15" fill="rgb(215,194,28)" fg:x="20004" fg:w="8"/><text x="96.5110%" y="1439.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (41 samples, 0.20%)</title><rect x="96.3043%" y="1413" width="0.1973%" height="15" fill="rgb(243,207,11)" fg:x="20013" fg:w="41"/><text x="96.5543%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (39 samples, 0.19%)</title><rect x="96.3139%" y="1397" width="0.1877%" height="15" fill="rgb(254,179,35)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (39 samples, 0.19%)</title><rect x="96.3139%" y="1381" width="0.1877%" height="15" fill="rgb(235,97,3)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.19%)</title><rect x="96.3139%" y="1365" width="0.1877%" height="15" fill="rgb(215,155,33)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.19%)</title><rect x="96.3139%" y="1349" width="0.1877%" height="15" fill="rgb(223,128,12)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.19%)</title><rect x="96.3139%" y="1333" width="0.1877%" height="15" fill="rgb(208,157,18)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.19%)</title><rect x="96.3139%" y="1317" width="0.1877%" height="15" fill="rgb(249,70,54)" fg:x="20015" fg:w="39"/><text x="96.5639%" y="1327.50"></text></g><g><title>malloc (38 samples, 0.18%)</title><rect x="96.3188%" y="1301" width="0.1829%" height="15" fill="rgb(244,118,24)" fg:x="20016" fg:w="38"/><text x="96.5688%" y="1311.50"></text></g><g><title>[libc.so.6] (27 samples, 0.13%)</title><rect x="96.3717%" y="1285" width="0.1299%" height="15" fill="rgb(211,54,0)" fg:x="20027" fg:w="27"/><text x="96.6217%" y="1295.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="96.4824%" y="1269" width="0.0192%" height="15" fill="rgb(245,137,45)" fg:x="20050" fg:w="4"/><text x="96.7324%" y="1279.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (23 samples, 0.11%)</title><rect x="96.5016%" y="1413" width="0.1107%" height="15" fill="rgb(232,154,31)" fg:x="20054" fg:w="23"/><text x="96.7516%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (21 samples, 0.10%)</title><rect x="96.5112%" y="1397" width="0.1011%" height="15" fill="rgb(253,6,39)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.10%)</title><rect x="96.5112%" y="1381" width="0.1011%" height="15" fill="rgb(234,183,24)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.10%)</title><rect x="96.5112%" y="1365" width="0.1011%" height="15" fill="rgb(252,84,40)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.10%)</title><rect x="96.5112%" y="1349" width="0.1011%" height="15" fill="rgb(224,65,2)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.10%)</title><rect x="96.5112%" y="1333" width="0.1011%" height="15" fill="rgb(229,38,24)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.10%)</title><rect x="96.5112%" y="1317" width="0.1011%" height="15" fill="rgb(218,131,50)" fg:x="20056" fg:w="21"/><text x="96.7612%" y="1327.50"></text></g><g><title>malloc (19 samples, 0.09%)</title><rect x="96.5209%" y="1301" width="0.0914%" height="15" fill="rgb(233,106,18)" fg:x="20058" fg:w="19"/><text x="96.7709%" y="1311.50"></text></g><g><title>[libc.so.6] (15 samples, 0.07%)</title><rect x="96.5401%" y="1285" width="0.0722%" height="15" fill="rgb(220,216,11)" fg:x="20062" fg:w="15"/><text x="96.7901%" y="1295.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="96.5930%" y="1269" width="0.0192%" height="15" fill="rgb(251,100,45)" fg:x="20073" fg:w="4"/><text x="96.8430%" y="1279.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (14 samples, 0.07%)</title><rect x="96.6123%" y="1413" width="0.0674%" height="15" fill="rgb(235,143,32)" fg:x="20077" fg:w="14"/><text x="96.8623%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.06%)</title><rect x="96.6171%" y="1397" width="0.0626%" height="15" fill="rgb(248,124,34)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.06%)</title><rect x="96.6171%" y="1381" width="0.0626%" height="15" fill="rgb(225,221,4)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.06%)</title><rect x="96.6171%" y="1365" width="0.0626%" height="15" fill="rgb(242,27,43)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.06%)</title><rect x="96.6171%" y="1349" width="0.0626%" height="15" fill="rgb(227,54,8)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.06%)</title><rect x="96.6171%" y="1333" width="0.0626%" height="15" fill="rgb(253,139,49)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.06%)</title><rect x="96.6171%" y="1317" width="0.0626%" height="15" fill="rgb(231,26,43)" fg:x="20078" fg:w="13"/><text x="96.8671%" y="1327.50"></text></g><g><title>malloc (12 samples, 0.06%)</title><rect x="96.6219%" y="1301" width="0.0577%" height="15" fill="rgb(207,121,39)" fg:x="20079" fg:w="12"/><text x="96.8719%" y="1311.50"></text></g><g><title>[libc.so.6] (11 samples, 0.05%)</title><rect x="96.6267%" y="1285" width="0.0529%" height="15" fill="rgb(223,101,35)" fg:x="20080" fg:w="11"/><text x="96.8767%" y="1295.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="96.6652%" y="1269" width="0.0144%" height="15" fill="rgb(232,87,23)" fg:x="20088" fg:w="3"/><text x="96.9152%" y="1279.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (13 samples, 0.06%)</title><rect x="96.6797%" y="1413" width="0.0626%" height="15" fill="rgb(225,180,29)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.06%)</title><rect x="96.6797%" y="1397" width="0.0626%" height="15" fill="rgb(225,25,17)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1407.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.06%)</title><rect x="96.6797%" y="1381" width="0.0626%" height="15" fill="rgb(223,8,52)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1391.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.06%)</title><rect x="96.6797%" y="1365" width="0.0626%" height="15" fill="rgb(246,42,21)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.06%)</title><rect x="96.6797%" y="1349" width="0.0626%" height="15" fill="rgb(205,64,43)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.06%)</title><rect x="96.6797%" y="1333" width="0.0626%" height="15" fill="rgb(221,160,13)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.06%)</title><rect x="96.6797%" y="1317" width="0.0626%" height="15" fill="rgb(239,58,35)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1327.50"></text></g><g><title>malloc (13 samples, 0.06%)</title><rect x="96.6797%" y="1301" width="0.0626%" height="15" fill="rgb(251,26,40)" fg:x="20091" fg:w="13"/><text x="96.9297%" y="1311.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="96.6845%" y="1285" width="0.0577%" height="15" fill="rgb(247,0,4)" fg:x="20092" fg:w="12"/><text x="96.9345%" y="1295.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="96.7230%" y="1269" width="0.0192%" height="15" fill="rgb(218,130,10)" fg:x="20100" fg:w="4"/><text x="96.9730%" y="1279.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="96.7422%" y="1365" width="0.0144%" height="15" fill="rgb(239,32,7)" fg:x="20104" fg:w="3"/><text x="96.9922%" y="1375.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::with_spec_id (289 samples, 1.39%)</title><rect x="95.6306%" y="1477" width="1.3907%" height="15" fill="rgb(210,192,24)" fg:x="19873" fg:w="289"/><text x="95.8806%" y="1487.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::modify_spec_id (277 samples, 1.33%)</title><rect x="95.6884%" y="1461" width="1.3329%" height="15" fill="rgb(226,212,17)" fg:x="19885" fg:w="277"/><text x="95.9384%" y="1471.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (163 samples, 0.78%)</title><rect x="96.2369%" y="1445" width="0.7844%" height="15" fill="rgb(219,201,28)" fg:x="19999" fg:w="163"/><text x="96.4869%" y="1455.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (150 samples, 0.72%)</title><rect x="96.2995%" y="1429" width="0.7218%" height="15" fill="rgb(235,207,41)" fg:x="20012" fg:w="150"/><text x="96.5495%" y="1439.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table (58 samples, 0.28%)</title><rect x="96.7422%" y="1413" width="0.2791%" height="15" fill="rgb(241,95,54)" fg:x="20104" fg:w="58"/><text x="96.9922%" y="1423.50"></text></g><g><title>core::array::from_fn (58 samples, 0.28%)</title><rect x="96.7422%" y="1397" width="0.2791%" height="15" fill="rgb(248,12,23)" fg:x="20104" fg:w="58"/><text x="96.9922%" y="1407.50"></text></g><g><title>core::array::try_from_fn (58 samples, 0.28%)</title><rect x="96.7422%" y="1381" width="0.2791%" height="15" fill="rgb(228,173,4)" fg:x="20104" fg:w="58"/><text x="96.9922%" y="1391.50"></text></g><g><title>core::array::try_from_fn_erased (55 samples, 0.26%)</title><rect x="96.7567%" y="1365" width="0.2647%" height="15" fill="rgb(254,99,5)" fg:x="20107" fg:w="55"/><text x="97.0067%" y="1375.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (53 samples, 0.26%)</title><rect x="96.7663%" y="1349" width="0.2550%" height="15" fill="rgb(212,184,17)" fg:x="20109" fg:w="53"/><text x="97.0163%" y="1359.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table::{{closure}} (53 samples, 0.26%)</title><rect x="96.7663%" y="1333" width="0.2550%" height="15" fill="rgb(252,174,1)" fg:x="20109" fg:w="53"/><text x="97.0163%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::opcode::instruction (53 samples, 0.26%)</title><rect x="96.7663%" y="1317" width="0.2550%" height="15" fill="rgb(241,118,51)" fg:x="20109" fg:w="53"/><text x="97.0163%" y="1327.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="97.0261%" y="1461" width="0.0385%" height="15" fill="rgb(227,94,47)" fg:x="20163" fg:w="8"/><text x="97.2761%" y="1471.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="97.0646%" y="1461" width="0.0144%" height="15" fill="rgb(229,104,2)" fg:x="20171" fg:w="3"/><text x="97.3146%" y="1471.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="97.0646%" y="1445" width="0.0144%" height="15" fill="rgb(219,28,31)" fg:x="20171" fg:w="3"/><text x="97.3146%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="97.0646%" y="1429" width="0.0144%" height="15" fill="rgb(233,109,36)" fg:x="20171" fg:w="3"/><text x="97.3146%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.0646%" y="1413" width="0.0144%" height="15" fill="rgb(246,88,11)" fg:x="20171" fg:w="3"/><text x="97.3146%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="97.0839%" y="1445" width="0.0192%" height="15" fill="rgb(209,212,17)" fg:x="20175" fg:w="4"/><text x="97.3339%" y="1455.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="97.0839%" y="1429" width="0.0192%" height="15" fill="rgb(243,59,29)" fg:x="20175" fg:w="4"/><text x="97.3339%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="97.0839%" y="1413" width="0.0192%" height="15" fill="rgb(244,205,48)" fg:x="20175" fg:w="4"/><text x="97.3339%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="97.0839%" y="1397" width="0.0192%" height="15" fill="rgb(227,30,6)" fg:x="20175" fg:w="4"/><text x="97.3339%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="97.1176%" y="1397" width="0.0192%" height="15" fill="rgb(220,205,48)" fg:x="20182" fg:w="4"/><text x="97.3676%" y="1407.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="97.1176%" y="1381" width="0.0192%" height="15" fill="rgb(250,94,14)" fg:x="20182" fg:w="4"/><text x="97.3676%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="97.1176%" y="1365" width="0.0192%" height="15" fill="rgb(216,119,42)" fg:x="20182" fg:w="4"/><text x="97.3676%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="97.1176%" y="1349" width="0.0192%" height="15" fill="rgb(232,155,0)" fg:x="20182" fg:w="4"/><text x="97.3676%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;revm_interpreter::gas::Gas)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (12 samples, 0.06%)</title><rect x="97.1127%" y="1429" width="0.0577%" height="15" fill="rgb(212,24,32)" fg:x="20181" fg:w="12"/><text x="97.3627%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="97.1127%" y="1413" width="0.0577%" height="15" fill="rgb(216,69,20)" fg:x="20181" fg:w="12"/><text x="97.3627%" y="1423.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="97.1512%" y="1397" width="0.0192%" height="15" fill="rgb(229,73,31)" fg:x="20189" fg:w="4"/><text x="97.4012%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (15 samples, 0.07%)</title><rect x="97.1127%" y="1445" width="0.0722%" height="15" fill="rgb(224,219,20)" fg:x="20181" fg:w="15"/><text x="97.3627%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="97.1849%" y="1429" width="0.0144%" height="15" fill="rgb(215,146,41)" fg:x="20196" fg:w="3"/><text x="97.4349%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.1849%" y="1413" width="0.0144%" height="15" fill="rgb(244,71,31)" fg:x="20196" fg:w="3"/><text x="97.4349%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="97.2090%" y="1397" width="0.0192%" height="15" fill="rgb(224,24,11)" fg:x="20201" fg:w="4"/><text x="97.4590%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (11 samples, 0.05%)</title><rect x="97.1849%" y="1445" width="0.0529%" height="15" fill="rgb(229,76,15)" fg:x="20196" fg:w="11"/><text x="97.4349%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm_precompile::Precompiles&gt;&gt; (8 samples, 0.04%)</title><rect x="97.1994%" y="1429" width="0.0385%" height="15" fill="rgb(209,93,2)" fg:x="20199" fg:w="8"/><text x="97.4494%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="97.1994%" y="1413" width="0.0385%" height="15" fill="rgb(216,200,50)" fg:x="20199" fg:w="8"/><text x="97.4494%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="97.2379%" y="1397" width="0.0192%" height="15" fill="rgb(211,67,34)" fg:x="20207" fg:w="4"/><text x="97.4879%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="97.2379%" y="1429" width="0.0241%" height="15" fill="rgb(225,87,47)" fg:x="20207" fg:w="5"/><text x="97.4879%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="97.2379%" y="1413" width="0.0241%" height="15" fill="rgb(217,185,16)" fg:x="20207" fg:w="5"/><text x="97.4879%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="97.2619%" y="1429" width="0.0144%" height="15" fill="rgb(205,0,0)" fg:x="20212" fg:w="3"/><text x="97.5119%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.2619%" y="1413" width="0.0144%" height="15" fill="rgb(207,116,45)" fg:x="20212" fg:w="3"/><text x="97.5119%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="97.2619%" y="1397" width="0.0144%" height="15" fill="rgb(221,156,26)" fg:x="20212" fg:w="3"/><text x="97.5119%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="97.2619%" y="1381" width="0.0144%" height="15" fill="rgb(213,140,4)" fg:x="20212" fg:w="3"/><text x="97.5119%" y="1391.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="97.2619%" y="1365" width="0.0144%" height="15" fill="rgb(231,224,15)" fg:x="20212" fg:w="3"/><text x="97.5119%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="97.2764%" y="1397" width="0.0144%" height="15" fill="rgb(244,76,20)" fg:x="20215" fg:w="3"/><text x="97.5264%" y="1407.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="97.2764%" y="1381" width="0.0144%" height="15" fill="rgb(238,117,7)" fg:x="20215" fg:w="3"/><text x="97.5264%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="97.2764%" y="1365" width="0.0144%" height="15" fill="rgb(235,1,10)" fg:x="20215" fg:w="3"/><text x="97.5264%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.2764%" y="1349" width="0.0144%" height="15" fill="rgb(216,165,6)" fg:x="20215" fg:w="3"/><text x="97.5264%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (14 samples, 0.07%)</title><rect x="97.2379%" y="1445" width="0.0674%" height="15" fill="rgb(246,91,35)" fg:x="20207" fg:w="14"/><text x="97.4879%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="97.2764%" y="1429" width="0.0289%" height="15" fill="rgb(228,96,24)" fg:x="20215" fg:w="6"/><text x="97.5264%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="97.2764%" y="1413" width="0.0289%" height="15" fill="rgb(254,217,53)" fg:x="20215" fg:w="6"/><text x="97.5264%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="97.2908%" y="1397" width="0.0144%" height="15" fill="rgb(209,60,0)" fg:x="20218" fg:w="3"/><text x="97.5408%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="97.2908%" y="1381" width="0.0144%" height="15" fill="rgb(250,93,26)" fg:x="20218" fg:w="3"/><text x="97.5408%" y="1391.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="97.2908%" y="1365" width="0.0144%" height="15" fill="rgb(211,9,40)" fg:x="20218" fg:w="3"/><text x="97.5408%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::evm::Evm&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (55 samples, 0.26%)</title><rect x="97.0791%" y="1461" width="0.2647%" height="15" fill="rgb(242,57,20)" fg:x="20174" fg:w="55"/><text x="97.3291%" y="1471.50"></text></g><g><title>free (8 samples, 0.04%)</title><rect x="97.3052%" y="1445" width="0.0385%" height="15" fill="rgb(248,85,48)" fg:x="20221" fg:w="8"/><text x="97.5552%" y="1455.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="97.3052%" y="1429" width="0.0385%" height="15" fill="rgb(212,117,2)" fg:x="20221" fg:w="8"/><text x="97.5552%" y="1439.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.3293%" y="1413" width="0.0144%" height="15" fill="rgb(243,19,3)" fg:x="20226" fg:w="3"/><text x="97.5793%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,&amp;mut revm_interpreter::interpreter::shared_memory::SharedMemory,revm_interpreter::call_outcome::CallOutcome)&gt;+Output = ()&gt;&gt; (5 samples, 0.02%)</title><rect x="97.3437%" y="1445" width="0.0241%" height="15" fill="rgb(232,217,24)" fg:x="20229" fg:w="5"/><text x="97.5937%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="97.3437%" y="1429" width="0.0241%" height="15" fill="rgb(224,175,40)" fg:x="20229" fg:w="5"/><text x="97.5937%" y="1439.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="97.3534%" y="1413" width="0.0144%" height="15" fill="rgb(212,162,32)" fg:x="20231" fg:w="3"/><text x="97.6034%" y="1423.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.3534%" y="1397" width="0.0144%" height="15" fill="rgb(215,9,4)" fg:x="20231" fg:w="3"/><text x="97.6034%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = ()&gt;&gt; (3 samples, 0.01%)</title><rect x="97.3678%" y="1445" width="0.0144%" height="15" fill="rgb(242,42,7)" fg:x="20234" fg:w="3"/><text x="97.6178%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.3678%" y="1429" width="0.0144%" height="15" fill="rgb(242,184,45)" fg:x="20234" fg:w="3"/><text x="97.6178%" y="1439.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="97.3822%" y="1413" width="0.0144%" height="15" fill="rgb(228,111,51)" fg:x="20237" fg:w="3"/><text x="97.6322%" y="1423.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="97.3822%" y="1397" width="0.0144%" height="15" fill="rgb(236,147,17)" fg:x="20237" fg:w="3"/><text x="97.6322%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="97.3822%" y="1381" width="0.0144%" height="15" fill="rgb(210,75,22)" fg:x="20237" fg:w="3"/><text x="97.6322%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.3822%" y="1365" width="0.0144%" height="15" fill="rgb(217,159,45)" fg:x="20237" fg:w="3"/><text x="97.6322%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::FrameResult)&gt;+Output = ()&gt;&gt; (8 samples, 0.04%)</title><rect x="97.3822%" y="1445" width="0.0385%" height="15" fill="rgb(245,165,53)" fg:x="20237" fg:w="8"/><text x="97.6322%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="97.3822%" y="1429" width="0.0385%" height="15" fill="rgb(251,190,50)" fg:x="20237" fg:w="8"/><text x="97.6322%" y="1439.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="97.4015%" y="1413" width="0.0192%" height="15" fill="rgb(208,203,29)" fg:x="20241" fg:w="4"/><text x="97.6515%" y="1423.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.4063%" y="1397" width="0.0144%" height="15" fill="rgb(207,209,35)" fg:x="20242" fg:w="3"/><text x="97.6563%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,alloc::boxed::Box&lt;revm::frame::CallFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = revm_interpreter::call_outcome::CallOutcome&gt;&gt; (4 samples, 0.02%)</title><rect x="97.4207%" y="1445" width="0.0192%" height="15" fill="rgb(230,144,49)" fg:x="20245" fg:w="4"/><text x="97.6707%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="97.4207%" y="1429" width="0.0192%" height="15" fill="rgb(229,31,6)" fg:x="20245" fg:w="4"/><text x="97.6707%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = revm_interpreter::create_outcome::CreateOutcome&gt;&gt; (5 samples, 0.02%)</title><rect x="97.4400%" y="1445" width="0.0241%" height="15" fill="rgb(251,129,24)" fg:x="20249" fg:w="5"/><text x="97.6900%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="97.4400%" y="1429" width="0.0241%" height="15" fill="rgb(235,105,15)" fg:x="20249" fg:w="5"/><text x="97.6900%" y="1439.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="97.4448%" y="1413" width="0.0192%" height="15" fill="rgb(216,52,43)" fg:x="20250" fg:w="4"/><text x="97.6948%" y="1423.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.4496%" y="1397" width="0.0144%" height="15" fill="rgb(238,144,41)" fg:x="20251" fg:w="3"/><text x="97.6996%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,alloc::boxed::Box&lt;revm_interpreter::inner_models::CallInputs&gt;,core::ops::range::Range&lt;usize&gt;)&gt;+Output = revm::frame::FrameOrResult&gt;&gt; (3 samples, 0.01%)</title><rect x="97.4640%" y="1445" width="0.0144%" height="15" fill="rgb(243,63,9)" fg:x="20254" fg:w="3"/><text x="97.7140%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="97.4640%" y="1429" width="0.0144%" height="15" fill="rgb(246,208,1)" fg:x="20254" fg:w="3"/><text x="97.7140%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;&gt; (33 samples, 0.16%)</title><rect x="97.3437%" y="1461" width="0.1588%" height="15" fill="rgb(233,182,18)" fg:x="20229" fg:w="33"/><text x="97.5937%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,alloc::boxed::Box&lt;revm_interpreter::inner_models::CreateInputs&gt;)&gt;+Output = revm::frame::FrameOrResult&gt;&gt; (5 samples, 0.02%)</title><rect x="97.4785%" y="1445" width="0.0241%" height="15" fill="rgb(242,224,8)" fg:x="20257" fg:w="5"/><text x="97.7285%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="97.4785%" y="1429" width="0.0241%" height="15" fill="rgb(243,54,37)" fg:x="20257" fg:w="5"/><text x="97.7285%" y="1439.50"></text></g><g><title>[libc.so.6] (16 samples, 0.08%)</title><rect x="97.5266%" y="1413" width="0.0770%" height="15" fill="rgb(233,192,12)" fg:x="20267" fg:w="16"/><text x="97.7766%" y="1423.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (31 samples, 0.15%)</title><rect x="97.6036%" y="1397" width="0.1492%" height="15" fill="rgb(251,192,53)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (31 samples, 0.15%)</title><rect x="97.6036%" y="1381" width="0.1492%" height="15" fill="rgb(246,141,26)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1391.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (31 samples, 0.15%)</title><rect x="97.6036%" y="1365" width="0.1492%" height="15" fill="rgb(239,195,19)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1375.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.15%)</title><rect x="97.6036%" y="1349" width="0.1492%" height="15" fill="rgb(241,16,39)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.15%)</title><rect x="97.6036%" y="1333" width="0.1492%" height="15" fill="rgb(223,13,53)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.15%)</title><rect x="97.6036%" y="1317" width="0.1492%" height="15" fill="rgb(214,227,0)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.15%)</title><rect x="97.6036%" y="1301" width="0.1492%" height="15" fill="rgb(228,103,26)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1311.50"></text></g><g><title>malloc (31 samples, 0.15%)</title><rect x="97.6036%" y="1285" width="0.1492%" height="15" fill="rgb(254,177,53)" fg:x="20283" fg:w="31"/><text x="97.8536%" y="1295.50"></text></g><g><title>[libc.so.6] (27 samples, 0.13%)</title><rect x="97.6228%" y="1269" width="0.1299%" height="15" fill="rgb(208,201,34)" fg:x="20287" fg:w="27"/><text x="97.8728%" y="1279.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.7383%" y="1253" width="0.0144%" height="15" fill="rgb(212,39,5)" fg:x="20311" fg:w="3"/><text x="97.9883%" y="1263.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (21 samples, 0.10%)</title><rect x="97.7528%" y="1397" width="0.1011%" height="15" fill="rgb(246,117,3)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (21 samples, 0.10%)</title><rect x="97.7528%" y="1381" width="0.1011%" height="15" fill="rgb(244,118,39)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1391.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.10%)</title><rect x="97.7528%" y="1365" width="0.1011%" height="15" fill="rgb(241,64,10)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1375.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.10%)</title><rect x="97.7528%" y="1349" width="0.1011%" height="15" fill="rgb(229,39,44)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.10%)</title><rect x="97.7528%" y="1333" width="0.1011%" height="15" fill="rgb(230,226,3)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.10%)</title><rect x="97.7528%" y="1317" width="0.1011%" height="15" fill="rgb(222,13,42)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.10%)</title><rect x="97.7528%" y="1301" width="0.1011%" height="15" fill="rgb(247,180,54)" fg:x="20314" fg:w="21"/><text x="98.0028%" y="1311.50"></text></g><g><title>malloc (20 samples, 0.10%)</title><rect x="97.7576%" y="1285" width="0.0962%" height="15" fill="rgb(205,96,16)" fg:x="20315" fg:w="20"/><text x="98.0076%" y="1295.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="97.7624%" y="1269" width="0.0914%" height="15" fill="rgb(205,100,21)" fg:x="20316" fg:w="19"/><text x="98.0124%" y="1279.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="97.8201%" y="1253" width="0.0337%" height="15" fill="rgb(248,51,4)" fg:x="20328" fg:w="7"/><text x="98.0701%" y="1263.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (13 samples, 0.06%)</title><rect x="97.8538%" y="1397" width="0.0626%" height="15" fill="rgb(217,197,30)" fg:x="20335" fg:w="13"/><text x="98.1038%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.06%)</title><rect x="97.8586%" y="1381" width="0.0577%" height="15" fill="rgb(240,179,40)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1391.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.06%)</title><rect x="97.8586%" y="1365" width="0.0577%" height="15" fill="rgb(212,185,35)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1375.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.06%)</title><rect x="97.8586%" y="1349" width="0.0577%" height="15" fill="rgb(251,222,31)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.06%)</title><rect x="97.8586%" y="1333" width="0.0577%" height="15" fill="rgb(208,140,36)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.06%)</title><rect x="97.8586%" y="1317" width="0.0577%" height="15" fill="rgb(220,148,1)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.06%)</title><rect x="97.8586%" y="1301" width="0.0577%" height="15" fill="rgb(254,4,28)" fg:x="20336" fg:w="12"/><text x="98.1086%" y="1311.50"></text></g><g><title>malloc (11 samples, 0.05%)</title><rect x="97.8634%" y="1285" width="0.0529%" height="15" fill="rgb(222,185,44)" fg:x="20337" fg:w="11"/><text x="98.1134%" y="1295.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="97.8682%" y="1269" width="0.0481%" height="15" fill="rgb(215,74,39)" fg:x="20338" fg:w="10"/><text x="98.1182%" y="1279.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="97.9019%" y="1253" width="0.0144%" height="15" fill="rgb(247,86,4)" fg:x="20345" fg:w="3"/><text x="98.1519%" y="1263.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (15 samples, 0.07%)</title><rect x="97.9164%" y="1397" width="0.0722%" height="15" fill="rgb(231,105,32)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="97.9164%" y="1381" width="0.0722%" height="15" fill="rgb(222,65,35)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1391.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="97.9164%" y="1365" width="0.0722%" height="15" fill="rgb(218,145,35)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1375.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.07%)</title><rect x="97.9164%" y="1349" width="0.0722%" height="15" fill="rgb(208,7,15)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.07%)</title><rect x="97.9164%" y="1333" width="0.0722%" height="15" fill="rgb(209,83,13)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="97.9164%" y="1317" width="0.0722%" height="15" fill="rgb(218,3,10)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="97.9164%" y="1301" width="0.0722%" height="15" fill="rgb(211,219,4)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1311.50"></text></g><g><title>malloc (15 samples, 0.07%)</title><rect x="97.9164%" y="1285" width="0.0722%" height="15" fill="rgb(228,194,12)" fg:x="20348" fg:w="15"/><text x="98.1664%" y="1295.50"></text></g><g><title>[libc.so.6] (13 samples, 0.06%)</title><rect x="97.9260%" y="1269" width="0.0626%" height="15" fill="rgb(210,175,7)" fg:x="20350" fg:w="13"/><text x="98.1760%" y="1279.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="97.9693%" y="1253" width="0.0192%" height="15" fill="rgb(243,132,6)" fg:x="20359" fg:w="4"/><text x="98.2193%" y="1263.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="97.9885%" y="1349" width="0.0337%" height="15" fill="rgb(207,72,18)" fg:x="20363" fg:w="7"/><text x="98.2385%" y="1359.50"></text></g><g><title>revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,EXT,DB&gt;::with_db (250 samples, 1.20%)</title><rect x="97.0213%" y="1477" width="1.2030%" height="15" fill="rgb(236,1,18)" fg:x="20162" fg:w="250"/><text x="97.2713%" y="1487.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (149 samples, 0.72%)</title><rect x="97.5073%" y="1461" width="0.7170%" height="15" fill="rgb(227,0,18)" fg:x="20263" fg:w="149"/><text x="97.7573%" y="1471.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::new (149 samples, 0.72%)</title><rect x="97.5073%" y="1445" width="0.7170%" height="15" fill="rgb(247,37,5)" fg:x="20263" fg:w="149"/><text x="97.7573%" y="1455.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (149 samples, 0.72%)</title><rect x="97.5073%" y="1429" width="0.7170%" height="15" fill="rgb(237,179,24)" fg:x="20263" fg:w="149"/><text x="97.7573%" y="1439.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (129 samples, 0.62%)</title><rect x="97.6036%" y="1413" width="0.6208%" height="15" fill="rgb(226,53,20)" fg:x="20283" fg:w="129"/><text x="97.8536%" y="1423.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table (49 samples, 0.24%)</title><rect x="97.9885%" y="1397" width="0.2358%" height="15" fill="rgb(247,75,7)" fg:x="20363" fg:w="49"/><text x="98.2385%" y="1407.50"></text></g><g><title>core::array::from_fn (49 samples, 0.24%)</title><rect x="97.9885%" y="1381" width="0.2358%" height="15" fill="rgb(233,96,12)" fg:x="20363" fg:w="49"/><text x="98.2385%" y="1391.50"></text></g><g><title>core::array::try_from_fn (49 samples, 0.24%)</title><rect x="97.9885%" y="1365" width="0.2358%" height="15" fill="rgb(224,125,0)" fg:x="20363" fg:w="49"/><text x="98.2385%" y="1375.50"></text></g><g><title>core::array::try_from_fn_erased (42 samples, 0.20%)</title><rect x="98.0222%" y="1349" width="0.2021%" height="15" fill="rgb(224,92,25)" fg:x="20370" fg:w="42"/><text x="98.2722%" y="1359.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (42 samples, 0.20%)</title><rect x="98.0222%" y="1333" width="0.2021%" height="15" fill="rgb(224,42,24)" fg:x="20370" fg:w="42"/><text x="98.2722%" y="1343.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table::{{closure}} (42 samples, 0.20%)</title><rect x="98.0222%" y="1317" width="0.2021%" height="15" fill="rgb(234,132,49)" fg:x="20370" fg:w="42"/><text x="98.2722%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::opcode::instruction (42 samples, 0.20%)</title><rect x="98.0222%" y="1301" width="0.2021%" height="15" fill="rgb(248,100,35)" fg:x="20370" fg:w="42"/><text x="98.2722%" y="1311.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="98.2340%" y="1445" width="0.0914%" height="15" fill="rgb(239,94,40)" fg:x="20414" fg:w="19"/><text x="98.4840%" y="1455.50"></text></g><g><title>[libc.so.6] (19 samples, 0.09%)</title><rect x="98.3350%" y="1397" width="0.0914%" height="15" fill="rgb(235,139,28)" fg:x="20435" fg:w="19"/><text x="98.5850%" y="1407.50"></text></g><g><title>revm::handler::handle_types::execution::ExecutionHandler&lt;EXT,DB&gt;::new (37 samples, 0.18%)</title><rect x="98.4264%" y="1381" width="0.1780%" height="15" fill="rgb(217,144,7)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1391.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (37 samples, 0.18%)</title><rect x="98.4264%" y="1365" width="0.1780%" height="15" fill="rgb(227,55,4)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1375.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.18%)</title><rect x="98.4264%" y="1349" width="0.1780%" height="15" fill="rgb(252,82,54)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1359.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.18%)</title><rect x="98.4264%" y="1333" width="0.1780%" height="15" fill="rgb(245,172,4)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.18%)</title><rect x="98.4264%" y="1317" width="0.1780%" height="15" fill="rgb(207,26,27)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.18%)</title><rect x="98.4264%" y="1301" width="0.1780%" height="15" fill="rgb(252,98,18)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.18%)</title><rect x="98.4264%" y="1285" width="0.1780%" height="15" fill="rgb(244,8,26)" fg:x="20454" fg:w="37"/><text x="98.6764%" y="1295.50"></text></g><g><title>malloc (36 samples, 0.17%)</title><rect x="98.4313%" y="1269" width="0.1732%" height="15" fill="rgb(237,173,45)" fg:x="20455" fg:w="36"/><text x="98.6813%" y="1279.50"></text></g><g><title>[libc.so.6] (30 samples, 0.14%)</title><rect x="98.4601%" y="1253" width="0.1444%" height="15" fill="rgb(208,213,49)" fg:x="20461" fg:w="30"/><text x="98.7101%" y="1263.50"></text></g><g><title>[libc.so.6] (8 samples, 0.04%)</title><rect x="98.5660%" y="1237" width="0.0385%" height="15" fill="rgb(212,122,37)" fg:x="20483" fg:w="8"/><text x="98.8160%" y="1247.50"></text></g><g><title>revm::handler::handle_types::post_execution::PostExecutionHandler&lt;EXT,DB&gt;::new (16 samples, 0.08%)</title><rect x="98.6045%" y="1381" width="0.0770%" height="15" fill="rgb(213,80,17)" fg:x="20491" fg:w="16"/><text x="98.8545%" y="1391.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="98.6093%" y="1365" width="0.0722%" height="15" fill="rgb(206,210,43)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1375.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="98.6093%" y="1349" width="0.0722%" height="15" fill="rgb(229,214,3)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1359.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.07%)</title><rect x="98.6093%" y="1333" width="0.0722%" height="15" fill="rgb(235,213,29)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.07%)</title><rect x="98.6093%" y="1317" width="0.0722%" height="15" fill="rgb(248,135,26)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="98.6093%" y="1301" width="0.0722%" height="15" fill="rgb(242,188,12)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="98.6093%" y="1285" width="0.0722%" height="15" fill="rgb(245,38,12)" fg:x="20492" fg:w="15"/><text x="98.8593%" y="1295.50"></text></g><g><title>malloc (14 samples, 0.07%)</title><rect x="98.6141%" y="1269" width="0.0674%" height="15" fill="rgb(218,42,13)" fg:x="20493" fg:w="14"/><text x="98.8641%" y="1279.50"></text></g><g><title>[libc.so.6] (10 samples, 0.05%)</title><rect x="98.6334%" y="1253" width="0.0481%" height="15" fill="rgb(238,132,49)" fg:x="20497" fg:w="10"/><text x="98.8834%" y="1263.50"></text></g><g><title>revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;EXT,DB&gt;::new (18 samples, 0.09%)</title><rect x="98.6815%" y="1381" width="0.0866%" height="15" fill="rgb(209,196,19)" fg:x="20507" fg:w="18"/><text x="98.9315%" y="1391.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (16 samples, 0.08%)</title><rect x="98.6911%" y="1365" width="0.0770%" height="15" fill="rgb(244,131,22)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1375.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.08%)</title><rect x="98.6911%" y="1349" width="0.0770%" height="15" fill="rgb(223,18,34)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1359.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.08%)</title><rect x="98.6911%" y="1333" width="0.0770%" height="15" fill="rgb(252,124,54)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.08%)</title><rect x="98.6911%" y="1317" width="0.0770%" height="15" fill="rgb(229,106,42)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.08%)</title><rect x="98.6911%" y="1301" width="0.0770%" height="15" fill="rgb(221,129,1)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.08%)</title><rect x="98.6911%" y="1285" width="0.0770%" height="15" fill="rgb(229,74,15)" fg:x="20509" fg:w="16"/><text x="98.9411%" y="1295.50"></text></g><g><title>malloc (15 samples, 0.07%)</title><rect x="98.6959%" y="1269" width="0.0722%" height="15" fill="rgb(210,206,50)" fg:x="20510" fg:w="15"/><text x="98.9459%" y="1279.50"></text></g><g><title>[libc.so.6] (14 samples, 0.07%)</title><rect x="98.7007%" y="1253" width="0.0674%" height="15" fill="rgb(251,114,31)" fg:x="20511" fg:w="14"/><text x="98.9507%" y="1263.50"></text></g><g><title>revm::handler::handle_types::validation::ValidationHandler&lt;EXT,DB&gt;::new (15 samples, 0.07%)</title><rect x="98.7681%" y="1381" width="0.0722%" height="15" fill="rgb(215,225,28)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1391.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="98.7681%" y="1365" width="0.0722%" height="15" fill="rgb(237,109,14)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1375.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.07%)</title><rect x="98.7681%" y="1349" width="0.0722%" height="15" fill="rgb(230,13,37)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1359.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.07%)</title><rect x="98.7681%" y="1333" width="0.0722%" height="15" fill="rgb(231,40,28)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.07%)</title><rect x="98.7681%" y="1317" width="0.0722%" height="15" fill="rgb(231,202,18)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="98.7681%" y="1301" width="0.0722%" height="15" fill="rgb(225,33,18)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="98.7681%" y="1285" width="0.0722%" height="15" fill="rgb(223,64,47)" fg:x="20525" fg:w="15"/><text x="99.0181%" y="1295.50"></text></g><g><title>malloc (14 samples, 0.07%)</title><rect x="98.7729%" y="1269" width="0.0674%" height="15" fill="rgb(234,114,13)" fg:x="20526" fg:w="14"/><text x="99.0229%" y="1279.50"></text></g><g><title>[libc.so.6] (12 samples, 0.06%)</title><rect x="98.7825%" y="1253" width="0.0577%" height="15" fill="rgb(248,56,40)" fg:x="20528" fg:w="12"/><text x="99.0325%" y="1263.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="98.8259%" y="1237" width="0.0144%" height="15" fill="rgb(221,194,21)" fg:x="20537" fg:w="3"/><text x="99.0759%" y="1247.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="98.8403%" y="1333" width="0.0289%" height="15" fill="rgb(242,108,46)" fg:x="20540" fg:w="6"/><text x="99.0903%" y="1343.50"></text></g><g><title>revm::builder::EvmBuilder&lt;BuilderStage,EXT,DB&gt;::handler (154 samples, 0.74%)</title><rect x="98.3254%" y="1445" width="0.7411%" height="15" fill="rgb(220,106,10)" fg:x="20433" fg:w="154"/><text x="98.5754%" y="1455.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::new (154 samples, 0.74%)</title><rect x="98.3254%" y="1429" width="0.7411%" height="15" fill="rgb(211,88,4)" fg:x="20433" fg:w="154"/><text x="98.5754%" y="1439.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet_with_spec (154 samples, 0.74%)</title><rect x="98.3254%" y="1413" width="0.7411%" height="15" fill="rgb(214,95,34)" fg:x="20433" fg:w="154"/><text x="98.5754%" y="1423.50"></text></g><g><title>revm::handler::Handler&lt;revm::evm::Evm&lt;EXT,DB&gt;,EXT,DB&gt;::mainnet (133 samples, 0.64%)</title><rect x="98.4264%" y="1397" width="0.6400%" height="15" fill="rgb(250,160,33)" fg:x="20454" fg:w="133"/><text x="98.6764%" y="1407.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table (47 samples, 0.23%)</title><rect x="98.8403%" y="1381" width="0.2262%" height="15" fill="rgb(225,29,10)" fg:x="20540" fg:w="47"/><text x="99.0903%" y="1391.50"></text></g><g><title>core::array::from_fn (47 samples, 0.23%)</title><rect x="98.8403%" y="1365" width="0.2262%" height="15" fill="rgb(224,28,30)" fg:x="20540" fg:w="47"/><text x="99.0903%" y="1375.50"></text></g><g><title>core::array::try_from_fn (47 samples, 0.23%)</title><rect x="98.8403%" y="1349" width="0.2262%" height="15" fill="rgb(231,77,4)" fg:x="20540" fg:w="47"/><text x="99.0903%" y="1359.50"></text></g><g><title>core::array::try_from_fn_erased (41 samples, 0.20%)</title><rect x="98.8692%" y="1333" width="0.1973%" height="15" fill="rgb(209,63,21)" fg:x="20546" fg:w="41"/><text x="99.1192%" y="1343.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (38 samples, 0.18%)</title><rect x="98.8836%" y="1317" width="0.1829%" height="15" fill="rgb(226,22,11)" fg:x="20549" fg:w="38"/><text x="99.1336%" y="1327.50"></text></g><g><title>revm_interpreter::instructions::opcode::make_instruction_table::{{closure}} (38 samples, 0.18%)</title><rect x="98.8836%" y="1301" width="0.1829%" height="15" fill="rgb(216,82,30)" fg:x="20549" fg:w="38"/><text x="99.1336%" y="1311.50"></text></g><g><title>revm_interpreter::instructions::opcode::instruction (38 samples, 0.18%)</title><rect x="98.8836%" y="1285" width="0.1829%" height="15" fill="rgb(246,227,38)" fg:x="20549" fg:w="38"/><text x="99.1336%" y="1295.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.0761%" y="1397" width="0.0144%" height="15" fill="rgb(251,203,53)" fg:x="20589" fg:w="3"/><text x="99.3261%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (5 samples, 0.02%)</title><rect x="99.0761%" y="1429" width="0.0241%" height="15" fill="rgb(254,101,1)" fg:x="20589" fg:w="5"/><text x="99.3261%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="99.0761%" y="1413" width="0.0241%" height="15" fill="rgb(241,180,5)" fg:x="20589" fg:w="5"/><text x="99.3261%" y="1423.50"></text></g><g><title>revm::evm::Evm&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;::builder (190 samples, 0.91%)</title><rect x="98.2243%" y="1477" width="0.9143%" height="15" fill="rgb(218,168,4)" fg:x="20412" fg:w="190"/><text x="98.4743%" y="1487.50"></text></g><g><title>&lt;revm::builder::EvmBuilder&lt;revm::builder::SetGenericStage,(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt; as core::default::Default&gt;::default (188 samples, 0.90%)</title><rect x="98.2340%" y="1461" width="0.9047%" height="15" fill="rgb(224,223,32)" fg:x="20414" fg:w="188"/><text x="98.4840%" y="1471.50"></text></g><g><title>revm::context::EvmContext&lt;DB&gt;::new (15 samples, 0.07%)</title><rect x="99.0665%" y="1445" width="0.0722%" height="15" fill="rgb(236,106,22)" fg:x="20587" fg:w="15"/><text x="99.3165%" y="1455.50"></text></g><g><title>revm::journaled_state::JournaledState::new (8 samples, 0.04%)</title><rect x="99.1001%" y="1429" width="0.0385%" height="15" fill="rgb(206,121,5)" fg:x="20594" fg:w="8"/><text x="99.3501%" y="1439.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="99.1146%" y="1413" width="0.0241%" height="15" fill="rgb(233,87,28)" fg:x="20597" fg:w="5"/><text x="99.3646%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="99.1146%" y="1397" width="0.0241%" height="15" fill="rgb(236,137,17)" fg:x="20597" fg:w="5"/><text x="99.3646%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="99.1146%" y="1381" width="0.0241%" height="15" fill="rgb(209,183,38)" fg:x="20597" fg:w="5"/><text x="99.3646%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="99.1146%" y="1365" width="0.0241%" height="15" fill="rgb(206,162,44)" fg:x="20597" fg:w="5"/><text x="99.3646%" y="1375.50"></text></g><g><title>malloc (4 samples, 0.02%)</title><rect x="99.1194%" y="1349" width="0.0192%" height="15" fill="rgb(237,70,39)" fg:x="20598" fg:w="4"/><text x="99.3694%" y="1359.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.1242%" y="1333" width="0.0144%" height="15" fill="rgb(212,176,5)" fg:x="20599" fg:w="3"/><text x="99.3742%" y="1343.50"></text></g><g><title>server::evm::get_evm (795 samples, 3.83%)</title><rect x="95.3227%" y="1493" width="3.8256%" height="15" fill="rgb(232,95,16)" fg:x="19809" fg:w="795"/><text x="95.5727%" y="1503.50">serv..</text></g><g><title>bytes::bytes::shallow_clone_arc (6 samples, 0.03%)</title><rect x="99.1771%" y="1413" width="0.0289%" height="15" fill="rgb(219,115,35)" fg:x="20610" fg:w="6"/><text x="99.4271%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.03%)</title><rect x="99.1771%" y="1397" width="0.0289%" height="15" fill="rgb(251,67,27)" fg:x="20610" fg:w="6"/><text x="99.4271%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.03%)</title><rect x="99.1771%" y="1381" width="0.0289%" height="15" fill="rgb(222,95,40)" fg:x="20610" fg:w="6"/><text x="99.4271%" y="1391.50"></text></g><g><title>__aarch64_ldadd8_relax (6 samples, 0.03%)</title><rect x="99.1771%" y="1365" width="0.0289%" height="15" fill="rgb(250,35,16)" fg:x="20610" fg:w="6"/><text x="99.4271%" y="1375.50"></text></g><g><title>&lt;alloy_primitives::bytes_::Bytes as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="99.1723%" y="1461" width="0.0385%" height="15" fill="rgb(224,86,44)" fg:x="20609" fg:w="8"/><text x="99.4223%" y="1471.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (8 samples, 0.04%)</title><rect x="99.1723%" y="1445" width="0.0385%" height="15" fill="rgb(237,53,53)" fg:x="20609" fg:w="8"/><text x="99.4223%" y="1455.50"></text></g><g><title>bytes::bytes::shared_clone (8 samples, 0.04%)</title><rect x="99.1723%" y="1429" width="0.0385%" height="15" fill="rgb(208,171,33)" fg:x="20609" fg:w="8"/><text x="99.4223%" y="1439.50"></text></g><g><title>[libc.so.6] (41 samples, 0.20%)</title><rect x="99.2156%" y="1461" width="0.1973%" height="15" fill="rgb(222,64,27)" fg:x="20618" fg:w="41"/><text x="99.4656%" y="1471.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="99.4129%" y="1461" width="0.0192%" height="15" fill="rgb(221,121,35)" fg:x="20659" fg:w="4"/><text x="99.6629%" y="1471.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="99.4129%" y="1445" width="0.0192%" height="15" fill="rgb(228,137,42)" fg:x="20659" fg:w="4"/><text x="99.6629%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="99.4129%" y="1429" width="0.0192%" height="15" fill="rgb(227,54,21)" fg:x="20659" fg:w="4"/><text x="99.6629%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="99.4129%" y="1413" width="0.0192%" height="15" fill="rgb(240,168,33)" fg:x="20659" fg:w="4"/><text x="99.6629%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.01%)</title><rect x="99.4177%" y="1397" width="0.0144%" height="15" fill="rgb(243,159,6)" fg:x="20660" fg:w="3"/><text x="99.6677%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.01%)</title><rect x="99.4177%" y="1381" width="0.0144%" height="15" fill="rgb(205,211,41)" fg:x="20660" fg:w="3"/><text x="99.6677%" y="1391.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="99.4177%" y="1365" width="0.0144%" height="15" fill="rgb(253,30,1)" fg:x="20660" fg:w="3"/><text x="99.6677%" y="1375.50"></text></g><g><title>&lt;db::DB as core::default::Default&gt;::default (4 samples, 0.02%)</title><rect x="99.4322%" y="1445" width="0.0192%" height="15" fill="rgb(226,80,18)" fg:x="20663" fg:w="4"/><text x="99.6822%" y="1455.50"></text></g><g><title>core::mem::take (7 samples, 0.03%)</title><rect x="99.4322%" y="1461" width="0.0337%" height="15" fill="rgb(253,156,46)" fg:x="20663" fg:w="7"/><text x="99.6822%" y="1471.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="99.4514%" y="1445" width="0.0144%" height="15" fill="rgb(248,87,27)" fg:x="20667" fg:w="3"/><text x="99.7014%" y="1455.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.02%)</title><rect x="99.4707%" y="1317" width="0.0241%" height="15" fill="rgb(227,122,2)" fg:x="20671" fg:w="5"/><text x="99.7207%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitvec::vec::BitVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="99.4803%" y="1301" width="0.0144%" height="15" fill="rgb(229,94,39)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1311.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop (3 samples, 0.01%)</title><rect x="99.4803%" y="1285" width="0.0144%" height="15" fill="rgb(225,173,31)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1295.50"></text></g><g><title>bitvec::vec::BitVec&lt;T,O&gt;::with_vec (3 samples, 0.01%)</title><rect x="99.4803%" y="1269" width="0.0144%" height="15" fill="rgb(239,176,30)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1279.50"></text></g><g><title>bitvec::vec::ops::&lt;impl core::ops::drop::Drop for bitvec::vec::BitVec&lt;T,O&gt;&gt;::drop::{{closure}} (3 samples, 0.01%)</title><rect x="99.4803%" y="1253" width="0.0144%" height="15" fill="rgb(212,104,21)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1263.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::drop (3 samples, 0.01%)</title><rect x="99.4803%" y="1237" width="0.0144%" height="15" fill="rgb(240,209,40)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="99.4803%" y="1221" width="0.0144%" height="15" fill="rgb(234,195,5)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="99.4803%" y="1205" width="0.0144%" height="15" fill="rgb(238,213,1)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.4803%" y="1189" width="0.0144%" height="15" fill="rgb(235,182,54)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="99.4803%" y="1173" width="0.0144%" height="15" fill="rgb(229,50,46)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="99.4803%" y="1157" width="0.0144%" height="15" fill="rgb(219,145,13)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1167.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="99.4803%" y="1141" width="0.0144%" height="15" fill="rgb(220,226,10)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1151.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.4803%" y="1125" width="0.0144%" height="15" fill="rgb(248,47,30)" fg:x="20673" fg:w="3"/><text x="99.7303%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.03%)</title><rect x="99.4659%" y="1461" width="0.0337%" height="15" fill="rgb(231,209,44)" fg:x="20670" fg:w="7"/><text x="99.7159%" y="1471.50"></text></g><g><title>server::add_tx_to_block_wo_mutex::{{closure}} (6 samples, 0.03%)</title><rect x="99.4707%" y="1445" width="0.0289%" height="15" fill="rgb(209,80,30)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::state::AccountInfo&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1429" width="0.0289%" height="15" fill="rgb(232,9,14)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;revm_primitives::bytecode::Bytecode&gt;&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1413" width="0.0289%" height="15" fill="rgb(243,91,43)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::Bytecode&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1397" width="0.0289%" height="15" fill="rgb(231,90,52)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::BytecodeState&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1381" width="0.0289%" height="15" fill="rgb(253,192,44)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_primitives::bytecode::JumpMap&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1365" width="0.0289%" height="15" fill="rgb(241,66,31)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bitvec::vec::BitVec&lt;u8&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="99.4707%" y="1349" width="0.0289%" height="15" fill="rgb(235,81,37)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="99.4707%" y="1333" width="0.0289%" height="15" fill="rgb(223,221,9)" fg:x="20671" fg:w="6"/><text x="99.7207%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;revm_primitives::env::Env&gt;&gt; (3 samples, 0.01%)</title><rect x="99.4995%" y="1461" width="0.0144%" height="15" fill="rgb(242,180,7)" fg:x="20677" fg:w="3"/><text x="99.7495%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;db::DB&gt; (4 samples, 0.02%)</title><rect x="99.5140%" y="1461" width="0.0192%" height="15" fill="rgb(243,78,19)" fg:x="20680" fg:w="4"/><text x="99.7640%" y="1471.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="99.5332%" y="1429" width="0.0144%" height="15" fill="rgb(233,23,17)" fg:x="20684" fg:w="3"/><text x="99.7832%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),revm::db::emptydb::EmptyDBTyped&lt;core::convert::Infallible&gt;&gt;,&amp;mut revm::frame::Frame,revm_interpreter::create_outcome::CreateOutcome)&gt;+Output = (),&amp;alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="99.5332%" y="1413" width="0.0144%" height="15" fill="rgb(252,122,45)" fg:x="20684" fg:w="3"/><text x="99.7832%" y="1423.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.5332%" y="1397" width="0.0144%" height="15" fill="rgb(247,108,20)" fg:x="20684" fg:w="3"/><text x="99.7832%" y="1407.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="99.5332%" y="1445" width="0.0192%" height="15" fill="rgb(235,84,21)" fg:x="20684" fg:w="4"/><text x="99.7832%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;revm_interpreter::gas::Gas)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="99.5525%" y="1429" width="0.0337%" height="15" fill="rgb(247,129,10)" fg:x="20688" fg:w="7"/><text x="99.8025%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="99.5525%" y="1413" width="0.0337%" height="15" fill="rgb(208,173,14)" fg:x="20688" fg:w="7"/><text x="99.8025%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="99.5669%" y="1397" width="0.0192%" height="15" fill="rgb(236,31,38)" fg:x="20691" fg:w="4"/><text x="99.8169%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="99.5669%" y="1381" width="0.0192%" height="15" fill="rgb(232,65,17)" fg:x="20691" fg:w="4"/><text x="99.8169%" y="1391.50"></text></g><g><title>__aarch64_ldadd8_rel (3 samples, 0.01%)</title><rect x="99.5717%" y="1365" width="0.0144%" height="15" fill="rgb(224,45,49)" fg:x="20692" fg:w="3"/><text x="99.8217%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::post_execution::PostExecutionHandler&lt;(),db::DB&gt;&gt; (9 samples, 0.04%)</title><rect x="99.5525%" y="1445" width="0.0433%" height="15" fill="rgb(225,2,53)" fg:x="20688" fg:w="9"/><text x="99.8025%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="99.5958%" y="1429" width="0.0241%" height="15" fill="rgb(248,210,53)" fg:x="20697" fg:w="5"/><text x="99.8458%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.5958%" y="1413" width="0.0241%" height="15" fill="rgb(211,1,30)" fg:x="20697" fg:w="5"/><text x="99.8458%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::pre_execution::PreExecutionHandler&lt;(),db::DB&gt;&gt; (8 samples, 0.04%)</title><rect x="99.5958%" y="1445" width="0.0385%" height="15" fill="rgb(224,96,15)" fg:x="20697" fg:w="8"/><text x="99.8458%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = revm_precompile::Precompiles&gt;&gt; (3 samples, 0.01%)</title><rect x="99.6198%" y="1429" width="0.0144%" height="15" fill="rgb(252,45,11)" fg:x="20702" fg:w="3"/><text x="99.8698%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.6198%" y="1413" width="0.0144%" height="15" fill="rgb(220,125,38)" fg:x="20702" fg:w="3"/><text x="99.8698%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,)&gt;+Output = core::result::Result&lt;(),revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="99.6391%" y="1429" width="0.0144%" height="15" fill="rgb(243,161,33)" fg:x="20706" fg:w="3"/><text x="99.8891%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.6391%" y="1413" width="0.0144%" height="15" fill="rgb(248,197,34)" fg:x="20706" fg:w="3"/><text x="99.8891%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="99.6680%" y="1397" width="0.0192%" height="15" fill="rgb(228,165,23)" fg:x="20712" fg:w="4"/><text x="99.9180%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::validation::ValidationHandler&lt;(),db::DB&gt;&gt; (12 samples, 0.06%)</title><rect x="99.6343%" y="1445" width="0.0577%" height="15" fill="rgb(236,94,38)" fg:x="20705" fg:w="12"/><text x="99.8843%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;revm_primitives::env::Env,)&gt;+Output = core::result::Result&lt;u64,revm_primitives::result::EVMError&lt;alloc::boxed::Box&lt;dyn core::error::Error&gt;&gt;&gt;&gt;&gt; (8 samples, 0.04%)</title><rect x="99.6535%" y="1429" width="0.0385%" height="15" fill="rgb(220,13,23)" fg:x="20709" fg:w="8"/><text x="99.9035%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="99.6535%" y="1413" width="0.0385%" height="15" fill="rgb(234,26,39)" fg:x="20709" fg:w="8"/><text x="99.9035%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::Handler&lt;revm::evm::Evm&lt;(),db::DB&gt;,(),db::DB&gt;&gt; (39 samples, 0.19%)</title><rect x="99.5332%" y="1461" width="0.1877%" height="15" fill="rgb(205,117,44)" fg:x="20684" fg:w="39"/><text x="99.7832%" y="1471.50"></text></g><g><title>free (6 samples, 0.03%)</title><rect x="99.6920%" y="1445" width="0.0289%" height="15" fill="rgb(250,42,2)" fg:x="20717" fg:w="6"/><text x="99.9420%" y="1455.50"></text></g><g><title>[libc.so.6] (6 samples, 0.03%)</title><rect x="99.6920%" y="1429" width="0.0289%" height="15" fill="rgb(223,83,14)" fg:x="20717" fg:w="6"/><text x="99.9420%" y="1439.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="99.7017%" y="1413" width="0.0192%" height="15" fill="rgb(241,147,50)" fg:x="20719" fg:w="4"/><text x="99.9517%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;mut revm::frame::Frame,&amp;mut revm_interpreter::interpreter::shared_memory::SharedMemory,revm_interpreter::call_outcome::CallOutcome)&gt;+Output = ()&gt;&gt; (5 samples, 0.02%)</title><rect x="99.7257%" y="1445" width="0.0241%" height="15" fill="rgb(218,90,6)" fg:x="20724" fg:w="5"/><text x="99.9757%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.7257%" y="1429" width="0.0241%" height="15" fill="rgb(210,191,5)" fg:x="20724" fg:w="5"/><text x="99.9757%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,&amp;mut revm::frame::FrameResult)&gt;+Output = ()&gt;&gt; (3 samples, 0.01%)</title><rect x="99.7594%" y="1445" width="0.0144%" height="15" fill="rgb(225,139,19)" fg:x="20731" fg:w="3"/><text x="100.0094%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.7594%" y="1429" width="0.0144%" height="15" fill="rgb(210,1,33)" fg:x="20731" fg:w="3"/><text x="100.0094%" y="1439.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="99.7594%" y="1413" width="0.0144%" height="15" fill="rgb(213,50,3)" fg:x="20731" fg:w="3"/><text x="100.0094%" y="1423.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.7594%" y="1397" width="0.0144%" height="15" fill="rgb(234,227,4)" fg:x="20731" fg:w="3"/><text x="100.0094%" y="1407.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.7594%" y="1381" width="0.0144%" height="15" fill="rgb(246,63,5)" fg:x="20731" fg:w="3"/><text x="100.0094%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm::frame::CreateFrame&gt;,revm_interpreter::interpreter::InterpreterResult)&gt;+Output = revm_interpreter::create_outcome::CreateOutcome&gt;&gt; (4 samples, 0.02%)</title><rect x="99.7738%" y="1445" width="0.0192%" height="15" fill="rgb(245,136,27)" fg:x="20734" fg:w="4"/><text x="100.0238%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="99.7738%" y="1429" width="0.0192%" height="15" fill="rgb(247,199,27)" fg:x="20734" fg:w="4"/><text x="100.0238%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::ops::function::Fn&lt;(&amp;mut revm::context::Context&lt;(),db::DB&gt;,alloc::boxed::Box&lt;revm_interpreter::inner_models::CallInputs&gt;,core::ops::range::Range&lt;usize&gt;)&gt;+Output = revm::frame::FrameOrResult&gt;&gt; (5 samples, 0.02%)</title><rect x="99.7931%" y="1445" width="0.0241%" height="15" fill="rgb(252,158,49)" fg:x="20738" fg:w="5"/><text x="100.0431%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.7931%" y="1429" width="0.0241%" height="15" fill="rgb(254,73,1)" fg:x="20738" fg:w="5"/><text x="100.0431%" y="1439.50"></text></g><g><title>free (3 samples, 0.01%)</title><rect x="99.8027%" y="1413" width="0.0144%" height="15" fill="rgb(248,93,19)" fg:x="20740" fg:w="3"/><text x="100.0527%" y="1423.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="99.8027%" y="1397" width="0.0144%" height="15" fill="rgb(206,67,5)" fg:x="20740" fg:w="3"/><text x="100.0527%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::handler::handle_types::execution::ExecutionHandler&lt;(),db::DB&gt;&gt; (21 samples, 0.10%)</title><rect x="99.7209%" y="1461" width="0.1011%" height="15" fill="rgb(209,210,4)" fg:x="20723" fg:w="21"/><text x="99.9709%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm::journaled_state::JournaledState&gt; (5 samples, 0.02%)</title><rect x="99.8220%" y="1461" width="0.0241%" height="15" fill="rgb(214,185,36)" fg:x="20744" fg:w="5"/><text x="100.0720%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;revm_precompile::Precompiles&gt; (3 samples, 0.01%)</title><rect x="99.8460%" y="1461" width="0.0144%" height="15" fill="rgb(233,191,26)" fg:x="20749" fg:w="3"/><text x="100.0960%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloy_primitives::bits::address::Address,revm_precompile::Precompile&gt;&gt; (3 samples, 0.01%)</title><rect x="99.8460%" y="1445" width="0.0144%" height="15" fill="rgb(248,94,17)" fg:x="20749" fg:w="3"/><text x="100.0960%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloy_primitives::bits::address::Address,revm_precompile::Precompile)&gt;&gt; (3 samples, 0.01%)</title><rect x="99.8460%" y="1429" width="0.0144%" height="15" fill="rgb(250,64,4)" fg:x="20749" fg:w="3"/><text x="100.0960%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="99.8460%" y="1413" width="0.0144%" height="15" fill="rgb(218,41,53)" fg:x="20749" fg:w="3"/><text x="100.0960%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.01%)</title><rect x="99.8460%" y="1397" width="0.0144%" height="15" fill="rgb(251,176,28)" fg:x="20749" fg:w="3"/><text x="100.0960%" y="1407.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.01%)</title><rect x="99.8604%" y="1461" width="0.0144%" height="15" fill="rgb(247,22,9)" fg:x="20752" fg:w="3"/><text x="100.1104%" y="1471.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.01%)</title><rect x="99.8749%" y="1461" width="0.0144%" height="15" fill="rgb(218,201,14)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1471.50"></text></g><g><title>&lt;alloy_primitives::bits::address::Address as core::str::traits::FromStr&gt;::from_str (3 samples, 0.01%)</title><rect x="99.8749%" y="1445" width="0.0144%" height="15" fill="rgb(218,94,10)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1455.50"></text></g><g><title>&lt;alloy_primitives::bits::fixed::FixedBytes&lt;_&gt; as core::str::traits::FromStr&gt;::from_str (3 samples, 0.01%)</title><rect x="99.8749%" y="1429" width="0.0144%" height="15" fill="rgb(222,183,52)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1439.50"></text></g><g><title>const_hex::decode_to_slice (3 samples, 0.01%)</title><rect x="99.8749%" y="1413" width="0.0144%" height="15" fill="rgb(242,140,25)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1423.50"></text></g><g><title>const_hex::decode_to_slice_inner (3 samples, 0.01%)</title><rect x="99.8749%" y="1397" width="0.0144%" height="15" fill="rgb(235,197,38)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1407.50"></text></g><g><title>const_hex::decode_checked (3 samples, 0.01%)</title><rect x="99.8749%" y="1381" width="0.0144%" height="15" fill="rgb(237,136,15)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1391.50"></text></g><g><title>const_hex::arch::generic::decode_checked (3 samples, 0.01%)</title><rect x="99.8749%" y="1365" width="0.0144%" height="15" fill="rgb(223,44,49)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1375.50"></text></g><g><title>const_hex::arch::generic::decode_maybe_check (3 samples, 0.01%)</title><rect x="99.8749%" y="1349" width="0.0144%" height="15" fill="rgb(227,71,15)" fg:x="20755" fg:w="3"/><text x="100.1249%" y="1359.50"></text></g><g><title>free (4 samples, 0.02%)</title><rect x="99.8893%" y="1461" width="0.0192%" height="15" fill="rgb(225,153,20)" fg:x="20758" fg:w="4"/><text x="100.1393%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="99.9374%" y="1445" width="0.0144%" height="15" fill="rgb(210,190,26)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="99.9374%" y="1429" width="0.0144%" height="15" fill="rgb(223,147,5)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="99.9374%" y="1413" width="0.0144%" height="15" fill="rgb(207,14,23)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.9374%" y="1397" width="0.0144%" height="15" fill="rgb(211,195,53)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.9374%" y="1381" width="0.0144%" height="15" fill="rgb(237,75,46)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="99.9374%" y="1365" width="0.0144%" height="15" fill="rgb(254,55,14)" fg:x="20768" fg:w="3"/><text x="100.1874%" y="1375.50"></text></g><g><title>brc20_finance (20,773 samples, 99.96%)</title><rect x="0.0000%" y="1509" width="99.9615%" height="15" fill="rgb(230,185,30)" fg:x="0" fg:w="20773"/><text x="0.2500%" y="1519.50">brc20_finance</text></g><g><title>server::start_server::{{closure}} (169 samples, 0.81%)</title><rect x="99.1483%" y="1493" width="0.8132%" height="15" fill="rgb(220,14,11)" fg:x="20604" fg:w="169"/><text x="99.3983%" y="1503.50"></text></g><g><title>server::add_tx_to_block_wo_mutex (169 samples, 0.81%)</title><rect x="99.1483%" y="1477" width="0.8132%" height="15" fill="rgb(215,169,44)" fg:x="20604" fg:w="169"/><text x="99.3983%" y="1487.50"></text></g><g><title>server::types::get_tx_hash (5 samples, 0.02%)</title><rect x="99.9374%" y="1461" width="0.0241%" height="15" fill="rgb(253,203,20)" fg:x="20768" fg:w="5"/><text x="100.1874%" y="1471.50"></text></g><g><title>all (20,781 samples, 100%)</title><rect x="0.0000%" y="1525" width="100.0000%" height="15" fill="rgb(229,225,17)" fg:x="0" fg:w="20781"/><text x="0.2500%" y="1535.50"></text></g><g><title>perf-exec (8 samples, 0.04%)</title><rect x="99.9615%" y="1509" width="0.0385%" height="15" fill="rgb(236,76,26)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1519.50"></text></g><g><title>el0t_64_sync (8 samples, 0.04%)</title><rect x="99.9615%" y="1493" width="0.0385%" height="15" fill="rgb(234,15,30)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1503.50"></text></g><g><title>el0t_64_sync_handler (8 samples, 0.04%)</title><rect x="99.9615%" y="1477" width="0.0385%" height="15" fill="rgb(211,113,48)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1487.50"></text></g><g><title>el0_svc (8 samples, 0.04%)</title><rect x="99.9615%" y="1461" width="0.0385%" height="15" fill="rgb(221,31,36)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1471.50"></text></g><g><title>do_el0_svc (8 samples, 0.04%)</title><rect x="99.9615%" y="1445" width="0.0385%" height="15" fill="rgb(215,118,52)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1455.50"></text></g><g><title>el0_svc_common.constprop.0 (8 samples, 0.04%)</title><rect x="99.9615%" y="1429" width="0.0385%" height="15" fill="rgb(241,151,27)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1439.50"></text></g><g><title>invoke_syscall (8 samples, 0.04%)</title><rect x="99.9615%" y="1413" width="0.0385%" height="15" fill="rgb(253,51,3)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1423.50"></text></g><g><title>__arm64_sys_execve (8 samples, 0.04%)</title><rect x="99.9615%" y="1397" width="0.0385%" height="15" fill="rgb(216,201,24)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1407.50"></text></g><g><title>do_execveat_common.isra.0 (8 samples, 0.04%)</title><rect x="99.9615%" y="1381" width="0.0385%" height="15" fill="rgb(231,107,4)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1391.50"></text></g><g><title>bprm_execve (8 samples, 0.04%)</title><rect x="99.9615%" y="1365" width="0.0385%" height="15" fill="rgb(243,97,54)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1375.50"></text></g><g><title>bprm_execve.part.0 (8 samples, 0.04%)</title><rect x="99.9615%" y="1349" width="0.0385%" height="15" fill="rgb(221,32,51)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1359.50"></text></g><g><title>exec_binprm (8 samples, 0.04%)</title><rect x="99.9615%" y="1333" width="0.0385%" height="15" fill="rgb(218,171,35)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1343.50"></text></g><g><title>search_binary_handler (8 samples, 0.04%)</title><rect x="99.9615%" y="1317" width="0.0385%" height="15" fill="rgb(214,20,53)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1327.50"></text></g><g><title>load_elf_binary (8 samples, 0.04%)</title><rect x="99.9615%" y="1301" width="0.0385%" height="15" fill="rgb(239,9,52)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1311.50"></text></g><g><title>begin_new_exec (8 samples, 0.04%)</title><rect x="99.9615%" y="1285" width="0.0385%" height="15" fill="rgb(215,114,45)" fg:x="20773" fg:w="8"/><text x="100.2115%" y="1295.50"></text></g><g><title>perf_event_exec (7 samples, 0.03%)</title><rect x="99.9663%" y="1269" width="0.0337%" height="15" fill="rgb(208,118,9)" fg:x="20774" fg:w="7"/><text x="100.2163%" y="1279.50"></text></g></svg></svg>