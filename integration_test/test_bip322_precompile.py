import requests


def test_bip322_verification_true():
    response = requests.post(
        "http://localhost:18545",
        json={
            "jsonrpc": "2.0",
            "method": "eth_call",
            "params": {
                "from": "0x1234567890123456789012345678901234567890",
                "to": "0x00000000000000000000000000000000000000fe",
                "data": "0xff96254b000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000002a6263317139767a61326538783537336e637a726c7a6d7330777678336773716a7837766176676b78306c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000090416b677752514968414f7a79796e6c717439336c4f4b4a722b776d6d7849656e732f2f7a507a6c397471494f75613933774f364d41694269356e35457941635053634f6a66316c4171495549517472337a4b4e656176596162487952386547686f7745684173667849414d5a5a454b5550595749344272756841516a7a46543846534653616a75467772444c3159687900000000000000000000000000000000",
            },
            "id": 65,
        },
    )
    assert response.status_code == 200
    assert (
        response.json()["result"]["resultBytes"]
        == "0x0000000000000000000000000000000000000000000000000000000000000001"
    )


def test_bip322_verification_false():
    response = requests.post(
        "http://localhost:18545",
        json={
            "jsonrpc": "2.0",
            "method": "eth_call",
            "params": {
                "from": "0x1234567890123456789012345678901234567890",
                "to": "0x00000000000000000000000000000000000000fe",
                "data": "0xff96254b000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000002a6263317139767a61326538783537326e637a726c7a6d7330777678336773716a7837766176676b78306c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000090416b677752514968414f7a79796e6c717439336c4f4b4a722b776d6d7849656e732f2f7a507a6c397471494f75613933774f364d41694269356e35457941635053634f6a66316c4171495549517472337a4b4e656176596162487952386547686f7745684173667849414d5a5a454b5550595749344272756841516a7a46543846534653616a75467772444c3159687900000000000000000000000000000000",
            },
            "id": 65,
        },
    )
    assert response.status_code == 200
    assert (
        response.json()["result"]["resultBytes"]
        == "0x0000000000000000000000000000000000000000000000000000000000000000"
    )


if __name__ == "__main__":
    test_bip322_verification_true()
    test_bip322_verification_false()
